{
  "$schema": "http:\/\/json-schema.org\/draft-07\/schema#",
  "version": "5.131",
  "title": "VK API JSON Schema",
  "description": "Contains JSON Schema documents explaining the VK.COM API objects and methods",
  "termsOfService": "https:\/\/dev.vk.com\/rules",
  "methods": [
    {
      "name": "account.ban",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "owner_id",
          "type": "integer",
          "format": "int64",
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.changePassword",
      "description": "Changes a user password after access is successfully restored with the [vk.com\/dev\/auth.restore|auth.restore] method.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "restore_sid",
          "description": "Session id received after the [vk.com\/dev\/auth.restore|auth.restore] method is executed. (If the password is changed right after the access was restored)",
          "type": "string"
        },
        {
          "name": "change_password_hash",
          "description": "Hash received after a successful OAuth authorization with a code got by SMS. (If the password is changed right after the access was restored)",
          "type": "string"
        },
        {
          "name": "old_password",
          "description": "Current user password.",
          "type": "string"
        },
        {
          "name": "new_password",
          "description": "New password that will be set as a current",
          "type": "string",
          "required": true,
          "minLength": 6
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_changePassword_response"
        }
      }
    },
    {
      "name": "account.getActiveOffers",
      "description": "Returns a list of active ads (offers) which executed by the user will bring him\/her respective number of votes to his balance in the application.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "offset",
          "type": "integer",
          "default": 0,
          "minimum": 0
        },
        {
          "name": "count",
          "description": "Number of results to return.",
          "type": "integer",
          "default": 100,
          "minimum": 0,
          "maximum": 100
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getActiveOffers_response"
        }
      }
    },
    {
      "name": "account.getAppPermissions",
      "description": "Gets settings of the user in this application.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "user_id",
          "description": "User ID whose settings information shall be got. By default: current user.",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getAppPermissions_response"
        }
      }
    },
    {
      "name": "account.getBanned",
      "description": "Returns a user's blacklist.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "offset",
          "description": "Offset needed to return a specific subset of results.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "count",
          "description": "Number of results to return.",
          "type": "integer",
          "default": 20,
          "minimum": 0,
          "maximum": 200
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getBanned_response"
        }
      }
    },
    {
      "name": "account.getCounters",
      "description": "Returns non-null values of user counters.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "filter",
          "description": "Counters to be returned.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "friends",
              "messages",
              "photos",
              "notes",
              "gifts",
              "events",
              "groups",
              "sdk",
              "friends_suggestions",
              "notifications",
              "app_requests",
              "friends_recommendations"
            ]
          }
        },
        {
          "name": "user_id",
          "description": "User ID",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getCounters_response"
        }
      }
    },
    {
      "name": "account.getInfo",
      "description": "Returns current account info.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "fields",
          "description": "Fields to return. Possible values: *'country' \u2014 user country,, *'https_required' \u2014 is \"HTTPS only\" option enabled,, *'own_posts_default' \u2014 is \"Show my posts only\" option is enabled,, *'no_wall_replies' \u2014 are wall replies disabled or not,, *'intro' \u2014 is intro passed by user or not,, *'lang' \u2014 user language. By default: all.",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "country",
              "https_required",
              "own_posts_default",
              "no_wall_replies",
              "intro",
              "lang"
            ]
          }
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getInfo_response"
        }
      }
    },
    {
      "name": "account.getProfileInfo",
      "description": "Returns the current account info.",
      "access_token_type": [
        "user"
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getProfileInfo_response"
        }
      }
    },
    {
      "name": "account.getPushSettings",
      "description": "Gets settings of push notifications.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "device_id",
          "description": "Unique device ID.",
          "type": "string"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_getPushSettings_response"
        }
      }
    },
    {
      "name": "account.registerDevice",
      "description": "Subscribes an iOS\/Android\/Windows Phone-based device to receive push notifications",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "token",
          "description": "Device token used to send notifications. (for mpns, the token shall be URL for sending of notifications)",
          "type": "string",
          "required": true
        },
        {
          "name": "device_model",
          "description": "String name of device model.",
          "type": "string"
        },
        {
          "name": "device_year",
          "description": "Device year.",
          "type": "integer"
        },
        {
          "name": "device_id",
          "description": "Unique device ID.",
          "type": "string",
          "required": true
        },
        {
          "name": "system_version",
          "description": "String version of device operating system.",
          "type": "string"
        },
        {
          "name": "settings",
          "description": "Push settings in a [vk.com\/dev\/push_settings|special format].",
          "type": "string"
        },
        {
          "name": "sandbox",
          "type": "boolean",
          "default": 0
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.saveProfileInfo",
      "description": "Edits current profile info.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "first_name",
          "description": "User first name.",
          "type": "string"
        },
        {
          "name": "last_name",
          "description": "User last name.",
          "type": "string"
        },
        {
          "name": "maiden_name",
          "description": "User maiden name (female only)",
          "type": "string"
        },
        {
          "name": "screen_name",
          "description": "User screen name.",
          "type": "string"
        },
        {
          "name": "cancel_request_id",
          "description": "ID of the name change request to be canceled. If this parameter is sent, all the others are ignored.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "sex",
          "description": "User sex. Possible values: , * '1' - female,, * '2' - male.",
          "type": "integer",
          "minimum": 0,
          "enum": [
            0,
            1,
            2
          ],
          "enumNames": [
            "undefined",
            "female",
            "male"
          ]
        },
        {
          "name": "relation",
          "description": "User relationship status. Possible values: , * '1' - single,, * '2' - in a relationship,, * '3' - engaged,, * '4' - married,, * '5' - it's complicated,, * '6' - actively searching,, * '7' - in love,, * '0' - not specified.",
          "type": "integer",
          "minimum": 0,
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            0
          ],
          "enumNames": [
            "single",
            "relationship",
            "engaged",
            "married",
            "complicated",
            "actively searching",
            "in love",
            "not specified"
          ]
        },
        {
          "name": "relation_partner_id",
          "description": "ID of the relationship partner.",
          "type": "integer",
          "format": "int64",
          "minimum": 0,
          "entity": "owner"
        },
        {
          "name": "bdate",
          "description": "User birth date, format: DD.MM.YYYY.",
          "type": "string"
        },
        {
          "name": "bdate_visibility",
          "description": "Birth date visibility. Returned values: , * '1' - show birth date,, * '2' - show only month and day,, * '0' - hide birth date.",
          "type": "integer",
          "minimum": 0,
          "enum": [
            1,
            2,
            0
          ],
          "enumNames": [
            "show",
            "hide year",
            "hide"
          ]
        },
        {
          "name": "home_town",
          "description": "User home town.",
          "type": "string"
        },
        {
          "name": "country_id",
          "description": "User country.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "city_id",
          "description": "User city.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "status",
          "description": "Status text.",
          "type": "string"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/account_saveProfileInfo_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_invalid_address"
        }
      ]
    },
    {
      "name": "account.setInfo",
      "description": "Allows to edit the current account info.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "name",
          "description": "Setting name.",
          "type": "string",
          "enum": [
            "intro",
            "no_wall_replies",
            "own_posts_default"
          ]
        },
        {
          "name": "value",
          "description": "Setting value.",
          "type": "string"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.setOffline",
      "description": "Marks a current user as offline.",
      "access_token_type": [
        "user"
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.setOnline",
      "description": "Marks the current user as online for 15 minutes.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "voip",
          "description": "'1' if videocalls are available for current device.",
          "type": "boolean"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.setPushSettings",
      "description": "Change push settings.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "device_id",
          "description": "Unique device ID.",
          "type": "string",
          "required": true
        },
        {
          "name": "settings",
          "description": "Push settings in a [vk.com\/dev\/push_settings|special format].",
          "type": "string"
        },
        {
          "name": "key",
          "description": "Notification key.",
          "type": "string"
        },
        {
          "name": "value",
          "description": "New value for the key in a [vk.com\/dev\/push_settings|special format].",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.setSilenceMode",
      "description": "Mutes push notifications for the set period of time.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "device_id",
          "description": "Unique device ID.",
          "type": "string"
        },
        {
          "name": "time",
          "description": "Time in seconds for what notifications should be disabled. '-1' to disable forever.",
          "type": "integer"
        },
        {
          "name": "peer_id",
          "description": "Destination ID. \"For user: 'User ID', e.g. '12345'. For chat: '2000000000' + 'Chat ID', e.g. '2000000001'. For community: '- Community ID', e.g. '-12345'. \"",
          "type": "integer"
        },
        {
          "name": "sound",
          "description": "'1' \u2014 to enable sound in this dialog, '0' \u2014 to disable sound. Only if 'peer_id' contains user or community ID.",
          "type": "integer"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.unban",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "owner_id",
          "type": "integer",
          "format": "int64",
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "account.unregisterDevice",
      "description": "Unsubscribes a device from push notifications.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "device_id",
          "description": "Unique device ID.",
          "type": "string"
        },
        {
          "name": "sandbox",
          "type": "boolean",
          "default": 0
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "ads.getDemographics",
      "description": "Returns demographics for ads or campaigns.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "ids_type",
          "description": "Type of requested objects listed in 'ids' parameter: *ad \u2014 ads,, *campaign \u2014 campaigns.",
          "type": "string",
          "required": true,
          "enum": [
            "ad",
            "campaign"
          ]
        },
        {
          "name": "ids",
          "description": "IDs requested ads or campaigns, separated with a comma, depending on the value set in 'ids_type'. Maximum 2000 objects.",
          "type": "string",
          "required": true
        },
        {
          "name": "period",
          "description": "Data grouping by dates: *day \u2014 statistics by days,, *month \u2014 statistics by months,, *overall \u2014 overall statistics. 'date_from' and 'date_to' parameters set temporary limits.",
          "type": "string",
          "required": true,
          "enum": [
            "day",
            "month",
            "overall"
          ]
        },
        {
          "name": "date_from",
          "description": "Date to show statistics from. For different value of 'period' different date format is used: *day: YYYY-MM-DD, example: 2011-09-27 \u2014 September 27, 2011, **0 \u2014 day it was created on,, *month: YYYY-MM, example: 2011-09 \u2014 September 2011, **0 \u2014 month it was created in,, *overall: 0.",
          "type": "string",
          "required": true
        },
        {
          "name": "date_to",
          "description": "Date to show statistics to. For different value of 'period' different date format is used: *day: YYYY-MM-DD, example: 2011-09-27 \u2014 September 27, 2011, **0 \u2014 current day,, *month: YYYY-MM, example: 2011-09 \u2014 September 2011, **0 \u2014 current month,, *overall: 0.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getDemographics_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getFloodStats",
      "description": "Returns information about current state of a counter \u2014 number of remaining runs of methods and time to the next counter nulling in seconds.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getFloodStats_response"
        }
      }
    },
    {
      "name": "ads.getLookalikeRequests",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "type": "integer",
          "required": true
        },
        {
          "name": "client_id",
          "type": "integer"
        },
        {
          "name": "requests_ids",
          "type": "string"
        },
        {
          "name": "offset",
          "type": "integer",
          "default": 0,
          "minimum": 0
        },
        {
          "name": "limit",
          "type": "integer",
          "default": 10,
          "minimum": 0,
          "maximum": 200
        },
        {
          "name": "sort_by",
          "type": "string",
          "default": "id"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getLookalikeRequests_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getMusicians",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "artist_name",
          "type": "string",
          "required": true,
          "minLength": 3
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getMusicians_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        },
        {
          "$ref": "#\/errors\/api_error_not_found"
        }
      ]
    },
    {
      "name": "ads.getMusiciansByIds",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "ids",
          "type": "array",
          "required": true,
          "items": {
            "type": "integer",
            "minimum": 0
          },
          "maxItems": 200
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getMusicians_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getOfficeUsers",
      "description": "Returns a list of managers and supervisors of advertising account.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getOfficeUsers_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getPostsReach",
      "description": "Returns detailed statistics of promoted posts reach from campaigns and ads.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "ids_type",
          "description": "Type of requested objects listed in 'ids' parameter: *ad \u2014 ads,, *campaign \u2014 campaigns.",
          "type": "string",
          "required": true,
          "enum": [
            "ad",
            "campaign"
          ]
        },
        {
          "name": "ids",
          "description": "IDs requested ads or campaigns, separated with a comma, depending on the value set in 'ids_type'. Maximum 100 objects.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getPostsReach_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getRejectionReason",
      "description": "Returns a reason of ad rejection for pre-moderation.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "ad_id",
          "description": "Ad ID.",
          "type": "integer",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getRejectionReason_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getStatistics",
      "description": "Returns statistics of performance indicators for ads, campaigns, clients or the whole account.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "ids_type",
          "description": "Type of requested objects listed in 'ids' parameter: *ad \u2014 ads,, *campaign \u2014 campaigns,, *client \u2014 clients,, *office \u2014 account.",
          "type": "string",
          "required": true,
          "enum": [
            "ad",
            "campaign",
            "client",
            "office"
          ]
        },
        {
          "name": "ids",
          "description": "IDs requested ads, campaigns, clients or account, separated with a comma, depending on the value set in 'ids_type'. Maximum 2000 objects.",
          "type": "string",
          "required": true
        },
        {
          "name": "period",
          "description": "Data grouping by dates: *day \u2014 statistics by days,, *month \u2014 statistics by months,, *overall \u2014 overall statistics. 'date_from' and 'date_to' parameters set temporary limits.",
          "type": "string",
          "required": true,
          "enum": [
            "day",
            "month",
            "overall"
          ]
        },
        {
          "name": "date_from",
          "description": "Date to show statistics from. For different value of 'period' different date format is used: *day: YYYY-MM-DD, example: 2011-09-27 \u2014 September 27, 2011, **0 \u2014 day it was created on,, *month: YYYY-MM, example: 2011-09 \u2014 September 2011, **0 \u2014 month it was created in,, *overall: 0.",
          "type": "string",
          "required": true
        },
        {
          "name": "date_to",
          "description": "Date to show statistics to. For different value of 'period' different date format is used: *day: YYYY-MM-DD, example: 2011-09-27 \u2014 September 27, 2011, **0 \u2014 current day,, *month: YYYY-MM, example: 2011-09 \u2014 September 2011, **0 \u2014 current month,, *overall: 0.",
          "type": "string",
          "required": true
        },
        {
          "name": "stats_fields",
          "description": "Additional fields to add to statistics",
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "views_times"
            ]
          }
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getStatistics_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getSuggestions",
      "description": "Returns a set of auto-suggestions for various targeting parameters.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "section",
          "description": "Section, suggestions are retrieved in. Available values: *countries \u2014 request of a list of countries. If q is not set or blank, a short list of countries is shown. Otherwise, a full list of countries is shown. *regions \u2014 requested list of regions. 'country' parameter is required. *cities \u2014 requested list of cities. 'country' parameter is required. *districts \u2014 requested list of districts. 'cities' parameter is required. *stations \u2014 requested list of subway stations. 'cities' parameter is required. *streets \u2014 requested list of streets. 'cities' parameter is required. *schools \u2014 requested list of educational organizations. 'cities' parameter is required. *interests \u2014 requested list of interests. *positions \u2014 requested list of positions (professions). *group_types \u2014 requested list of group types. *religions \u2014 requested list of religious commitments. *browsers \u2014 requested list of browsers and mobile devices.",
          "type": "string",
          "required": true,
          "enum": [
            "countries",
            "regions",
            "cities",
            "districts",
            "stations",
            "streets",
            "schools",
            "interests",
            "positions",
            "group_types",
            "religions",
            "browsers"
          ]
        },
        {
          "name": "ids",
          "description": "Objects IDs separated by commas. If the parameter is passed, 'q, country, cities' should not be passed.",
          "type": "string"
        },
        {
          "name": "q",
          "description": "Filter-line of the request (for countries, regions, cities, streets, schools, interests, positions).",
          "type": "string"
        },
        {
          "name": "country",
          "description": "ID of the country objects are searched in.",
          "type": "integer"
        },
        {
          "name": "cities",
          "description": "IDs of cities where objects are searched in, separated with a comma.",
          "type": "string"
        },
        {
          "name": "lang",
          "description": "Language of the returned string values. Supported languages: *ru \u2014 Russian,, *ua \u2014 Ukrainian,, *en \u2014 English.",
          "type": "string",
          "enum": [
            "ru",
            "ua",
            "en"
          ],
          "enumNames": [
            "russian",
            "ukrainian",
            "english"
          ]
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getSuggestions_response"
        },
        "regionsResponse": {
          "$ref": "#\/definitions\/ads_getSuggestions_regions_response"
        },
        "citiesResponse": {
          "$ref": "#\/definitions\/ads_getSuggestions_cities_response"
        },
        "schoolsResponse": {
          "$ref": "#\/definitions\/ads_getSuggestions_schools_response"
        }
      }
    },
    {
      "name": "ads.getTargetGroups",
      "description": "Returns a list of target groups.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "client_id",
          "description": "'Only for advertising agencies.', ID of the client with the advertising account where the group will be created.",
          "type": "integer"
        },
        {
          "name": "extended",
          "description": "'1' \u2014 to return pixel code.",
          "type": "boolean"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getTargetGroups_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getTargetingStats",
      "description": "Returns the size of targeting audience, and also recommended values for CPC and CPM.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "client_id",
          "type": "integer"
        },
        {
          "name": "criteria",
          "description": "Serialized JSON object that describes targeting parameters. Description of 'criteria' object see below.",
          "type": "string"
        },
        {
          "name": "ad_id",
          "description": "ID of an ad which targeting parameters shall be analyzed.",
          "type": "integer"
        },
        {
          "name": "ad_format",
          "description": "Ad format. Possible values: *'1' \u2014 image and text,, *'2' \u2014 big image,, *'3' \u2014 exclusive format,, *'4' \u2014 community, square image,, *'7' \u2014 special app format,, *'8' \u2014 special community format,, *'9' \u2014 post in community,, *'10' \u2014 app board.",
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            7,
            8,
            9,
            10
          ],
          "enumNames": [
            "image and text",
            "big image",
            "exclusive format",
            "community square image",
            "special app format",
            "special community format",
            "post in community",
            "app board"
          ]
        },
        {
          "name": "ad_platform",
          "description": "Platforms to use for ad showing. Possible values: (for 'ad_format' = '1'), *'0' \u2014 VK and partner sites,, *'1' \u2014 VK only. (for 'ad_format' = '9'), *'all' \u2014 all platforms,, *'desktop' \u2014 desktop version,, *'mobile' \u2014 mobile version and apps.",
          "type": "string"
        },
        {
          "name": "ad_platform_no_wall",
          "type": "string"
        },
        {
          "name": "ad_platform_no_ad_network",
          "type": "string"
        },
        {
          "name": "publisher_platforms",
          "type": "string"
        },
        {
          "name": "link_url",
          "description": "URL for the advertised object.",
          "type": "string",
          "required": true
        },
        {
          "name": "link_domain",
          "description": "Domain of the advertised object.",
          "type": "string"
        },
        {
          "name": "need_precise",
          "description": "Additionally return recommended cpc and cpm to reach 5,10..95 percents of audience.",
          "type": "boolean"
        },
        {
          "name": "impressions_limit_period",
          "description": "Impressions limit period in seconds, must be a multiple of 86400(day)",
          "type": "integer"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getTargetingStats_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.getUploadURL",
      "description": "Returns URL to upload an ad photo to.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "ad_format",
          "description": "Ad format: *1 \u2014 image and text,, *2 \u2014 big image,, *3 \u2014 exclusive format,, *4 \u2014 community, square image,, *7 \u2014 special app format.",
          "type": "integer",
          "required": true,
          "enum": [
            1,
            2,
            3,
            4,
            7
          ],
          "enumNames": [
            "image and text",
            "big image",
            "exclusive format",
            "community, square image",
            "special app format"
          ]
        },
        {
          "name": "icon",
          "type": "integer"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getUploadURL_response"
        }
      }
    },
    {
      "name": "ads.getVideoUploadURL",
      "description": "Returns URL to upload an ad video to.",
      "access_token_type": [
        "user"
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_getVideoUploadURL_response"
        }
      }
    },
    {
      "name": "ads.importTargetContacts",
      "description": "Imports a list of advertiser's contacts to count VK registered users against the target group.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "client_id",
          "description": "'Only for advertising agencies.' , ID of the client with the advertising account where the group will be created.",
          "type": "integer"
        },
        {
          "name": "target_group_id",
          "description": "Target group ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "contacts",
          "description": "List of phone numbers, emails or user IDs separated with a comma.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_importTargetContacts_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.removeOfficeUsers",
      "description": "Removes managers and\/or supervisors from advertising account.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "ids",
          "description": "Serialized JSON array with IDs of deleted managers.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_removeOfficeUsers_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.updateAds",
      "description": "Edits ads.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "data",
          "description": "Serialized JSON array of objects that describe changes in ads. Description of 'ad_edit_specification' objects see below.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_updateAds_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.updateCampaigns",
      "description": "Edits advertising campaigns.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "data",
          "description": "Serialized JSON array of objects that describe changes in campaigns. Description of 'campaign_mod' objects see below.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_updateCampaigns_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_ads_partial_success"
        },
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.updateClients",
      "description": "Edits clients of an advertising agency.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "data",
          "description": "Serialized JSON array of objects that describe changes in clients. Description of 'client_mod' objects see below.",
          "type": "string",
          "required": true
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_updateClients_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.updateOfficeUsers",
      "description": "Adds managers and\/or supervisors to advertising account.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true,
          "minimum": 0
        },
        {
          "name": "data",
          "description": "Serialized JSON array of objects that describe added managers. Description of 'user_specification' objects see below.",
          "type": "string",
          "required": true,
          "format": "json",
          "items": {
            "$ref": "#\/definitions\/ads_user_specification"
          },
          "minItems": 1,
          "maxItems": 10
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/ads_updateOfficeUsers_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "ads.updateTargetGroup",
      "description": "Edits a retarget group.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "account_id",
          "description": "Advertising account ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "client_id",
          "description": "'Only for advertising agencies.' , ID of the client with the advertising account where the group will be created.",
          "type": "integer"
        },
        {
          "name": "target_group_id",
          "description": "Group ID.",
          "type": "integer",
          "required": true
        },
        {
          "name": "name",
          "description": "New name of the target group \u2014 a string up to 64 characters long.",
          "type": "string",
          "required": true
        },
        {
          "name": "domain",
          "description": "Domain of the site where user accounting code will be placed.",
          "type": "string"
        },
        {
          "name": "lifetime",
          "description": "'Only for the groups that get audience from sites with user accounting code.', Time in days when users added to a retarget group will be automatically excluded from it. '0' - automatic exclusion is off.",
          "type": "integer",
          "required": true,
          "minimum": 1,
          "maximum": 720
        },
        {
          "name": "target_pixel_id",
          "type": "integer"
        },
        {
          "name": "target_pixel_rules",
          "type": "string"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_weighted_flood"
        }
      ]
    },
    {
      "name": "groups.reorderLink",
      "description": "Allows to reorder links in the community.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "group_id",
          "description": "Community ID.",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "link_id",
          "description": "Link ID.",
          "type": "integer",
          "required": true,
          "minimum": 0
        },
        {
          "name": "after",
          "description": "ID of the link after which to place the link with 'link_id'.",
          "type": "integer",
          "minimum": 0
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "groups.search",
      "description": "Returns a list of communities matching the search criteria.",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "q",
          "description": "Search query string.",
          "type": "string",
          "required": true
        },
        {
          "name": "type",
          "description": "Community type. Possible values: 'group, page, event.'",
          "type": "string",
          "enum": [
            "group",
            "page",
            "event"
          ]
        },
        {
          "name": "country_id",
          "description": "Country ID.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "city_id",
          "description": "City ID. If this parameter is transmitted, country_id is ignored.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "future",
          "description": "'1' \u2014 to return only upcoming events. Works with the 'type' = 'event' only.",
          "type": "boolean"
        },
        {
          "name": "market",
          "description": "'1' \u2014 to return communities with enabled market only.",
          "type": "boolean"
        },
        {
          "name": "sort",
          "description": "Sort order. Possible values: *'0' \u2014 default sorting (similar the full version of the site),, *'1' \u2014 by growth speed,, *'2'\u2014 by the \"day attendance\/members number\" ratio,, *'3' \u2014 by the \"Likes number\/members number\" ratio,, *'4' \u2014 by the \"comments number\/members number\" ratio,, *'5' \u2014 by the \"boards entries number\/members number\" ratio.",
          "type": "integer",
          "enum": [
            0,
            1,
            2,
            3,
            4,
            5
          ],
          "enumNames": [
            "default",
            "growth",
            "attendance",
            "likes",
            "comments",
            "entries"
          ]
        },
        {
          "name": "offset",
          "description": "Offset needed to return a specific subset of results.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "count",
          "description": "Number of communities to return. \"Note that you can not receive more than first thousand of results, regardless of 'count' and 'offset' values.\"",
          "type": "integer",
          "default": 20,
          "minimum": 0,
          "maximum": 1000
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/groups_search_response"
        }
      }
    },
    {
      "name": "groups.setCallbackSettings",
      "description": "Allow to set notifications settings for group.",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "description": "Community ID.",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "server_id",
          "description": "Server ID.",
          "type": "integer",
          "minimum": 0
        },
        {
          "name": "api_version",
          "type": "string"
        },
        {
          "name": "message_new",
          "description": "A new incoming message has been received ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_reply",
          "description": "A new outcoming message has been received ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_allow",
          "description": "Allowed messages notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_edit",
          "type": "boolean"
        },
        {
          "name": "message_deny",
          "description": "Denied messages notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_typing_state",
          "type": "boolean"
        },
        {
          "name": "photo_new",
          "description": "New photos notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "audio_new",
          "description": "New audios notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_new",
          "description": "New videos notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_new",
          "description": "New wall replies notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_edit",
          "description": "Wall replies edited notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_delete",
          "description": "A wall comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_restore",
          "description": "A wall comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_post_new",
          "description": "New wall posts notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_repost",
          "description": "New wall posts notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_new",
          "description": "New board posts notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_edit",
          "description": "Board posts edited notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_restore",
          "description": "Board posts restored notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_delete",
          "description": "Board posts deleted notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_new",
          "description": "New comment to photo notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_edit",
          "description": "A photo comment has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_delete",
          "description": "A photo comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_restore",
          "description": "A photo comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_new",
          "description": "New comment to video notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_edit",
          "description": "A video comment has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_delete",
          "description": "A video comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_restore",
          "description": "A video comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_new",
          "description": "New comment to market item notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_edit",
          "description": "A market comment has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_delete",
          "description": "A market comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_restore",
          "description": "A market comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_order_new",
          "type": "boolean"
        },
        {
          "name": "market_order_edit",
          "type": "boolean"
        },
        {
          "name": "poll_vote_new",
          "description": "A vote in a public poll has been added ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "group_join",
          "description": "Joined community notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "group_leave",
          "description": "Left community notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "group_change_settings",
          "type": "boolean"
        },
        {
          "name": "group_change_photo",
          "type": "boolean"
        },
        {
          "name": "group_officers_edit",
          "type": "boolean"
        },
        {
          "name": "user_block",
          "description": "User added to community blacklist",
          "type": "boolean"
        },
        {
          "name": "user_unblock",
          "description": "User removed from community blacklist",
          "type": "boolean"
        },
        {
          "name": "lead_forms_new",
          "description": "New form in lead forms",
          "type": "boolean"
        },
        {
          "name": "like_add",
          "type": "boolean"
        },
        {
          "name": "like_remove",
          "type": "boolean"
        },
        {
          "name": "message_event",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_create",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_prolonged",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_cancelled",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_price_changed",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_expired",
          "type": "boolean"
        },
        {
          "name": "donut_money_withdraw",
          "type": "boolean"
        },
        {
          "name": "donut_money_withdraw_error",
          "type": "boolean"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_not_found"
        }
      ]
    },
    {
      "name": "groups.setLongPollSettings",
      "description": "Sets Long Poll notification settings",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "description": "Community ID.",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "enabled",
          "description": "Sets whether Long Poll is enabled ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "api_version",
          "type": "string"
        },
        {
          "name": "message_new",
          "description": "A new incoming message has been received ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_reply",
          "description": "A new outcoming message has been received ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_allow",
          "description": "Allowed messages notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_deny",
          "description": "Denied messages notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_edit",
          "description": "A message has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "message_typing_state",
          "type": "boolean"
        },
        {
          "name": "photo_new",
          "description": "New photos notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "audio_new",
          "description": "New audios notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_new",
          "description": "New videos notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_new",
          "description": "New wall replies notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_edit",
          "description": "Wall replies edited notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_delete",
          "description": "A wall comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_reply_restore",
          "description": "A wall comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_post_new",
          "description": "New wall posts notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "wall_repost",
          "description": "New wall posts notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_new",
          "description": "New board posts notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_edit",
          "description": "Board posts edited notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_restore",
          "description": "Board posts restored notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "board_post_delete",
          "description": "Board posts deleted notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_new",
          "description": "New comment to photo notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_edit",
          "description": "A photo comment has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_delete",
          "description": "A photo comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "photo_comment_restore",
          "description": "A photo comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_new",
          "description": "New comment to video notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_edit",
          "description": "A video comment has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_delete",
          "description": "A video comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "video_comment_restore",
          "description": "A video comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_new",
          "description": "New comment to market item notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_edit",
          "description": "A market comment has been edited ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_delete",
          "description": "A market comment has been deleted ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "market_comment_restore",
          "description": "A market comment has been restored ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "poll_vote_new",
          "description": "A vote in a public poll has been added ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "group_join",
          "description": "Joined community notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "group_leave",
          "description": "Left community notifications ('0' \u2014 disabled, '1' \u2014 enabled).",
          "type": "boolean"
        },
        {
          "name": "group_change_settings",
          "type": "boolean"
        },
        {
          "name": "group_change_photo",
          "type": "boolean"
        },
        {
          "name": "group_officers_edit",
          "type": "boolean"
        },
        {
          "name": "user_block",
          "description": "User added to community blacklist",
          "type": "boolean"
        },
        {
          "name": "user_unblock",
          "description": "User removed from community blacklist",
          "type": "boolean"
        },
        {
          "name": "like_add",
          "type": "boolean"
        },
        {
          "name": "like_remove",
          "type": "boolean"
        },
        {
          "name": "message_event",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_create",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_prolonged",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_cancelled",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_price_changed",
          "type": "boolean"
        },
        {
          "name": "donut_subscription_expired",
          "type": "boolean"
        },
        {
          "name": "donut_money_withdraw",
          "type": "boolean"
        },
        {
          "name": "donut_money_withdraw_error",
          "type": "boolean"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "groups.setSettings",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "messages",
          "type": "boolean"
        },
        {
          "name": "bots_capabilities",
          "type": "boolean"
        },
        {
          "name": "bots_start_button",
          "type": "boolean"
        },
        {
          "name": "bots_add_to_chat",
          "type": "boolean"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    },
    {
      "name": "groups.setUserNote",
      "description": "In order to save note about group participant",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "note",
          "description": "Note body",
          "type": "string",
          "maxLength": 96
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_bool_response"
        }
      }
    },
    {
      "name": "groups.tagAdd",
      "description": "Add new group's tag",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "tag_name",
          "type": "string",
          "required": true,
          "maxLength": 20
        },
        {
          "name": "tag_color",
          "type": "string",
          "enum": [
            "454647",
            "45678f",
            "4bb34b",
            "5181b8",
            "539b9c",
            "5c9ce6",
            "63b9ba",
            "6bc76b",
            "76787a",
            "792ec0",
            "7a6c4f",
            "7ececf",
            "9e8d6b",
            "a162de",
            "aaaeb3",
            "bbaa84",
            "e64646",
            "ff5c5c",
            "ffa000",
            "ffc107"
          ]
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_bool_response"
        }
      }
    },
    {
      "name": "groups.tagBind",
      "description": "Bind or unbind group's tag to user",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "tag_id",
          "type": "integer",
          "required": true,
          "minimum": 0
        },
        {
          "name": "user_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "maximum": 2000000000,
          "entity": "owner"
        },
        {
          "name": "act",
          "description": "Describe the action",
          "type": "string",
          "required": true,
          "enum": [
            "bind",
            "unbind"
          ]
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_bool_response"
        }
      }
    },
    {
      "name": "groups.tagDelete",
      "description": "Delete group's tag",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "tag_id",
          "type": "integer",
          "required": true,
          "minimum": 0
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_bool_response"
        }
      }
    },
    {
      "name": "groups.tagUpdate",
      "description": "Update group's tag",
      "access_token_type": [
        "user",
        "group"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "tag_id",
          "type": "integer",
          "required": true,
          "minimum": 0
        },
        {
          "name": "tag_name",
          "type": "string",
          "required": true,
          "maxLength": 20
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_bool_response"
        }
      }
    },
    {
      "name": "groups.toggleMarket",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "state",
          "type": "string",
          "required": true,
          "enum": [
            "advanced",
            "basic",
            "none"
          ],
          "$ref": "#\/definitions\/groups_market_state"
        },
        {
          "name": "ref",
          "type": "string"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      },
      "errors": [
        {
          "$ref": "#\/errors\/api_error_market_shop_already_enabled"
        },
        {
          "$ref": "#\/errors\/api_error_market_shop_already_disabled"
        }
      ]
    },
    {
      "name": "groups.unban",
      "access_token_type": [
        "user"
      ],
      "parameters": [
        {
          "name": "group_id",
          "type": "integer",
          "required": true,
          "format": "int64",
          "minimum": 1,
          "entity": "owner"
        },
        {
          "name": "owner_id",
          "type": "integer",
          "format": "int64",
          "entity": "owner"
        }
      ],
      "responses": {
        "response": {
          "$ref": "#\/definitions\/base_ok_response"
        }
      }
    }
  ],
  "definitions": {
    "subcodes": {
      "too_many_communities": {
        "subcode": 1
      },
      "user_reached_linked_accounts_limit": {
        "subcode": 1000
      },
      "service_uuid_link_with_another_user": {
        "subcode": 1001
      }
    },
    "account_account_counters": {
      "type": "object",
      "properties": {
        "app_requests": {
          "type": "integer",
          "description": "New app requests number",
          "minimum": 1
        },
        "events": {
          "type": "integer",
          "description": "New events number",
          "minimum": 1
        },
        "faves": {
          "type": "integer",
          "description": "New faves number",
          "minimum": 1
        },
        "friends": {
          "type": "integer",
          "description": "New friends requests number",
          "minimum": 1
        },
        "friends_suggestions": {
          "type": "integer",
          "description": "New friends suggestions number",
          "minimum": 1
        },
        "friends_recommendations": {
          "type": "integer",
          "description": "New friends recommendations number",
          "minimum": 1
        },
        "gifts": {
          "type": "integer",
          "description": "New gifts number",
          "minimum": 1
        },
        "groups": {
          "type": "integer",
          "description": "New groups number",
          "minimum": 1
        },
        "menu_discover_badge": {
          "type": "integer"
        },
        "menu_clips_badge": {
          "type": "integer"
        },
        "messages": {
          "type": "integer",
          "description": "New messages number",
          "minimum": 1
        },
        "memories": {
          "type": "integer",
          "description": "New memories number",
          "minimum": 1
        },
        "notes": {
          "type": "integer",
          "description": "New notes number",
          "minimum": 1
        },
        "notifications": {
          "type": "integer",
          "description": "New notifications number",
          "minimum": 1
        },
        "photos": {
          "type": "integer",
          "description": "New photo tags number",
          "minimum": 1
        },
        "sdk": {
          "type": "integer",
          "description": "New sdk number",
          "minimum": 1
        }
      },
      "additionalProperties": false
    },
    "account_info": {
      "type": "object",
      "properties": {
        "wishlists_ae_promo_banner_show": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "2fa_required": {
          "description": "Two factor authentication is enabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "country": {
          "type": "string",
          "description": "Country code"
        },
        "https_required": {
          "description": "Information whether HTTPS-only is enabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "intro": {
          "description": "Information whether user has been processed intro",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "show_vk_apps_intro": {
          "type": "boolean"
        },
        "mini_apps_ads_slot_id": {
          "description": "Ads slot id for MyTarget",
          "minimum": 0,
          "type": "integer"
        },
        "qr_promotion": {
          "type": "integer",
          "minimum": 0
        },
        "link_redirects": {
          "type": "object"
        },
        "lang": {
          "type": "integer",
          "description": "Language ID"
        },
        "no_wall_replies": {
          "description": "Information whether wall comments should be hidden",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "own_posts_default": {
          "description": "Information whether only owners posts should be shown",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "subscriptions": {
          "type": "object",
          "$ref": "#\/definitions\/account_subscriptions"
        }
      },
      "additionalProperties": false
    },
    "account_name_request": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "First name in request"
        },
        "id": {
          "type": "integer",
          "description": "Request ID needed to cancel the request"
        },
        "last_name": {
          "type": "string",
          "description": "Last name in request"
        },
        "status": {
          "$ref": "#\/definitions\/account_name_request_status"
        },
        "lang": {
          "type": "string",
          "description": "Text to display to user"
        },
        "link_href": {
          "type": "string",
          "description": "href for link in lang field"
        },
        "link_label": {
          "type": "string",
          "description": "label to display for link in lang field"
        }
      },
      "additionalProperties": false
    },
    "account_name_request_status": {
      "type": "string",
      "description": "Request status",
      "enum": [
        "success",
        "processing",
        "declined",
        "was_accepted",
        "was_declined",
        "declined_with_link",
        "response",
        "response_with_link"
      ]
    },
    "account_offer": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Offer description"
        },
        "id": {
          "type": "integer",
          "description": "Offer ID"
        },
        "img": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "instruction": {
          "type": "string",
          "description": "Instruction how to process the offer"
        },
        "instruction_html": {
          "type": "string",
          "description": "Instruction how to process the offer (HTML format)"
        },
        "price": {
          "type": "integer",
          "description": "Offer price"
        },
        "short_description": {
          "type": "string",
          "description": "Offer short description"
        },
        "tag": {
          "type": "string",
          "description": "Offer tag"
        },
        "title": {
          "type": "string",
          "description": "Offer title"
        },
        "currency_amount": {
          "type": "number",
          "description": "Currency amount"
        },
        "link_id": {
          "type": "integer",
          "description": "Link id"
        },
        "link_type": {
          "type": "string",
          "description": "Link type",
          "enum": [
            "profile",
            "group",
            "app"
          ]
        }
      },
      "additionalProperties": false
    },
    "account_push_conversations": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Items count"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_conversations_item"
          }
        }
      },
      "additionalProperties": false
    },
    "account_push_conversations_item": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in seconds",
          "required": true
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID",
          "required": true
        },
        "sound": {
          "description": "Information whether the sound are enabled",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "disabled_mentions": {
          "description": "Information whether the mentions are disabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "disabled_mass_mentions": {
          "description": "Information whether the mass mentions (like '@all', '@online') are disabled. Can be affected by 'disabled_mentions'",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "account_push_params": {
      "type": "object",
      "properties": {
        "msg": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_mode"
          }
        },
        "chat": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_mode"
          }
        },
        "like": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_settings"
          }
        },
        "repost": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_settings"
          }
        },
        "comment": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_settings"
          }
        },
        "mention": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_settings"
          }
        },
        "reply": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "new_post": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "wall_post": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "wall_publish": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "friend": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "friend_found": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "friend_accepted": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "group_invite": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "group_accepted": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "birthday": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "event_soon": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "app_request": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        },
        "sdk_open": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/account_push_params_onoff"
          }
        }
      },
      "additionalProperties": false
    },
    "account_push_params_mode": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "no_sound",
        "no_text"
      ]
    },
    "account_push_params_onoff": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off"
      ]
    },
    "account_push_params_settings": {
      "type": "string",
      "description": "Settings parameters",
      "enum": [
        "on",
        "off",
        "fr_of_fr"
      ]
    },
    "account_push_settings": {
      "type": "object",
      "properties": {
        "disabled": {
          "description": "Information whether notifications are disabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled in Unixtime"
        },
        "settings": {
          "$ref": "#\/definitions\/account_push_params"
        },
        "conversations": {
          "$ref": "#\/definitions\/account_push_conversations"
        }
      },
      "additionalProperties": false
    },
    "account_subscriptions": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "account_user_settings": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user_min"
        },
        {
          "$ref": "#\/definitions\/users_user_settings_xtr"
        },
        {
          "properties": {
            "photo_200": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 200 pixels in width"
            },
            "is_service_account": {
              "type": "boolean",
              "description": "flag about service account"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "account_user_settings_interest": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_user_settings_interests": {
      "type": "object",
      "properties": {
        "activities": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "interests": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "music": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "tv": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "movies": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "books": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "games": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "quotes": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        },
        "about": {
          "$ref": "#\/definitions\/account_user_settings_interest"
        }
      },
      "additionalProperties": false
    },
    "account_changePassword_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "New token",
              "required": true
            },
            "secret": {
              "type": "string",
              "description": "New secret"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getActiveOffers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/account_offer"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getAppPermissions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Permissions mask",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getBanned_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "entity": "owner",
                "format": "int64",
                "type": "integer"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getCounters_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/account_account_counters",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getInfo_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/account_info",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getProfileInfo_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/account_user_settings",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_getPushSettings_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/account_push_settings",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "account_saveProfileInfo_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "changed": {
              "description": "1 if changes has been processed",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            },
            "name_request": {
              "$ref": "#\/definitions\/account_name_request"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "addresses_fields": {
      "type": "string",
      "enum": [
        "id",
        "title",
        "address",
        "additional_address",
        "country_id",
        "city_id",
        "metro_station_id",
        "latitude",
        "longitude",
        "distance",
        "work_info_status",
        "timetable",
        "phone",
        "time_offset"
      ]
    },
    "ads_access_role": {
      "type": "string",
      "description": "Current user's role",
      "enum": [
        "admin",
        "manager",
        "reports"
      ]
    },
    "ads_access_role_public": {
      "type": "string",
      "description": "Current user's role",
      "enum": [
        "manager",
        "reports"
      ]
    },
    "ads_accesses": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string",
          "description": "Client ID"
        },
        "role": {
          "$ref": "#\/definitions\/ads_access_role"
        }
      },
      "additionalProperties": false
    },
    "ads_account": {
      "type": "object",
      "properties": {
        "access_role": {
          "$ref": "#\/definitions\/ads_access_role",
          "required": true
        },
        "account_id": {
          "type": "integer",
          "description": "Account ID",
          "required": true
        },
        "account_status": {
          "description": "Information whether account is active",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "account_type": {
          "$ref": "#\/definitions\/ads_account_type",
          "required": true
        },
        "account_name": {
          "type": "string",
          "description": "Account name",
          "required": true
        },
        "can_view_budget": {
          "type": "boolean",
          "description": "Can user view account budget",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_account_type": {
      "type": "string",
      "description": "Account type",
      "enum": [
        "general",
        "agency"
      ]
    },
    "ads_ad": {
      "type": "object",
      "properties": {
        "ad_format": {
          "type": "integer",
          "description": "Ad format",
          "required": true
        },
        "ad_platform": {
          "type": [
            "integer",
            "string"
          ],
          "description": "Ad platform"
        },
        "all_limit": {
          "type": "integer",
          "description": "Total limit",
          "required": true
        },
        "approved": {
          "$ref": "#\/definitions\/ads_ad_approved",
          "required": true
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        },
        "category1_id": {
          "type": "integer",
          "description": "Category ID"
        },
        "category2_id": {
          "type": "integer",
          "description": "Additional category ID"
        },
        "cost_type": {
          "$ref": "#\/definitions\/ads_ad_cost_type",
          "required": true
        },
        "cpc": {
          "type": "integer",
          "description": "Cost of a click, kopecks"
        },
        "cpm": {
          "type": "integer",
          "description": "Cost of 1000 impressions, kopecks"
        },
        "cpa": {
          "type": "integer",
          "description": "Cost of an action, kopecks"
        },
        "ocpm": {
          "type": "integer",
          "description": "Cost of 1000 impressions optimized, kopecks"
        },
        "autobidding_max_cost": {
          "type": "integer",
          "description": "Max cost of target actions for autobidding, kopecks"
        },
        "disclaimer_medical": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "disclaimer_specialist": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "disclaimer_supplements": {
          "description": "Information whether disclaimer is enabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Ad ID",
          "required": true
        },
        "impressions_limit": {
          "type": "integer",
          "description": "Impressions limit"
        },
        "impressions_limited": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether impressions are limited"
        },
        "name": {
          "type": "string",
          "description": "Ad title",
          "required": true
        },
        "status": {
          "$ref": "#\/definitions\/ads_ad_status",
          "required": true
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "ads_ad_approved": {
      "type": "integer",
      "description": "Review status",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not moderated",
        "pending moderation",
        "approved",
        "rejected"
      ]
    },
    "ads_ad_cost_type": {
      "type": "integer",
      "description": "Cost type",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "per clicks",
        "per impressions",
        "per actions",
        "per impressions optimized"
      ]
    },
    "ads_ad_layout": {
      "type": "object",
      "properties": {
        "ad_format": {
          "type": "integer",
          "description": "Ad format",
          "required": true
        },
        "campaign_id": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        },
        "cost_type": {
          "$ref": "#\/definitions\/ads_ad_cost_type",
          "required": true
        },
        "description": {
          "type": "string",
          "description": "Ad description",
          "required": true
        },
        "id": {
          "type": "string",
          "description": "Ad ID",
          "required": true
        },
        "image_src": {
          "type": "string",
          "format": "uri",
          "description": "Image URL",
          "required": true
        },
        "image_src_2x": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image in double size"
        },
        "link_domain": {
          "type": "string",
          "description": "Domain of advertised object"
        },
        "link_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of advertised object",
          "required": true
        },
        "preview_link": {
          "type": "string",
          "description": "link to preview an ad as it is shown on the website"
        },
        "title": {
          "type": "string",
          "description": "Ad title",
          "required": true
        },
        "video": {
          "description": "Information whether the ad is a video",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "ads_ad_status": {
      "type": "integer",
      "description": "Ad atatus",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign": {
      "type": "object",
      "properties": {
        "ads_count": {
          "type": "integer",
          "description": "Amount of active ads in campaign"
        },
        "all_limit": {
          "type": "string",
          "description": "Campaign's total limit, rubles",
          "required": true
        },
        "create_time": {
          "type": "integer",
          "description": "Campaign create time, as Unixtime"
        },
        "goal_type": {
          "type": "integer",
          "description": "Campaign goal type"
        },
        "user_goal_type": {
          "type": "integer",
          "description": "Campaign user goal type"
        },
        "is_cbo_enabled": {
          "type": "boolean",
          "description": "Shows if Campaign Budget Optimization is on"
        },
        "day_limit": {
          "type": "string",
          "description": "Campaign's day limit, rubles",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Campaign title",
          "required": true
        },
        "start_time": {
          "type": "integer",
          "description": "Campaign start time, as Unixtime",
          "required": true
        },
        "status": {
          "$ref": "#\/definitions\/ads_campaign_status",
          "required": true
        },
        "stop_time": {
          "type": "integer",
          "description": "Campaign stop time, as Unixtime",
          "required": true
        },
        "type": {
          "$ref": "#\/definitions\/ads_campaign_type",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Campaign update time, as Unixtime"
        },
        "views_limit": {
          "type": "integer",
          "description": "Limit of views per user per campaign"
        }
      },
      "additionalProperties": false
    },
    "ads_campaign_status": {
      "type": "integer",
      "description": "Campaign status",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "stopped",
        "started",
        "deleted"
      ]
    },
    "ads_campaign_type": {
      "type": "string",
      "description": "Campaign type",
      "enum": [
        "normal",
        "vk_apps_managed",
        "mobile_apps",
        "promoted_posts",
        "adaptive_ads",
        "stories"
      ]
    },
    "ads_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 1,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_category"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_client": {
      "type": "object",
      "properties": {
        "all_limit": {
          "type": "string",
          "description": "Client's total limit, rubles",
          "required": true
        },
        "day_limit": {
          "type": "string",
          "description": "Client's day limit, rubles",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Client ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Client name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_create_ad_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Ad ID",
          "required": true
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Stealth Post ID"
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_create_campaign_status": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Campaign ID",
          "required": true
        },
        "error_code": {
          "type": "integer",
          "minimum": 0,
          "description": "Error code"
        },
        "error_desc": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "ads_criteria": {
      "type": "object",
      "properties": {
        "age_from": {
          "type": "integer",
          "description": "Age from",
          "minimum": 0
        },
        "age_to": {
          "type": "integer",
          "description": "Age to",
          "minimum": 0
        },
        "apps": {
          "type": "string",
          "description": "Apps IDs"
        },
        "apps_not": {
          "type": "string",
          "description": "Apps IDs to except"
        },
        "birthday": {
          "type": "integer",
          "description": "Days to birthday"
        },
        "cities": {
          "type": "string",
          "description": "Cities IDs"
        },
        "cities_not": {
          "type": "string",
          "description": "Cities IDs to except"
        },
        "country": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 0
        },
        "districts": {
          "type": "string",
          "description": "Districts IDs"
        },
        "groups": {
          "type": "string",
          "description": "Communities IDs"
        },
        "interest_categories": {
          "type": "string",
          "description": "Interests categories IDs"
        },
        "interests": {
          "type": "string",
          "description": "Interests"
        },
        "paying": {
          "description": "Information whether the user has proceeded VK payments before",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "positions": {
          "type": "string",
          "description": "Positions IDs"
        },
        "religions": {
          "type": "string",
          "description": "Religions IDs"
        },
        "retargeting_groups": {
          "type": "string",
          "description": "Retargeting groups IDs"
        },
        "retargeting_groups_not": {
          "type": "string",
          "description": "Retargeting groups IDs to except"
        },
        "school_from": {
          "type": "integer",
          "description": "School graduation year from"
        },
        "school_to": {
          "type": "integer",
          "description": "School graduation year to"
        },
        "schools": {
          "type": "string",
          "description": "Schools IDs"
        },
        "sex": {
          "$ref": "#\/definitions\/ads_criteria_sex"
        },
        "stations": {
          "type": "string",
          "description": "Stations IDs"
        },
        "statuses": {
          "type": "string",
          "description": "Relationship statuses"
        },
        "streets": {
          "type": "string",
          "description": "Streets IDs"
        },
        "travellers": {
          "description": "Travellers only",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "uni_from": {
          "type": "integer",
          "description": "University graduation year from"
        },
        "uni_to": {
          "type": "integer",
          "description": "University graduation year to"
        },
        "user_browsers": {
          "type": "string",
          "description": "Browsers"
        },
        "user_devices": {
          "type": "string",
          "description": "Devices"
        },
        "user_os": {
          "type": "string",
          "description": "Operating systems"
        }
      },
      "additionalProperties": false
    },
    "ads_criteria_sex": {
      "type": "integer",
      "description": "Sex",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "any",
        "male",
        "female"
      ]
    },
    "ads_demo_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "stats": {
          "$ref": "#\/definitions\/ads_demostats_format"
        },
        "type": {
          "$ref": "#\/definitions\/ads_object_type"
        }
      },
      "additionalProperties": false
    },
    "ads_demostats_format": {
      "type": "object",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_stats_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_stats_cities"
          }
        },
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_stats_sex"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_flood_stats": {
      "type": "object",
      "properties": {
        "left": {
          "type": "integer",
          "description": "Requests left",
          "required": true
        },
        "refresh": {
          "type": "integer",
          "description": "Time to refresh in seconds",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_link_status": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Reject reason",
          "required": true
        },
        "redirect_url": {
          "type": "string",
          "format": "uri",
          "description": "URL",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "Link status",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_lookalike_request": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Lookalike request ID",
          "minimum": 1,
          "required": true
        },
        "create_time": {
          "type": "integer",
          "description": "Lookalike request create time, as Unixtime",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Lookalike request update time, as Unixtime",
          "required": true
        },
        "scheduled_delete_time": {
          "type": "integer",
          "description": "Time by which lookalike request would be deleted, as Unixtime"
        },
        "status": {
          "type": "string",
          "enum": [
            "search_in_progress",
            "search_failed",
            "search_done",
            "save_in_progress",
            "save_failed",
            "save_done"
          ],
          "description": "Lookalike request status",
          "required": true
        },
        "source_type": {
          "type": "string",
          "enum": [
            "retargeting_group"
          ],
          "description": "Lookalike request source type",
          "required": true
        },
        "source_retargeting_group_id": {
          "type": "integer",
          "minimum": 1,
          "description": "Retargeting group id, which was used as lookalike seed"
        },
        "source_name": {
          "type": "string",
          "description": "Lookalike request seed name (retargeting group name)"
        },
        "audience_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Lookalike request seed audience size"
        },
        "save_audience_levels": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_lookalike_request_save_audience_level"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_lookalike_request_save_audience_level": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "minimum": 1,
          "description": "Save audience level id, which is used in save audience queries"
        },
        "audience_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Saved audience audience size for according level"
        }
      },
      "additionalProperties": false
    },
    "ads_musician": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Targeting music artist ID",
          "minimum": 1,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Music artist name",
          "required": true
        },
        "avatar": {
          "type": "string",
          "description": "Music artist photo"
        }
      },
      "additionalProperties": false
    },
    "ads_object_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "ad",
        "campaign",
        "client",
        "office"
      ]
    },
    "ads_paragraphs": {
      "type": "object",
      "properties": {
        "paragraph": {
          "type": "string",
          "description": "Rules paragraph"
        }
      },
      "additionalProperties": false
    },
    "ads_promoted_post_reach": {
      "type": "object",
      "properties": {
        "hide": {
          "type": "integer",
          "description": "Hides amount",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Object ID from 'ids' parameter",
          "required": true
        },
        "join_group": {
          "type": "integer",
          "description": "Community joins",
          "required": true
        },
        "links": {
          "type": "integer",
          "description": "Link clicks",
          "required": true
        },
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach",
          "required": true
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach",
          "required": true
        },
        "report": {
          "type": "integer",
          "description": "Reports amount",
          "required": true
        },
        "to_group": {
          "type": "integer",
          "description": "Community clicks",
          "required": true
        },
        "unsubscribe": {
          "type": "integer",
          "description": "'Unsubscribe' events amount",
          "required": true
        },
        "video_views_100p": {
          "type": "integer",
          "description": "Video views for 100 percent"
        },
        "video_views_25p": {
          "type": "integer",
          "description": "Video views for 25 percent"
        },
        "video_views_3s": {
          "type": "integer",
          "description": "Video views for 3 seconds"
        },
        "video_views_50p": {
          "type": "integer",
          "description": "Video views for 50 percent"
        },
        "video_views_75p": {
          "type": "integer",
          "description": "Video views for 75 percent"
        },
        "video_views_start": {
          "type": "integer",
          "description": "Video starts"
        }
      },
      "additionalProperties": false
    },
    "ads_reject_reason": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Comment text"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_rules"
          }
        }
      },
      "additionalProperties": false
    },
    "ads_rules": {
      "type": "object",
      "properties": {
        "paragraphs": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_paragraphs"
          }
        },
        "title": {
          "type": "string",
          "description": "Comment"
        }
      },
      "additionalProperties": false
    },
    "ads_stats": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "stats": {
          "$ref": "#\/definitions\/ads_stats_format"
        },
        "type": {
          "$ref": "#\/definitions\/ads_object_type"
        },
        "views_times": {
          "$ref": "#\/definitions\/ads_stats_views_times"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_age": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "value": {
          "type": "string",
          "description": "Age interval"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_cities": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "name": {
          "type": "string",
          "description": "City name"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_format": {
      "type": "object",
      "properties": {
        "clicks": {
          "type": "integer",
          "description": "Clicks number"
        },
        "link_external_clicks": {
          "type": "integer",
          "description": "External clicks number"
        },
        "day": {
          "type": "string",
          "description": "Day as YYYY-MM-DD"
        },
        "impressions": {
          "type": "integer",
          "description": "Impressions number"
        },
        "join_rate": {
          "type": "integer",
          "description": "Events number"
        },
        "month": {
          "type": "string",
          "description": "Month as YYYY-MM"
        },
        "overall": {
          "type": "integer",
          "description": "1 if period=overall"
        },
        "reach": {
          "type": "integer",
          "description": "Reach "
        },
        "spent": {
          "type": "integer",
          "description": "Spent funds"
        },
        "video_clicks_site": {
          "type": "integer",
          "description": "Clickthoughs to the advertised site"
        },
        "video_views": {
          "type": "integer",
          "description": "Video views number"
        },
        "video_views_full": {
          "type": "integer",
          "description": "Video views (full video)"
        },
        "video_views_half": {
          "type": "integer",
          "description": "Video views (half of video)"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_sex": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "value": {
          "$ref": "#\/definitions\/ads_stats_sex_value"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_sex_age": {
      "type": "object",
      "properties": {
        "clicks_rate": {
          "type": "number",
          "description": "Clicks rate"
        },
        "impressions_rate": {
          "type": "number",
          "description": "Impressions rate"
        },
        "value": {
          "type": "string",
          "description": "Sex and age interval"
        }
      },
      "additionalProperties": false
    },
    "ads_stats_sex_value": {
      "type": "string",
      "description": "Sex",
      "enum": [
        "f",
        "m"
      ],
      "enumNames": [
        "female",
        "male"
      ]
    },
    "ads_stats_views_times": {
      "type": "object",
      "properties": {
        "views_ads_times_1": {
          "type": "integer"
        },
        "views_ads_times_2": {
          "type": "integer"
        },
        "views_ads_times_3": {
          "type": "integer"
        },
        "views_ads_times_4": {
          "type": "integer"
        },
        "views_ads_times_5": {
          "type": "string"
        },
        "views_ads_times_6": {
          "type": "integer"
        },
        "views_ads_times_7": {
          "type": "integer"
        },
        "views_ads_times_8": {
          "type": "integer"
        },
        "views_ads_times_9": {
          "type": "integer"
        },
        "views_ads_times_10": {
          "type": "integer"
        },
        "views_ads_times_11_plus": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_settings": {
      "type": "object",
      "allOf": [
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "Ad ID"
            },
            "campaign_id": {
              "type": "integer",
              "description": "Campaign ID"
            }
          }
        },
        {
          "$ref": "#\/definitions\/ads_criteria"
        }
      ],
      "additionalProperties": false
    },
    "ads_targ_stats": {
      "type": "object",
      "properties": {
        "audience_count": {
          "type": "integer",
          "description": "Audience",
          "required": true
        },
        "recommended_cpc": {
          "type": "number",
          "description": "Recommended CPC value for 50% reach (old format)"
        },
        "recommended_cpm": {
          "type": "number",
          "description": "Recommended CPM value for 50% reach (old format)"
        },
        "recommended_cpc_50": {
          "type": "number",
          "description": "Recommended CPC value for 50% reach"
        },
        "recommended_cpm_50": {
          "type": "number",
          "description": "Recommended CPM value for 50% reach"
        },
        "recommended_cpc_70": {
          "type": "number",
          "description": "Recommended CPC value for 70% reach"
        },
        "recommended_cpm_70": {
          "type": "number",
          "description": "Recommended CPM value for 70% reach"
        },
        "recommended_cpc_90": {
          "type": "number",
          "description": "Recommended CPC value for 90% reach"
        },
        "recommended_cpm_90": {
          "type": "number",
          "description": "Recommended CPM value for 90% reach"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_cities": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "parent": {
          "type": "string",
          "description": "Parent object"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_regions": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID"
        },
        "name": {
          "type": "string",
          "description": "Object name"
        },
        "type": {
          "type": "string",
          "description": "Object type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools": {
      "type": "object",
      "properties": {
        "desc": {
          "type": "string",
          "description": "Full school title"
        },
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School title"
        },
        "parent": {
          "type": "string",
          "description": "City name"
        },
        "type": {
          "$ref": "#\/definitions\/ads_targ_suggestions_schools_type"
        }
      },
      "additionalProperties": false
    },
    "ads_targ_suggestions_schools_type": {
      "type": "string",
      "description": "School type",
      "enum": [
        "school",
        "university",
        "faculty",
        "chair"
      ]
    },
    "ads_target_group": {
      "type": "object",
      "properties": {
        "audience_count": {
          "type": "integer",
          "description": "Audience"
        },
        "domain": {
          "type": "string",
          "description": "Site domain"
        },
        "id": {
          "type": "integer",
          "description": "Group ID"
        },
        "lifetime": {
          "type": "integer",
          "description": "Number of days for user to be in group"
        },
        "name": {
          "type": "string",
          "description": "Group name"
        },
        "pixel": {
          "type": "string",
          "description": "Pixel code"
        }
      },
      "additionalProperties": false
    },
    "ads_updateOfficeUsers_result": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "is_success": {
          "type": "boolean",
          "default": true,
          "required": true
        },
        "error": {
          "$ref": "#\/definitions\/base_error"
        }
      },
      "additionalProperties": false
    },
    "ads_user_specification": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "role": {
          "$ref": "#\/definitions\/ads_access_role_public",
          "required": true
        },
        "grant_access_to_all_clients": {
          "type": "boolean",
          "default": false
        },
        "client_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "minimum": 0
          }
        },
        "view_budget": {
          "type": "boolean",
          "default": null
        }
      },
      "additionalProperties": false
    },
    "ads_user_specification_cutted": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "role": {
          "$ref": "#\/definitions\/ads_access_role_public",
          "required": true
        },
        "client_id": {
          "type": "integer",
          "minimum": 0
        },
        "view_budget": {
          "type": "boolean",
          "default": null
        }
      },
      "additionalProperties": false
    },
    "ads_users": {
      "type": "object",
      "properties": {
        "accesses": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_accesses"
          },
          "required": true
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_addOfficeUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "boolean",
          "description": "true if success",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_checkLink_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/ads_link_status",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_createAds_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_create_ad_status"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_createCampaigns_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_create_campaign_status"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_createClients_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Client ID"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_createTargetGroup_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Group ID"
            },
            "pixel": {
              "type": "string",
              "description": "Pixel code"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_deleteAds_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "0 if success"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_deleteCampaigns_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "0 if success"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_deleteClients_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "0 if success"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getAccounts_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_account"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getAdsLayout_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_ad_layout"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getAdsTargeting_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_targ_settings"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getAds_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_ad"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getBudget_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Budget",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getCampaigns_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_campaign"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getCategories_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "v1": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/ads_category"
              },
              "description": "Old categories"
            },
            "v2": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/ads_category"
              },
              "description": "Actual categories"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getClients_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_client"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getDemographics_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_demo_stats"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getFloodStats_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/ads_flood_stats",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getLookalikeRequests_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total count of found lookalike requests",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "description": "found lookalike requests",
              "items": {
                "$ref": "#\/definitions\/ads_lookalike_request"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getMusicians_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/ads_musician"
              },
              "description": "Musicians",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getOfficeUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_users"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getPostsReach_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_promoted_post_reach"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getRejectionReason_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/ads_reject_reason",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getStatistics_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_stats"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getSuggestions_cities_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_targ_suggestions_cities"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getSuggestions_regions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_targ_suggestions_regions"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getSuggestions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_targ_suggestions"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getSuggestions_schools_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_targ_suggestions_schools"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getTargetGroups_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_target_group"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getTargetingStats_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/ads_targ_stats",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getUploadURL_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "Photo upload URL",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_getVideoUploadURL_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "Video upload URL",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_importTargetContacts_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Imported contacts number",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_removeOfficeUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "boolean",
          "description": "true if success",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_updateAds_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Ad ID"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_updateCampaigns_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Campaign ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_updateClients_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Client ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "ads_updateOfficeUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/ads_updateOfficeUsers_result"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdCategories_response_categories_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdUnits_response_ad_units_ad_unit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "site_id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "adsweb_getFraudHistory_response_entries_entry": {
      "type": "object",
      "properties": {
        "site_id": {
          "type": "integer",
          "required": true
        },
        "day": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getSites_response_sites_site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "status_user": {
          "type": "string"
        },
        "status_moder": {
          "type": "string"
        },
        "domains": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "adsweb_getStatistics_response_items_item": {
      "type": "object",
      "properties": {
        "site_id": {
          "type": "integer"
        },
        "ad_unit_id": {
          "type": "integer"
        },
        "overall_count": {
          "type": "integer"
        },
        "months_count": {
          "type": "integer"
        },
        "month_min": {
          "type": "string"
        },
        "month_max": {
          "type": "string"
        },
        "days_count": {
          "type": "integer"
        },
        "day_min": {
          "type": "string"
        },
        "day_max": {
          "type": "string"
        },
        "hours_count": {
          "type": "integer"
        },
        "hour_min": {
          "type": "string"
        },
        "hour_max": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdCategories_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/adsweb_getAdCategories_response_categories_category"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdUnitCode_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "html": {
              "type": "string",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getAdUnits_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "required": true
            },
            "ad_units": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/adsweb_getAdUnits_response_ad_units_ad_unit"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getFraudHistory_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "required": true
            },
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/adsweb_getFraudHistory_response_entries_entry"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getSites_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "required": true
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/adsweb_getSites_response_sites_site"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "adsweb_getStatistics_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "next_page_id": {
              "type": "string"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/adsweb_getStatistics_response_items_item"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Image ID",
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_photos": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/appWidgets_photo"
          }
        }
      },
      "additionalProperties": false
    },
    "appWidgets_getAppImageUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "upload_url": {
              "type": "string",
              "description": "To upload an image, generate POST-request to upload_url with a file in photo field. Then call appWidgets.saveAppImage method"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_getAppImages_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/appWidgets_photos",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_getGroupImageUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "upload_url": {
              "type": "string",
              "description": "To upload an image, generate POST-request to upload_url with a file in photo field. Then call appWidgets.saveAppImage method"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_getGroupImages_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/appWidgets_photos",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_getImagesById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/appWidgets_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_saveAppImage_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/appWidgets_photo",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "appWidgets_saveGroupImage_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/appWidgets_photo",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_app": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/apps_app_min"
        },
        {
          "properties": {
            "author_url": {
              "type": "string",
              "format": "uri",
              "description": "Application author's URL"
            },
            "banner_1120": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app banner with 1120 px in width"
            },
            "banner_560": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app banner with 560 px in width"
            },
            "icon_16": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app icon with 16 px in width"
            },
            "is_new": {
              "description": "Is new flag",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "push_enabled": {
              "description": "Is push enabled",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "screen_orientation": {
              "type": "integer",
              "description": "Screen orientation"
            },
            "friends": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0
              }
            },
            "catalog_position": {
              "type": "integer",
              "description": "Catalog position"
            },
            "description": {
              "type": "string",
              "description": "Application description"
            },
            "genre": {
              "type": "string",
              "description": "Genre name"
            },
            "genre_id": {
              "type": "integer",
              "description": "Genre ID"
            },
            "international": {
              "type": "boolean",
              "description": "Information whether the application is multilanguage"
            },
            "is_in_catalog": {
              "type": "integer",
              "description": "Information whether application is in mobile catalog"
            },
            "leaderboard_type": {
              "$ref": "#\/definitions\/apps_app_leaderboard_type"
            },
            "members_count": {
              "type": "integer",
              "description": "Members number"
            },
            "platform_id": {
              "type": "string",
              "description": "Application ID in store"
            },
            "published_date": {
              "type": "integer",
              "description": "Date when the application has been published in Unixtime"
            },
            "screen_name": {
              "type": "string",
              "description": "Screen name"
            },
            "section": {
              "type": "string",
              "description": "Application section name"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "apps_app_leaderboard_type": {
      "type": "integer",
      "description": "Leaderboard type",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "not supported",
        "levels",
        "points"
      ]
    },
    "apps_app_min": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#\/definitions\/apps_app_type",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Application ID",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Application title",
          "required": true
        },
        "author_owner_id": {
          "type": "integer",
          "description": "Application author's ID"
        },
        "is_installed": {
          "type": "boolean",
          "description": "Is application installed"
        },
        "icon_139": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 139 px in width"
        },
        "icon_150": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 150 px in width"
        },
        "icon_278": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 278 px in width"
        },
        "icon_576": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 576 px in width"
        },
        "background_loader_color": {
          "type": "string",
          "description": "Hex color code without hash sign"
        },
        "loader_icon": {
          "type": "string",
          "description": "SVG data"
        },
        "icon_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of the app icon with 75 px in width"
        }
      },
      "additionalProperties": false
    },
    "apps_app_type": {
      "type": "string",
      "description": "Application type",
      "enum": [
        "app",
        "game",
        "site",
        "standalone",
        "vk_app",
        "community_app",
        "html5_game",
        "mini_app"
      ]
    },
    "apps_catalog_list": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Total number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/apps_app"
          },
          "required": true
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/users_user_min"
          }
        }
      },
      "additionalProperties": false
    },
    "apps_leaderboard": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "points": {
          "type": "integer",
          "description": "Points number"
        },
        "score": {
          "type": "integer",
          "description": "Score number"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_scope": {
      "type": "object",
      "description": "Scope description",
      "properties": {
        "name": {
          "type": "string",
          "description": "Scope name",
          "enum": [
            "friends",
            "photos",
            "video",
            "pages",
            "status",
            "notes",
            "wall",
            "docs",
            "groups",
            "stats",
            "market"
          ],
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Scope title"
        }
      },
      "additionalProperties": false
    },
    "apps_getCatalog_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/apps_catalog_list",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getFriendsList_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getFriendsList_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "entity": "owner"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getLeaderboard_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/apps_leaderboard"
              }
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getLeaderboard_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/apps_leaderboard"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getMiniAppPolicies_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "privacy_policy": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app's privacy policy"
            },
            "terms": {
              "type": "string",
              "format": "uri",
              "description": "URL of the app's terms"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getScopes_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/apps_scope"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_getScore_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Score number",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of applications",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "description": "List of applications",
              "items": {
                "$ref": "#\/definitions\/apps_app"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_image_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "image": {
              "type": "string",
              "description": "Uploaded photo data"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "apps_sendRequest_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Request ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "audio_audio": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the audio"
        },
        "artist": {
          "type": "string",
          "description": "Artist name",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Audio ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "entity": "owner",
          "type": "integer",
          "description": "Audio owner's ID",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Title",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of mp3 file"
        },
        "duration": {
          "type": "integer",
          "description": "Duration in seconds",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "minimum": 0
        },
        "genre_id": {
          "type": "integer",
          "description": "Genre ID",
          "minimum": 0
        },
        "performer": {
          "type": "string",
          "description": "Performer name"
        }
      },
      "additionalProperties": false
    },
    "auth_restore_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "integer",
              "description": "1 if success",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "sid": {
              "type": "string",
              "description": "Parameter needed to grant access by code"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_bool_int": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "no",
        "yes"
      ]
    },
    "base_city": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "City title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_comments_info": {
      "type": "object",
      "properties": {
        "can_post": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "can_open": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_close": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "groups_can_post": {
          "type": "boolean",
          "description": "Information whether groups can comment the post"
        },
        "donut": {
          "$ref": "#\/definitions\/wall_wallpost_comments_donut"
        }
      },
      "additionalProperties": false
    },
    "base_country": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Country ID",
          "minimum": 1,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Country title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_crop_photo": {
      "type": "object",
      "properties": {
        "photo": {
          "$ref": "#\/definitions\/photos_photo",
          "required": true
        },
        "crop": {
          "$ref": "#\/definitions\/base_crop_photo_crop",
          "required": true
        },
        "rect": {
          "$ref": "#\/definitions\/base_crop_photo_rect",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_crop_photo_crop": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner",
          "required": true
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner",
          "required": true
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner",
          "required": true
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_crop_photo_rect": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner",
          "required": true
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner",
          "required": true
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner",
          "required": true
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_error": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "integer",
          "description": "Error code",
          "required": true
        },
        "error_subcode": {
          "type": "integer",
          "description": "Error subcode"
        },
        "error_msg": {
          "type": "string",
          "description": "Error message"
        },
        "error_text": {
          "type": "string",
          "description": "Localized error message"
        },
        "request_params": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_request_param"
          }
        }
      },
      "additionalProperties": false
    },
    "base_geo": {
      "type": "object",
      "properties": {
        "coordinates": {
          "$ref": "#\/definitions\/base_geo_coordinates"
        },
        "place": {
          "$ref": "#\/definitions\/base_place"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      },
      "additionalProperties": false
    },
    "base_geo_coordinates": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "required": true
        },
        "longitude": {
          "type": "number",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_gradient_point": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string",
          "description": "Hex color code without #",
          "required": true
        },
        "position": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Point position",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Image url",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Image width",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Image height",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "user_likes": {
          "description": "Information whether current user likes the photo",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "base_likes_info": {
      "type": "object",
      "properties": {
        "can_like": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can like the post",
          "required": true
        },
        "can_publish": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can repost"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number",
          "required": true
        },
        "user_likes": {
          "type": "integer",
          "description": "Information whether current uer has liked the post",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_link": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#\/definitions\/base_link_application"
        },
        "button": {
          "$ref": "#\/definitions\/base_link_button"
        },
        "caption": {
          "type": "string",
          "description": "Link caption"
        },
        "description": {
          "type": "string",
          "description": "Link description"
        },
        "id": {
          "type": "string",
          "description": "Link ID"
        },
        "is_favorite": {
          "type": "boolean"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "preview_page": {
          "type": "string",
          "description": "String ID of the page with article preview"
        },
        "preview_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with article preview"
        },
        "product": {
          "$ref": "#\/definitions\/base_link_product"
        },
        "rating": {
          "$ref": "#\/definitions\/base_link_rating"
        },
        "title": {
          "type": "string",
          "description": "Link title"
        },
        "url": {
          "type": "string",
          "description": "Link URL",
          "required": true
        },
        "target_object": {
          "$ref": "#\/definitions\/link_target_object"
        },
        "is_external": {
          "type": "boolean",
          "description": "Information whether the current link is external"
        },
        "video": {
          "$ref": "#\/definitions\/video_video",
          "description": "Video from link"
        }
      },
      "additionalProperties": false
    },
    "base_link_application": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "number",
          "description": "Application Id"
        },
        "store": {
          "$ref": "#\/definitions\/base_link_application_store"
        }
      },
      "additionalProperties": false
    },
    "base_link_application_store": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "Store Id"
        },
        "name": {
          "type": "string",
          "description": "Store name"
        }
      },
      "additionalProperties": false
    },
    "base_link_button": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#\/definitions\/base_link_button_action",
          "description": "Button action"
        },
        "title": {
          "type": "string",
          "description": "Button title"
        },
        "block_id": {
          "type": "string",
          "description": "Target block id"
        },
        "section_id": {
          "type": "string",
          "description": "Target section id"
        },
        "curator_id": {
          "type": "integer",
          "description": "curator id"
        },
        "album_id": {
          "type": "integer",
          "minimum": 1,
          "description": "Video album id"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner id",
          "entity": "owner",
          "format": "int64"
        },
        "icon": {
          "type": "string",
          "description": "Button icon name, e.g. 'phone' or 'gift'"
        },
        "style": {
          "$ref": "#\/definitions\/base_link_button_style"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#\/definitions\/base_link_button_action_type",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Action URL"
        },
        "consume_reason": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "base_link_button_action_type": {
      "type": "string",
      "description": "Action type",
      "enum": [
        "open_url"
      ],
      "enumNames": [
        "open_url"
      ]
    },
    "base_link_button_style": {
      "type": "string",
      "description": "Button style",
      "enum": [
        "primary",
        "secondary"
      ],
      "enumNames": [
        "primary",
        "secondary"
      ]
    },
    "base_link_product": {
      "type": "object",
      "properties": {
        "price": {
          "$ref": "#\/definitions\/market_price",
          "required": true
        },
        "merchant": {
          "type": "string"
        },
        "orders_count": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "base_link_product_category": {
      "type": "string"
    },
    "base_link_product_status": {
      "type": "string",
      "description": "Status representation",
      "enum": [
        "active",
        "blocked",
        "sold",
        "deleted",
        "archived"
      ]
    },
    "base_link_rating": {
      "type": "object",
      "properties": {
        "reviews_count": {
          "type": "integer",
          "description": "Count of reviews"
        },
        "stars": {
          "type": "number",
          "description": "Count of stars"
        }
      },
      "additionalProperties": false
    },
    "base_message_error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "description": "Error code"
        },
        "description": {
          "type": "string",
          "description": "Error message"
        }
      },
      "additionalProperties": false
    },
    "base_object": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Object title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_object_count": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Items count"
        }
      },
      "additionalProperties": false
    },
    "base_object_with_name": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Object ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Object name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_place": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Place address"
        },
        "checkins": {
          "type": "integer",
          "description": "Checkins number"
        },
        "city": {
          "type": "string",
          "description": "City name"
        },
        "country": {
          "type": "string",
          "description": "Country name"
        },
        "created": {
          "type": "integer",
          "description": "Date of the place creation in Unixtime"
        },
        "icon": {
          "type": "string",
          "format": "uri",
          "description": "URL of the place's icon"
        },
        "id": {
          "type": "integer",
          "description": "Place ID"
        },
        "latitude": {
          "type": "number",
          "description": "Place latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Place longitude"
        },
        "title": {
          "type": "string",
          "description": "Place title"
        },
        "type": {
          "type": "string",
          "description": "Place type"
        }
      },
      "additionalProperties": false
    },
    "base_property_exists": {
      "type": "integer",
      "enum": [
        1
      ],
      "enumNames": [
        "Property exists"
      ]
    },
    "base_reposts_info": {
      "type": "object",
      "description": "Count of views",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total reposts counter. Sum of wall and mail reposts counters",
          "required": true
        },
        "wall_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Wall reposts counter"
        },
        "mail_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Mail reposts counter"
        },
        "user_reposted": {
          "type": "integer",
          "description": "Information whether current user has reposted the post"
        }
      },
      "additionalProperties": false
    },
    "base_request_param": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Parameter name"
        },
        "value": {
          "type": "string",
          "description": "Parameter value"
        }
      },
      "additionalProperties": false
    },
    "base_sex": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "unknown",
        "female",
        "male"
      ]
    },
    "base_sticker": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#\/definitions\/base_sticker_old",
          "description": "Deprecated from 5.74, but still used in later versions in queue"
        },
        {
          "$ref": "#\/definitions\/base_sticker_new"
        }
      ]
    },
    "base_sticker_animation": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "light",
            "dark"
          ],
          "description": "Type of animation script"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of animation script"
        }
      },
      "additionalProperties": false
    },
    "base_sticker_new": {
      "type": "object",
      "properties": {
        "sticker_id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "product_id": {
          "type": "integer",
          "description": "Pack ID"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          }
        },
        "images_with_background": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          }
        },
        "animation_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of sticker animation script"
        },
        "animations": {
          "type": "array",
          "description": "Array of sticker animation script objects",
          "items": {
            "$ref": "#\/definitions\/base_sticker_animation"
          }
        },
        "is_allowed": {
          "type": "boolean",
          "description": "Information whether the sticker is allowed"
        }
      },
      "additionalProperties": false
    },
    "base_sticker_old": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "product_id": {
          "type": "integer",
          "description": "Pack ID"
        },
        "width": {
          "type": "integer",
          "description": "Width in px"
        },
        "height": {
          "type": "integer",
          "description": "Height in px"
        },
        "photo_128": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 128 px in height"
        },
        "photo_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 256 px in height"
        },
        "photo_352": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 352 px in height"
        },
        "photo_512": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 512 px in height"
        },
        "photo_64": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 64 px in height"
        },
        "is_allowed": {
          "type": "boolean",
          "description": "Information whether the sticker is allowed"
        }
      },
      "additionalProperties": false
    },
    "base_stickers_list": {
      "type": "array",
      "items": {
        "$ref": "#\/definitions\/base_sticker_new"
      }
    },
    "base_upload_server": {
      "type": "object",
      "properties": {
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "Upload URL",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_user_group_fields": {
      "type": "string",
      "enum": [
        "about",
        "action_button",
        "activities",
        "activity",
        "addresses",
        "admin_level",
        "age_limits",
        "author_id",
        "ban_info",
        "bdate",
        "blacklisted",
        "blacklisted_by_me",
        "books",
        "can_create_topic",
        "can_message",
        "can_post",
        "can_see_all_posts",
        "can_see_audio",
        "can_send_friend_request",
        "can_upload_video",
        "can_write_private_message",
        "career",
        "city",
        "common_count",
        "connections",
        "contacts",
        "counters",
        "country",
        "cover",
        "crop_photo",
        "deactivated",
        "description",
        "domain",
        "education",
        "exports",
        "finish_date",
        "fixed_post",
        "followers_count",
        "friend_status",
        "games",
        "has_market_app",
        "has_mobile",
        "has_photo",
        "home_town",
        "id",
        "interests",
        "is_admin",
        "is_closed",
        "is_favorite",
        "is_friend",
        "is_hidden_from_feed",
        "is_member",
        "is_messages_blocked",
        "can_send_notify",
        "is_subscribed",
        "last_seen",
        "links",
        "lists",
        "maiden_name",
        "main_album_id",
        "main_section",
        "market",
        "member_status",
        "members_count",
        "military",
        "movies",
        "music",
        "name",
        "nickname",
        "occupation",
        "online",
        "online_status",
        "personal",
        "phone",
        "photo_100",
        "photo_200",
        "photo_200_orig",
        "photo_400_orig",
        "photo_50",
        "photo_id",
        "photo_max",
        "photo_max_orig",
        "quotes",
        "relation",
        "relatives",
        "schools",
        "screen_name",
        "sex",
        "site",
        "start_date",
        "status",
        "timezone",
        "trending",
        "tv",
        "type",
        "universities",
        "verified",
        "wall_comments",
        "wiki_page",
        "first_name",
        "first_name_acc",
        "first_name_dat",
        "first_name_gen",
        "last_name",
        "last_name_acc",
        "last_name_dat",
        "last_name_gen",
        "can_subscribe_stories",
        "is_subscribed_stories",
        "vk_admin_status",
        "can_upload_story"
      ]
    },
    "base_user_id": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "base_bool_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_getUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/base_upload_server",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "base_ok_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "default": 1,
          "enum": [
            1
          ],
          "enumNames": [
            "ok"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "board_default_order": {
      "type": "integer",
      "description": "Sort type",
      "enum": [
        1,
        2,
        -1,
        -2
      ],
      "enumNames": [
        "desc_updated",
        "desc_created",
        "asc_updated",
        "asc_created"
      ]
    },
    "board_topic": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments number"
        },
        "created": {
          "type": "integer",
          "description": "Date when the topic has been created in Unixtime"
        },
        "created_by": {
          "type": "integer",
          "description": "Creator ID"
        },
        "id": {
          "type": "integer",
          "description": "Topic ID"
        },
        "is_closed": {
          "description": "Information whether the topic is closed",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "is_fixed": {
          "description": "Information whether the topic is fixed",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "title": {
          "type": "string",
          "description": "Topic title"
        },
        "updated": {
          "type": "integer",
          "description": "Date when the topic has been updated in Unixtime"
        },
        "updated_by": {
          "type": "integer",
          "description": "ID of user who updated the topic"
        },
        "first_comment": {
          "type": "string",
          "description": "First comment text"
        },
        "last_comment": {
          "type": "string",
          "description": "Last comment text"
        }
      },
      "additionalProperties": false
    },
    "board_topic_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_comment_attachment"
          }
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "description": "Author ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1,
          "required": true
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        },
        "text": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "can_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can edit the comment"
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes_info"
        }
      },
      "additionalProperties": false
    },
    "board_addTopic_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Topic ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "board_createComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "board_getComments_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/board_topic_comment"
              },
              "required": true
            },
            "poll": {
              "type": "object",
              "$ref": "#\/definitions\/polls_poll"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            },
            "real_offset": {
              "type": "integer",
              "description": "Offset of comment"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "board_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/board_topic_comment"
              },
              "required": true
            },
            "poll": {
              "type": "object",
              "$ref": "#\/definitions\/polls_poll"
            },
            "real_offset": {
              "type": "integer",
              "description": "Offset of comment"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "board_getTopics_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/board_topic"
              },
              "required": true
            },
            "default_order": {
              "$ref": "#\/definitions\/board_default_order",
              "required": true
            },
            "can_add_topics": {
              "description": "Information whether current user can add topic",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "board_getTopics_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/board_topic"
              },
              "required": true
            },
            "default_order": {
              "$ref": "#\/definitions\/board_default_order",
              "required": true
            },
            "can_add_topics": {
              "description": "Information whether current user can add topic",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_base": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "$ref": "#\/definitions\/callback_type",
          "required": true
        },
        "group_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "event_id": {
          "type": "string",
          "description": "Unique event id. If it passed twice or more - you should ignore it.",
          "required": true
        },
        "secret": {
          "type": "string"
        }
      },
      "discriminator": {
        "propertyName": "type",
        "mapping": {
          "message_new": "..\/callback\/objects.json#\/definitions\/callback_message_new",
          "message_reply": "..\/callback\/objects.json#\/definitions\/callback_message_reply",
          "message_edit": "..\/callback\/objects.json#\/definitions\/callback_message_edit",
          "confirmation": "..\/callback\/objects.json#\/definitions\/callback_confirmation"
        }
      },
      "additionalProperties": false
    },
    "callback_board_post_delete": {
      "type": "object",
      "properties": {
        "topic_owner_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "topic_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_confirmation": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "#\/definitions\/callback_type",
              "default": "confirmation"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_donut_money_withdraw": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "minimum": 0,
          "required": true
        },
        "amount_without_fee": {
          "type": "number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_donut_money_withdraw_error": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_cancelled": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_create": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_without_fee": {
          "type": "number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_expired": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_price_changed": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "amount_old": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_new": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_diff": {
          "type": "number",
          "minimum": 0
        },
        "amount_diff_without_fee": {
          "type": "number",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "callback_donut_subscription_prolonged": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "amount": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "amount_without_fee": {
          "type": "number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_change_photo": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_change_settings": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "self": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_join": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "join_type": {
          "$ref": "#\/definitions\/callback_group_join_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_join_type": {
      "type": "string",
      "enum": [
        "join",
        "unsure",
        "accepted",
        "approved",
        "request"
      ]
    },
    "callback_group_leave": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64"
        },
        "self": {
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "callback_group_market": {
      "type": "integer",
      "enum": [
        0,
        1
      ],
      "enumNames": [
        "disabled",
        "open"
      ]
    },
    "callback_group_officer_role": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "none",
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "callback_group_officers_edit": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "level_old": {
          "$ref": "#\/definitions\/callback_group_officer_role",
          "required": true
        },
        "level_new": {
          "$ref": "#\/definitions\/callback_group_officer_role",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_group_settings_changes": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "access": {
          "$ref": "#\/definitions\/groups_group_is_closed"
        },
        "screen_name": {
          "type": "string"
        },
        "public_category": {
          "type": "integer"
        },
        "public_subcategory": {
          "type": "integer"
        },
        "age_limits": {
          "$ref": "#\/definitions\/groups_group_full_age_limits"
        },
        "website": {
          "type": "string"
        },
        "enable_status_default": {
          "$ref": "#\/definitions\/groups_group_wall"
        },
        "enable_audio": {
          "$ref": "#\/definitions\/groups_group_audio"
        },
        "enable_video": {
          "$ref": "#\/definitions\/groups_group_video"
        },
        "enable_photo": {
          "$ref": "#\/definitions\/groups_group_photos"
        },
        "enable_market": {
          "$ref": "#\/definitions\/callback_group_market"
        }
      },
      "additionalProperties": false
    },
    "callback_like_add_remove": {
      "type": "object",
      "properties": {
        "liker_id": {
          "type": "integer",
          "required": true
        },
        "object_type": {
          "type": "string",
          "enum": [
            "video",
            "photo",
            "post",
            "comment",
            "note",
            "topic_comment",
            "photo_comment",
            "video_comment",
            "market",
            "market_comment"
          ],
          "required": true
        },
        "object_owner_id": {
          "type": "integer",
          "required": true
        },
        "object_id": {
          "type": "integer",
          "required": true
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "thread_reply_id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "callback_market_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string"
        },
        "market_owner_id": {
          "type": "integer"
        },
        "photo_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "callback_market_comment_delete": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "item_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_message_allow": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "#\/definitions\/callback_type",
              "default": "message_allow"
            },
            "object": {
              "$ref": "#\/definitions\/callback_message_allow_object",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_message_allow_object": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "key": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_message_deny": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_message_edit": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "#\/definitions\/callback_type",
              "default": "message_edit"
            },
            "object": {
              "$ref": "#\/definitions\/messages_message",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_message_new": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "#\/definitions\/callback_type",
              "default": "message_new"
            },
            "object": {
              "type": "object",
              "$ref": "#\/definitions\/callback_message_object",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_message_object": {
      "type": "object",
      "properties": {
        "client_info": {
          "$ref": "#\/definitions\/client_info_for_bots"
        },
        "message": {
          "$ref": "#\/definitions\/messages_message"
        }
      },
      "additionalProperties": false
    },
    "callback_message_reply": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/callback_base"
        },
        {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "$ref": "#\/definitions\/callback_type",
              "default": "message_reply"
            },
            "object": {
              "$ref": "#\/definitions\/messages_message",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "callback_photo_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "required": true
        },
        "photo_owner_id": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_photo_comment_delete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_poll_vote_new": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "poll_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "option_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_qr_scan": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "data": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        },
        "subtype": {
          "type": "string",
          "required": true
        },
        "reread": {
          "type": "boolean",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_type": {
      "type": "string",
      "enum": [
        "audio_new",
        "board_post_new",
        "board_post_edit",
        "board_post_restore",
        "board_post_delete",
        "confirmation",
        "group_leave",
        "group_join",
        "group_change_photo",
        "group_change_settings",
        "group_officers_edit",
        "lead_forms_new",
        "market_comment_new",
        "market_comment_delete",
        "market_comment_edit",
        "market_comment_restore",
        "message_new",
        "message_reply",
        "message_edit",
        "message_allow",
        "message_deny",
        "message_read",
        "message_typing_state",
        "messages_edit",
        "photo_new",
        "photo_comment_new",
        "photo_comment_delete",
        "photo_comment_edit",
        "photo_comment_restore",
        "poll_vote_new",
        "user_block",
        "user_unblock",
        "video_new",
        "video_comment_new",
        "video_comment_delete",
        "video_comment_edit",
        "video_comment_restore",
        "wall_post_new",
        "wall_reply_new",
        "wall_reply_edit",
        "wall_reply_delete",
        "wall_reply_restore",
        "wall_repost"
      ]
    },
    "callback_user_block": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "unblock_date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "reason": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "comment": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "callback_user_unblock": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "by_end_date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_video_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "required": true
        },
        "video_owner_id": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_video_comment_delete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "video_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "callback_wall_comment_delete": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "post_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "calls_call": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "description": "Call duration",
          "minimum": 0
        },
        "initiator_id": {
          "type": "integer",
          "description": "Caller initiator",
          "minimum": 0,
          "required": true
        },
        "receiver_id": {
          "type": "integer",
          "description": "Caller receiver",
          "minimum": 0,
          "required": true
        },
        "state": {
          "$ref": "#\/definitions\/calls_end_state",
          "required": true
        },
        "time": {
          "type": "integer",
          "description": "Timestamp for call",
          "required": true
        },
        "video": {
          "type": "boolean",
          "description": "Was this call initiated as video call"
        },
        "participants": {
          "$ref": "#\/definitions\/calls_participants"
        }
      },
      "additionalProperties": false
    },
    "calls_end_state": {
      "type": "string",
      "description": "State in which call ended up",
      "enum": [
        "canceled_by_initiator",
        "canceled_by_receiver",
        "reached"
      ]
    },
    "calls_participants": {
      "type": "object",
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Participants count"
        }
      },
      "additionalProperties": false
    },
    "client_info_for_bots": {
      "type": "object",
      "properties": {
        "button_actions": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_template_action_type_names"
          }
        },
        "keyboard": {
          "type": "boolean",
          "description": "client has support keyboard"
        },
        "inline_keyboard": {
          "type": "boolean",
          "description": "client has support inline keyboard"
        },
        "carousel": {
          "type": "boolean",
          "description": "client has support carousel"
        },
        "lang_id": {
          "type": "integer",
          "description": "client or user language id"
        }
      },
      "additionalProperties": false
    },
    "comment_thread": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_wall_comment"
          }
        },
        "can_post": {
          "type": "boolean",
          "description": "Information whether current user can comment the post"
        },
        "show_reply_button": {
          "type": "boolean",
          "description": "Information whether recommended to display reply button"
        },
        "groups_can_post": {
          "type": "boolean",
          "description": "Information whether groups can comment the post"
        }
      },
      "additionalProperties": false
    },
    "database_city": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/base_object"
        },
        {
          "properties": {
            "area": {
              "type": "string",
              "description": "Area title"
            },
            "region": {
              "type": "string",
              "description": "Region title"
            },
            "important": {
              "description": "Information whether the city is included in important cities list",
              "$ref": "#\/definitions\/base_bool_int"
            }
          },
          "additionalProperties": false
        }
      ],
      "additionalProperties": false
    },
    "database_city_by_id": {
      "$ref": "#\/definitions\/base_object"
    },
    "database_faculty": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "title": {
          "type": "string",
          "description": "Faculty title"
        }
      },
      "additionalProperties": false
    },
    "database_region": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Region ID"
        },
        "title": {
          "type": "string",
          "description": "Region title"
        }
      },
      "additionalProperties": false
    },
    "database_school": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "School ID"
        },
        "title": {
          "type": "string",
          "description": "School title"
        }
      },
      "additionalProperties": false
    },
    "database_station": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID",
          "minimum": 1
        },
        "color": {
          "type": "string",
          "description": "Hex color code without #"
        },
        "id": {
          "type": "integer",
          "description": "Station ID",
          "minimum": 1,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Station name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_university": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "title": {
          "type": "string",
          "description": "University title"
        }
      },
      "additionalProperties": false
    },
    "database_getChairs_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/base_object"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getCitiesById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/database_city_by_id"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getCities_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/database_city"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getCountriesById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_country"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getCountries_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/base_country"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getFaculties_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/database_faculty"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getMetroStationsById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/database_station"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getMetroStations_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/database_station"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getRegions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/database_region"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getSchoolClasses_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": [
                "string",
                "integer"
              ],
              "description": "Class ID or letter"
            }
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getSchools_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/database_school"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "database_getUniversities_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/database_university"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Document ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Document owner ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Document title",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "File size in bites",
          "minimum": 0,
          "required": true
        },
        "ext": {
          "type": "string",
          "description": "File extension",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "File URL"
        },
        "date": {
          "type": "integer",
          "description": "Date when file has been uploaded in Unixtime",
          "minimum": 0,
          "required": true
        },
        "type": {
          "type": "integer",
          "description": "Document type",
          "required": true
        },
        "preview": {
          "$ref": "#\/definitions\/docs_doc_preview"
        },
        "is_licensed": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "access_key": {
          "type": "string",
          "description": "Access key for the document"
        },
        "tags": {
          "type": "array",
          "description": "Document tags",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "docs_doc_attachment_type": {
      "type": "string",
      "description": "Doc attachment type",
      "enum": [
        "doc",
        "graffiti",
        "audio_message"
      ]
    },
    "docs_doc_preview": {
      "type": "object",
      "properties": {
        "audio_msg": {
          "$ref": "#\/definitions\/docs_doc_preview_audio_msg"
        },
        "graffiti": {
          "$ref": "#\/definitions\/docs_doc_preview_graffiti"
        },
        "photo": {
          "$ref": "#\/definitions\/docs_doc_preview_photo"
        },
        "video": {
          "$ref": "#\/definitions\/docs_doc_preview_video"
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_audio_msg": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "integer",
          "description": "Audio message duration in seconds",
          "minimum": 0,
          "required": true
        },
        "link_mp3": {
          "type": "string",
          "format": "uri",
          "description": "MP3 file URL",
          "required": true
        },
        "link_ogg": {
          "type": "string",
          "format": "uri",
          "description": "OGG file URL",
          "required": true
        },
        "waveform": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Sound visualisation",
            "minimum": 0
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_graffiti": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti file URL",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_photo": {
      "type": "object",
      "properties": {
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/docs_doc_preview_photo_sizes"
          }
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_photo_sizes": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Width in px",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Height in px",
          "minimum": 0,
          "required": true
        },
        "type": {
          "$ref": "#\/definitions\/photos_photo_sizes_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_preview_video": {
      "type": "object",
      "properties": {
        "src": {
          "type": "string",
          "format": "uri",
          "description": "Video URL",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Video's width in pixels",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Video's height in pixels",
          "minimum": 0,
          "required": true
        },
        "file_size": {
          "type": "integer",
          "description": "Video file size in bites",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_types": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Doc type ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Doc type title",
          "required": true
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of docs",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_add_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Document ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_doc_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "file": {
              "type": "string",
              "description": "Uploaded file data"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/docs_doc"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_getTypes_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/docs_doc_types"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_getUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/base_upload_server",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/docs_doc"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_save_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "type": {
              "$ref": "#\/definitions\/docs_doc_attachment_type"
            },
            "audio_message": {
              "$ref": "#\/definitions\/messages_audio_message"
            },
            "doc": {
              "$ref": "#\/definitions\/docs_doc"
            },
            "graffiti": {
              "$ref": "#\/definitions\/messages_graffiti"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "docs_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/docs_doc"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "donut_donator_subscription_info": {
      "description": "Info about user VK Donut subscription",
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "next_payment_date": {
          "type": "integer",
          "required": true
        },
        "amount": {
          "type": "integer",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "expiring"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "donut_getSubscription_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/donut_donator_subscription_info",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "donut_getSubscriptions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "subscriptions": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/donut_donator_subscription_info"
              },
              "required": true
            },
            "count": {
              "type": "integer",
              "minimum": 0
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "downloadedGames_paid_status_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "is_paid": {
              "type": "boolean",
              "description": "Game has been paid",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "events_event_attach": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "address of event"
        },
        "button_text": {
          "type": "string",
          "description": "text of attach",
          "required": true
        },
        "friends": {
          "type": "array",
          "description": "array of friends ids",
          "items": {
            "type": "integer"
          },
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "event ID",
          "minimum": 0,
          "required": true
        },
        "is_favorite": {
          "type": "boolean",
          "description": "is favorite",
          "required": true
        },
        "member_status": {
          "$ref": "#\/definitions\/groups_group_full_member_status",
          "description": "Current user's member status"
        },
        "text": {
          "type": "string",
          "description": "text of attach",
          "required": true
        },
        "time": {
          "type": "integer",
          "description": "event start time"
        }
      },
      "additionalProperties": false
    },
    "fave_bookmark": {
      "type": "object",
      "properties": {
        "added_date": {
          "type": "integer",
          "description": "Timestamp, when this item was bookmarked",
          "minimum": 0,
          "required": true
        },
        "link": {
          "$ref": "#\/definitions\/base_link"
        },
        "post": {
          "$ref": "#\/definitions\/wall_wallpost_full"
        },
        "product": {
          "$ref": "#\/definitions\/market_market_item"
        },
        "seen": {
          "type": "boolean",
          "description": "Has user seen this item",
          "required": true
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/fave_tag"
          },
          "required": true
        },
        "type": {
          "description": "Item type",
          "$ref": "#\/definitions\/fave_bookmark_type",
          "required": true
        },
        "video": {
          "$ref": "#\/definitions\/video_video_full"
        }
      },
      "additionalProperties": false
    },
    "fave_bookmark_type": {
      "type": "string",
      "enum": [
        "post",
        "video",
        "product",
        "article",
        "link"
      ]
    },
    "fave_page": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Some info about user or group",
          "required": true
        },
        "group": {
          "$ref": "#\/definitions\/groups_group_full"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/fave_tag"
          },
          "required": true
        },
        "type": {
          "description": "Item type",
          "$ref": "#\/definitions\/fave_page_type",
          "required": true
        },
        "updated_date": {
          "type": "integer",
          "description": "Timestamp, when this page was bookmarked",
          "minimum": 0
        },
        "user": {
          "$ref": "#\/definitions\/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "fave_page_type": {
      "type": "string",
      "enum": [
        "user",
        "group",
        "hints"
      ]
    },
    "fave_tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Tag id",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Tag name"
        }
      },
      "additionalProperties": false
    },
    "fave_addTag_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/fave_tag",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "fave_getPages_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/fave_page"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "fave_getTags_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/fave_tag"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "fave_get_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/fave_bookmark"
              }
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "fave_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/fave_bookmark"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_friend_extended_status": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/friends_friend_status"
        },
        {
          "properties": {
            "is_request_unread": {
              "type": "boolean",
              "description": "Is friend request from other user unread"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "friends_friend_status": {
      "type": "object",
      "properties": {
        "friend_status": {
          "$ref": "#\/definitions\/friends_friend_status_status",
          "required": true
        },
        "sign": {
          "type": "string",
          "description": "MD5 hash for the result validation"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_friend_status_status": {
      "type": "integer",
      "description": "Friend status with the user",
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "not a friend",
        "outcoming request",
        "incoming request",
        "is friend"
      ]
    },
    "friends_friends_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "List title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_mutual_friend": {
      "type": "object",
      "properties": {
        "common_count": {
          "type": "integer",
          "description": "Total mutual friends number"
        },
        "common_friends": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          }
        },
        "id": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "friends_requests": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "ID of the user by whom friend has been suggested"
        },
        "mutual": {
          "$ref": "#\/definitions\/friends_requests_mutual"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "friends_requests_mutual": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total mutual friends number"
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          }
        }
      },
      "additionalProperties": false
    },
    "friends_requests_xtr_message": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "description": "ID of the user by whom friend has been suggested"
        },
        "message": {
          "type": "string",
          "description": "Message sent with a request"
        },
        "mutual": {
          "$ref": "#\/definitions\/friends_requests_mutual"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "friends_user_xtr_phone": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user_full"
        },
        {
          "properties": {
            "phone": {
              "type": "string",
              "description": "User phone"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "friends_addList_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "list_id": {
              "type": "integer",
              "description": "List ID",
              "minimum": 1,
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_add_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Friend request status",
          "enum": [
            1,
            2,
            4
          ],
          "enumNames": [
            "SEND",
            "APPROVED",
            "RESEND"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_areFriends_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/friends_friend_extended_status"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_areFriends_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/friends_friend_status"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_delete_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "integer",
              "default": 1,
              "required": true
            },
            "friend_deleted": {
              "type": "integer",
              "description": "Returns 1 if friend has been deleted",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "out_request_deleted": {
              "type": "integer",
              "description": "Returns 1 if out request has been canceled",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "in_request_deleted": {
              "type": "integer",
              "description": "Returns 1 if incoming request has been declined",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            },
            "suggestion_deleted": {
              "type": "integer",
              "description": "Returns 1 if suggestion has been declined",
              "enum": [
                1
              ],
              "enumNames": [
                "ok"
              ]
            }
          },
          "maxProperties": 2,
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getAppUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1,
            "format": "int64",
            "entity": "owner"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getByPhones_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/friends_user_xtr_phone"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getLists_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of friends lists",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/friends_friends_list"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getMutual_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "entity": "owner",
            "format": "int64",
            "minimum": 1
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getMutual_target_uids_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/friends_mutual_friend"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getOnline_online_mobile_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "online": {
              "type": "array",
              "required": true,
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "format": "int64",
                "entity": "owner"
              }
            },
            "online_mobile": {
              "type": "array",
              "required": true,
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "format": "int64",
                "entity": "owner"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getOnline_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1,
            "format": "int64",
            "entity": "owner"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getRecent_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "minimum": 1
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getRequests_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total requests number",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/friends_requests_xtr_message"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getRequests_need_mutual_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total requests number",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/friends_requests"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getRequests_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total requests number",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "entity": "profiles",
                "format": "int64",
                "description": "User ID",
                "minimum": 1
              }
            },
            "count_unread": {
              "type": "integer",
              "description": "Total unread requests number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_getSuggestions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total results number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_get_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total friends number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total friends number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "entity": "profiles",
                "format": "int64"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "friends_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "gifts_gift": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when gist has been sent in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Gift sender ID"
        },
        "gift": {
          "$ref": "#\/definitions\/gifts_layout"
        },
        "gift_hash": {
          "type": "string",
          "description": "Hash"
        },
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "message": {
          "type": "string",
          "description": "Comment text"
        },
        "privacy": {
          "$ref": "#\/definitions\/gifts_gift_privacy"
        }
      },
      "additionalProperties": false
    },
    "gifts_gift_privacy": {
      "type": "integer",
      "description": "Gift privacy",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "name and message for all",
        "name for all",
        "name and message for recipient only"
      ]
    },
    "gifts_layout": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Gift ID"
        },
        "thumb_512": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 512 px in width"
        },
        "thumb_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 256 px in width"
        },
        "thumb_48": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 48 px in width"
        },
        "thumb_96": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 96 px in width"
        },
        "stickers_product_id": {
          "type": "integer",
          "minimum": 0,
          "description": "ID of the sticker pack, if the gift is representing one"
        },
        "is_stickers_style": {
          "type": "boolean",
          "description": "Information whether gift represents a stickers style"
        },
        "build_id": {
          "type": "string",
          "description": "ID of the build of constructor gift"
        },
        "keywords": {
          "type": "string",
          "description": "Keywords used for search"
        }
      },
      "additionalProperties": false
    },
    "gifts_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/gifts_gift"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_address": {
      "type": "object",
      "properties": {
        "additional_address": {
          "type": "string",
          "description": "Additional address to the place (6 floor, left door)"
        },
        "address": {
          "type": "string",
          "description": "String address to the place (Nevsky, 28)"
        },
        "city_id": {
          "type": "integer",
          "description": "City id of address",
          "minimum": 0
        },
        "country_id": {
          "type": "integer",
          "description": "Country id of address",
          "minimum": 0
        },
        "distance": {
          "type": "integer",
          "description": "Distance from the point"
        },
        "id": {
          "type": "integer",
          "description": "Address id",
          "required": true
        },
        "latitude": {
          "type": "number",
          "description": "Address latitude"
        },
        "longitude": {
          "type": "number",
          "description": "Address longitude"
        },
        "metro_station_id": {
          "type": "integer",
          "description": "Metro id of address",
          "minimum": 0
        },
        "phone": {
          "type": "string",
          "description": "Address phone"
        },
        "time_offset": {
          "type": "integer",
          "description": "Time offset int minutes from utc time"
        },
        "timetable": {
          "description": "Week timetable for the address",
          "$ref": "#\/definitions\/groups_address_timetable"
        },
        "title": {
          "type": "string",
          "description": "Title of the place (Zinger, etc)"
        },
        "work_info_status": {
          "description": "Status of information about timetable",
          "$ref": "#\/definitions\/groups_address_work_info_status"
        },
        "place_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "groups_address_timetable": {
      "type": "object",
      "description": "Timetable for a week",
      "properties": {
        "fri": {
          "description": "Timetable for friday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        },
        "mon": {
          "description": "Timetable for monday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        },
        "sat": {
          "description": "Timetable for saturday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        },
        "sun": {
          "description": "Timetable for sunday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        },
        "thu": {
          "description": "Timetable for thursday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        },
        "tue": {
          "description": "Timetable for tuesday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        },
        "wed": {
          "description": "Timetable for wednesday",
          "$ref": "#\/definitions\/groups_address_timetable_day"
        }
      },
      "additionalProperties": false
    },
    "groups_address_timetable_day": {
      "type": "object",
      "description": "Timetable for one day",
      "properties": {
        "break_close_time": {
          "type": "integer",
          "description": "Close time of the break in minutes"
        },
        "break_open_time": {
          "type": "integer",
          "description": "Start time of the break in minutes"
        },
        "close_time": {
          "type": "integer",
          "description": "Close time in minutes",
          "required": true
        },
        "open_time": {
          "type": "integer",
          "description": "Open time in minutes",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_address_work_info_status": {
      "type": "string",
      "description": "Status of information about timetable",
      "enum": [
        "no_information",
        "temporarily_closed",
        "always_opened",
        "timetable",
        "forever_closed"
      ]
    },
    "groups_addresses_info": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "description": "Information whether addresses is enabled",
          "type": "boolean",
          "required": true
        },
        "main_address_id": {
          "type": "integer",
          "description": "Main address id for group"
        }
      },
      "additionalProperties": false
    },
    "groups_ban_info": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "description": "Administrator ID",
          "minimum": 1
        },
        "comment": {
          "type": "string",
          "description": "Comment for a ban"
        },
        "comment_visible": {
          "type": "boolean",
          "description": "Show comment for user"
        },
        "is_closed": {
          "type": "boolean"
        },
        "date": {
          "type": "integer",
          "description": "Date when user has been added to blacklist in Unixtime",
          "minimum": 0
        },
        "end_date": {
          "type": "integer",
          "description": "Date when user will be removed from blacklist in Unixtime",
          "minimum": 0
        },
        "reason": {
          "$ref": "#\/definitions\/groups_ban_info_reason"
        }
      },
      "additionalProperties": false
    },
    "groups_ban_info_reason": {
      "type": "integer",
      "description": "Ban reason",
      "enum": [
        0,
        1,
        2,
        3,
        4
      ],
      "enumNames": [
        "other",
        "spam",
        "verbal abuse",
        "strong language",
        "flood"
      ]
    },
    "groups_banned_item": {
      "$ref": "#\/definitions\/groups_owner_xtr_ban_info"
    },
    "groups_callback_server": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string",
          "required": true
        },
        "creator_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "url": {
          "type": "string",
          "required": true
        },
        "secret_key": {
          "type": "string",
          "required": true
        },
        "status": {
          "type": "string",
          "enum": [
            "unconfigured",
            "failed",
            "wait",
            "ok"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_callback_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "#\/definitions\/groups_long_poll_events"
        }
      },
      "additionalProperties": false
    },
    "groups_contacts_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        },
        "desc": {
          "type": "string",
          "description": "Contact description"
        },
        "phone": {
          "type": "string",
          "description": "Contact phone"
        },
        "email": {
          "type": "string",
          "description": "Contact email"
        }
      },
      "additionalProperties": false
    },
    "groups_counters_group": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "integer",
          "description": "Addresses number"
        },
        "albums": {
          "type": "integer",
          "description": "Photo albums number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "audio_playlists": {
          "type": "integer",
          "description": "Audio playlists number"
        },
        "docs": {
          "type": "integer",
          "description": "Docs number"
        },
        "market": {
          "type": "integer",
          "description": "Market items number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "topics": {
          "type": "integer",
          "description": "Topics number"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        },
        "market_services": {
          "type": "integer",
          "description": "Market services number"
        },
        "podcasts": {
          "type": "integer",
          "description": "Podcasts number"
        },
        "articles": {
          "type": "integer",
          "description": "Articles number"
        },
        "narratives": {
          "type": "integer",
          "description": "Narratives number"
        },
        "clips": {
          "type": "integer",
          "description": "Clips number"
        },
        "clips_followers": {
          "type": "integer",
          "description": "Clips followers number"
        }
      },
      "additionalProperties": false
    },
    "groups_cover": {
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Information whether cover is enabled",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_fields": {
      "type": "string",
      "enum": [
        "market",
        "member_status",
        "is_favorite",
        "is_subscribed",
        "is_subscribed_podcasts",
        "can_subscribe_podcasts",
        "city",
        "country",
        "verified",
        "description",
        "wiki_page",
        "members_count",
        "requests_count",
        "counters",
        "cover",
        "can_post",
        "can_suggest",
        "can_upload_story",
        "can_upload_doc",
        "can_upload_video",
        "can_upload_clip",
        "can_see_all_posts",
        "can_create_topic",
        "crop_photo",
        "activity",
        "fixed_post",
        "has_photo",
        "status",
        "main_album_id",
        "links",
        "contacts",
        "site",
        "main_section",
        "secondary_section",
        "wall",
        "trending",
        "can_message",
        "is_market_cart_enabled",
        "is_messages_blocked",
        "can_send_notify",
        "has_group_channel",
        "group_channel",
        "online_status",
        "start_date",
        "finish_date",
        "age_limits",
        "ban_info",
        "action_button",
        "author_id",
        "phone",
        "has_market_app",
        "addresses",
        "live_covers",
        "is_adult",
        "is_hidden_from_feed",
        "can_subscribe_posts",
        "warning_notification",
        "msg_push_allowed",
        "stories_archive_count",
        "video_live_level",
        "video_live_count",
        "clips_count",
        "has_unseen_stories",
        "is_business",
        "textlives_count",
        "members_count_text"
      ]
    },
    "groups_filter": {
      "type": "string",
      "enum": [
        "admin",
        "editor",
        "moder",
        "advertiser",
        "groups",
        "publics",
        "events",
        "has_addresses"
      ]
    },
    "groups_group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "groups",
          "format": "int64",
          "description": "Community ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Community name"
        },
        "screen_name": {
          "type": "string",
          "description": "Domain of the community page"
        },
        "is_closed": {
          "$ref": "#\/definitions\/groups_group_is_closed"
        },
        "type": {
          "$ref": "#\/definitions\/groups_group_type"
        },
        "is_admin": {
          "description": "Information whether current user is administrator",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "admin_level": {
          "$ref": "#\/definitions\/groups_group_admin_level"
        },
        "is_member": {
          "description": "Information whether current user is member",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "is_advertiser": {
          "description": "Information whether current user is advertiser",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "start_date": {
          "description": "Start date in Unixtime format",
          "type": "integer"
        },
        "finish_date": {
          "description": "Finish date in Unixtime format",
          "type": "integer"
        },
        "deactivated": {
          "type": "string",
          "description": "Information whether community is banned"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 50 pixels in width"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 100 pixels in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 200 pixels in width"
        },
        "photo_200_orig": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 200 pixels in width original"
        },
        "photo_400": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 400 pixels in width"
        },
        "photo_400_orig": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with 400 pixels in width original"
        },
        "photo_max": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with max pixels in width"
        },
        "photo_max_orig": {
          "type": "string",
          "format": "uri",
          "description": "URL of square photo of the community with max pixels in width original"
        },
        "est_date": {
          "type": "string",
          "description": "Established date"
        },
        "public_date_label": {
          "type": "string",
          "description": "Public date label"
        },
        "photo_max_size": {
          "$ref": "#\/definitions\/groups_photo_size"
        },
        "is_video_live_notifications_blocked": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "video_live": {
          "$ref": "#\/definitions\/video_live_info"
        }
      },
      "additionalProperties": false
    },
    "groups_group_access": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ]
    },
    "groups_group_admin_level": {
      "type": "integer",
      "description": "Level of current user's credentials as manager",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "moderator",
        "editor",
        "administrator"
      ]
    },
    "groups_group_age_limits": {
      "type": "integer",
      "default": 1,
      "minimum": 0,
      "enumNames": [
        "unlimited",
        "16 plus",
        "18 plus"
      ],
      "enum": [
        1,
        2,
        3
      ]
    },
    "groups_group_attach": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "group ID",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "description": "text of attach",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "activity or category of group",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "size of group",
          "required": true
        },
        "is_favorite": {
          "type": "boolean",
          "description": "is favorite",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_group_audio": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_ban_info": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string",
          "description": "Ban comment"
        },
        "end_date": {
          "type": "integer",
          "description": "End date of ban in Unixtime"
        },
        "reason": {
          "$ref": "#\/definitions\/groups_ban_info_reason"
        }
      },
      "additionalProperties": false
    },
    "groups_group_category": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_object_with_name"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_category_full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "page_count": {
          "type": "integer",
          "description": "Pages number",
          "required": true
        },
        "page_previews": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_group"
          },
          "required": true
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_group_category"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_category_type": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_group_docs": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/groups_group"
        },
        {
          "properties": {
            "market": {
              "$ref": "#\/definitions\/groups_market_info"
            },
            "member_status": {
              "$ref": "#\/definitions\/groups_group_full_member_status",
              "description": "Current user's member status"
            },
            "is_adult": {
              "description": "Information whether community is adult",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_hidden_from_feed": {
              "description": "Information whether community is hidden from current user's newsfeed",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_favorite": {
              "description": "Information whether community is in faves",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_subscribed": {
              "description": "Information whether current user is subscribed",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "city": {
              "$ref": "#\/definitions\/base_object"
            },
            "country": {
              "$ref": "#\/definitions\/base_country"
            },
            "verified": {
              "description": "Information whether community is verified",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "description": {
              "type": "string",
              "description": "Community description"
            },
            "wiki_page": {
              "type": "string",
              "description": "Community's main wiki page title"
            },
            "members_count": {
              "type": "integer",
              "minimum": 0,
              "description": "Community members number"
            },
            "members_count_text": {
              "type": "string",
              "description": "Info about number of users in group"
            },
            "requests_count": {
              "type": "integer",
              "minimum": 0,
              "description": "The number of incoming requests to the community"
            },
            "video_live_level": {
              "type": "integer",
              "description": "Community level live streams achievements",
              "minimum": 0
            },
            "video_live_count": {
              "type": "integer",
              "description": "Number of community's live streams",
              "minimum": 0
            },
            "clips_count": {
              "type": "integer",
              "description": "Number of community's clips",
              "minimum": 0
            },
            "counters": {
              "$ref": "#\/definitions\/groups_counters_group"
            },
            "cover": {
              "$ref": "#\/definitions\/groups_cover"
            },
            "can_post": {
              "description": "Information whether current user can post on community's wall",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_suggest": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_upload_story": {
              "description": "Information whether current user can upload story",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_upload_doc": {
              "description": "Information whether current user can upload doc",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_upload_video": {
              "description": "Information whether current user can upload video",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see all posts on community's wall",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_create_topic": {
              "description": "Information whether current user can create topic",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "activity": {
              "type": "string",
              "description": "Type of group, start date of event or category of public page"
            },
            "fixed_post": {
              "type": "integer",
              "description": "Fixed post ID"
            },
            "has_photo": {
              "description": "Information whether community has photo",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "crop_photo": {
              "description": "\u0414\u0430\u043d\u043d\u044b\u0435 \u043e \u0442\u043e\u0447\u043a\u0430\u0445, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u0432\u044b\u0440\u0435\u0437\u0430\u043d\u044b \u043f\u0440\u043e\u0444\u0438\u043b\u044c\u043d\u0430\u044f \u0438 \u043c\u0438\u043d\u0438\u0430\u0442\u044e\u0440\u043d\u0430\u044f \u0444\u043e\u0442\u043e\u0433\u0440\u0430\u0444\u0438\u0438 \u0441\u043e\u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0430",
              "$ref": "#\/definitions\/base_crop_photo"
            },
            "status": {
              "type": "string",
              "description": "Community status"
            },
            "status_audio": {
              "$ref": "#\/definitions\/audio_audio"
            },
            "main_album_id": {
              "type": "integer",
              "description": "Community's main photo album ID"
            },
            "links": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_links_item"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_contacts_item"
              }
            },
            "wall": {
              "type": "integer",
              "description": "Information about wall status in community",
              "enum": [
                0,
                1,
                2,
                3
              ],
              "enumNames": [
                "disabled",
                "open",
                "limited",
                "restricted"
              ]
            },
            "site": {
              "type": "string",
              "description": "Community's website"
            },
            "main_section": {
              "$ref": "#\/definitions\/groups_group_full_section"
            },
            "secondary_section": {
              "$ref": "#\/definitions\/groups_group_full_section"
            },
            "trending": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether the community has a \"fire\" pictogram."
            },
            "can_message": {
              "description": "Information whether current user can send a message to community",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_messages_blocked": {
              "description": "Information whether community can send a message to current user",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_send_notify": {
              "description": "Information whether community can send notifications by phone number to current user",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "online_status": {
              "$ref": "#\/definitions\/groups_online_status",
              "description": "Status of replies in community messages"
            },
            "invited_by": {
              "type": "integer",
              "description": "Inviter ID",
              "minimum": 1
            },
            "age_limits": {
              "$ref": "#\/definitions\/groups_group_full_age_limits",
              "description": "Information whether age limit"
            },
            "ban_info": {
              "$ref": "#\/definitions\/groups_group_ban_info",
              "description": "User ban info"
            },
            "has_market_app": {
              "type": "boolean",
              "description": "Information whether community has installed market app"
            },
            "using_vkpay_market_app": {
              "type": "boolean"
            },
            "has_group_channel": {
              "type": "boolean"
            },
            "addresses": {
              "$ref": "#\/definitions\/groups_addresses_info",
              "description": "Info about addresses in groups"
            },
            "is_subscribed_podcasts": {
              "description": "Information whether current user is subscribed to podcasts",
              "type": "boolean"
            },
            "can_subscribe_podcasts": {
              "description": "Owner in whitelist or not",
              "type": "boolean"
            },
            "can_subscribe_posts": {
              "description": "Can subscribe to wall",
              "type": "boolean"
            },
            "live_covers": {
              "description": "Live covers state",
              "$ref": "#\/definitions\/groups_live_covers"
            },
            "stories_archive_count": {
              "type": "integer"
            },
            "has_unseen_stories": {
              "type": "boolean"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "groups_group_full_age_limits": {
      "type": "integer",
      "enum": [
        1,
        2,
        3
      ],
      "enumNames": [
        "no",
        "over 16",
        "over 18"
      ]
    },
    "groups_group_full_member_status": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5
      ],
      "enumNames": [
        "not a member",
        "member",
        "not sure",
        "declined",
        "has sent a request",
        "invited"
      ]
    },
    "groups_group_full_section": {
      "type": "integer",
      "description": "Main section of community",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        24,
        26,
        27,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        39,
        40,
        41,
        42,
        43,
        44,
        45,
        46,
        47,
        48,
        49,
        50,
        51,
        53,
        54,
        55,
        57,
        58
      ],
      "enumNames": [
        "none",
        "photos",
        "topics",
        "audios",
        "videos",
        "market",
        "stories",
        "apps",
        "followers",
        "links",
        "events",
        "places",
        "contacts",
        "app_btns",
        "docs",
        "event_counters",
        "group_messages",
        "albums",
        "categories",
        "admin_help",
        "app_widget",
        "public_help",
        "hs_donation_app",
        "hs_market_app",
        "addresses",
        "artist_page",
        "podcast",
        "articles",
        "admin_tips",
        "menu",
        "fixed_post",
        "chats",
        "evergreen_notice",
        "musicians",
        "narratives",
        "donut_donate",
        "clips",
        "market_cart",
        "curators",
        "market_services",
        "classifieds",
        "textlives",
        "donut_for_dons",
        "badges",
        "chats_creation"
      ]
    },
    "groups_group_is_closed": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "open",
        "closed",
        "private"
      ],
      "description": "Information whether community is closed"
    },
    "groups_group_market_currency": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        643,
        980,
        398,
        978,
        840
      ],
      "enumNames": [
        "russian rubles",
        "ukrainian hryvnia",
        "kazakh tenge",
        "euro",
        "us dollars"
      ]
    },
    "groups_group_photos": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_public_category_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "subcategories": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_group_category_type"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_group_role": {
      "type": "string",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "advertiser"
      ]
    },
    "groups_group_subject": {
      "type": "string",
      "enum": [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38,
        39,
        40,
        41,
        42
      ],
      "enumNames": [
        "auto",
        "activity holidays",
        "business",
        "pets",
        "health",
        "dating and communication",
        "games",
        "it",
        "cinema",
        "beauty and fashion",
        "cooking",
        "art and culture",
        "literature",
        "mobile services and internet",
        "music",
        "science and technology",
        "real estate",
        "news and media",
        "security",
        "education",
        "home and renovations",
        "politics",
        "food",
        "industry",
        "travel",
        "work",
        "entertainment",
        "religion",
        "family",
        "sports",
        "insurance",
        "television",
        "goods and services",
        "hobbies",
        "finance",
        "photo",
        "esoterics",
        "electronics and appliances",
        "erotic",
        "humor",
        "society_humanities",
        "design and graphics"
      ]
    },
    "groups_group_suggested_privacy": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "none",
        "all",
        "subscribers"
      ]
    },
    "groups_group_tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "color": {
          "type": "string",
          "enum": [
            "454647",
            "45678f",
            "4bb34b",
            "5181b8",
            "539b9c",
            "5c9ce6",
            "63b9ba",
            "6bc76b",
            "76787a",
            "792ec0",
            "7a6c4f",
            "7ececf",
            "9e8d6b",
            "a162de",
            "aaaeb3",
            "bbaa84",
            "e64646",
            "ff5c5c",
            "ffa000",
            "ffc107"
          ],
          "required": true
        },
        "uses": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "groups_group_topics": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_type": {
      "type": "string",
      "description": "Community type",
      "enum": [
        "group",
        "page",
        "event"
      ]
    },
    "groups_group_video": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_group_wall": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2,
        3
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited",
        "closed"
      ]
    },
    "groups_group_wiki": {
      "type": "integer",
      "minimum": 0,
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "disabled",
        "open",
        "limited"
      ]
    },
    "groups_groups_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Communities number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Community ID",
            "entity": "owner",
            "format": "int64"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_links_item": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Link title"
        },
        "desc": {
          "type": "string",
          "description": "Link description"
        },
        "edit_title": {
          "description": "Information whether the link title can be edited",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "id": {
          "type": "integer",
          "description": "Link ID"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of square image of the link with 100 pixels in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of square image of the link with 50 pixels in width"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        },
        "image_processing": {
          "description": "Information whether the image on processing",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "groups_live_covers": {
      "type": "object",
      "properties": {
        "is_enabled": {
          "description": "Information whether live covers is enabled",
          "type": "boolean",
          "required": true
        },
        "is_scalable": {
          "description": "Information whether live covers photo scaling is enabled",
          "type": "boolean"
        },
        "story_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "groups_long_poll_events": {
      "type": "object",
      "properties": {
        "audio_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "board_post_delete": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "board_post_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "board_post_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "board_post_restore": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "group_change_photo": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "group_change_settings": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "group_join": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "group_leave": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "group_officers_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "lead_forms_new": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "market_comment_delete": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "market_comment_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "market_comment_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "market_comment_restore": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "market_order_new": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "market_order_edit": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "message_allow": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "message_deny": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "message_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "message_read": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "message_reply": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "message_typing_state": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "message_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "photo_comment_delete": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "photo_comment_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "photo_comment_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "photo_comment_restore": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "photo_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "poll_vote_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "user_block": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "user_unblock": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "video_comment_delete": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "video_comment_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "video_comment_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "video_comment_restore": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "video_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "wall_post_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "wall_reply_delete": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "wall_reply_edit": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "wall_reply_new": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "wall_reply_restore": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "wall_repost": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_subscription_create": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_subscription_prolonged": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_subscription_cancelled": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_subscription_expired": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_subscription_price_changed": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_money_withdraw": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "donut_money_withdraw_error": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_long_poll_server": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Long Poll key",
          "required": true
        },
        "server": {
          "type": "string",
          "description": "Long Poll server address",
          "required": true
        },
        "ts": {
          "type": "string",
          "description": "Number of the last event",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_long_poll_settings": {
      "type": "object",
      "properties": {
        "api_version": {
          "type": "string",
          "description": "API version used for the events"
        },
        "events": {
          "$ref": "#\/definitions\/groups_long_poll_events",
          "required": true
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Shows whether Long Poll is enabled",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_market_info": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Market type"
        },
        "contact_id": {
          "type": "integer",
          "description": "Contact person ID"
        },
        "currency": {
          "$ref": "#\/definitions\/market_currency"
        },
        "currency_text": {
          "type": "string",
          "description": "Currency name"
        },
        "enabled": {
          "description": "Information whether the market is enabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "main_album_id": {
          "type": "integer",
          "description": "Main market album ID"
        },
        "price_max": {
          "type": "string",
          "description": "Maximum price"
        },
        "price_min": {
          "type": "string",
          "description": "Minimum price"
        },
        "min_order_price": {
          "$ref": "#\/definitions\/market_price"
        }
      },
      "additionalProperties": false
    },
    "groups_market_state": {
      "type": "string",
      "description": "Declares state if market is enabled in group.",
      "enum": [
        "none",
        "basic",
        "advanced"
      ]
    },
    "groups_member_role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID",
          "required": true
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_member_role_permission"
          }
        },
        "role": {
          "$ref": "#\/definitions\/groups_member_role_status"
        }
      },
      "additionalProperties": false
    },
    "groups_member_role_permission": {
      "type": "string",
      "enum": [
        "ads"
      ]
    },
    "groups_member_role_status": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator",
        "advertiser"
      ]
    },
    "groups_member_status": {
      "type": "object",
      "properties": {
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_member_status_full": {
      "type": "object",
      "properties": {
        "can_invite": {
          "description": "Information whether user can be invited",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_recall": {
          "description": "Information whether user's invite to the group can be recalled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "invitation": {
          "description": "Information whether user has been invited to the group",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "member": {
          "description": "Information whether user is a member of the group",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "request": {
          "description": "Information whether user has send request to the group",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_online_status": {
      "type": "object",
      "description": "Online status of group",
      "properties": {
        "minutes": {
          "type": "integer",
          "description": "Estimated time of answer (for status = answer_mark)"
        },
        "status": {
          "$ref": "#\/definitions\/groups_online_status_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_online_status_type": {
      "type": "string",
      "description": "Type of online status of group",
      "enum": [
        "none",
        "online",
        "answer_mark"
      ]
    },
    "groups_owner_xtr_ban_info": {
      "type": "object",
      "properties": {
        "ban_info": {
          "$ref": "#\/definitions\/groups_ban_info"
        },
        "group": {
          "$ref": "#\/definitions\/groups_group",
          "description": "Information about group if type = group"
        },
        "profile": {
          "$ref": "#\/definitions\/users_user",
          "description": "Information about group if type = profile"
        },
        "type": {
          "$ref": "#\/definitions\/groups_owner_xtr_ban_info_type"
        }
      },
      "additionalProperties": false
    },
    "groups_owner_xtr_ban_info_type": {
      "type": "string",
      "description": "Owner type",
      "enum": [
        "group",
        "profile"
      ]
    },
    "groups_photo_size": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Image height",
          "minimum": 0,
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Image width",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_role_options": {
      "type": "string",
      "description": "User's credentials as community admin",
      "enum": [
        "moderator",
        "editor",
        "administrator",
        "creator"
      ]
    },
    "groups_sections_list_item": {
      "type": "array",
      "maxItems": 2,
      "minItems": 2,
      "description": "(index, title) tuples",
      "items": {
        "type": [
          "integer",
          "string"
        ]
      }
    },
    "groups_settings_twitter": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "loading",
            "sync"
          ],
          "required": true
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "groups_subject_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Subject ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Subject title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_token_permission_setting": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "setting": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_user_xtr_role": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user_full"
        },
        {
          "properties": {
            "role": {
              "$ref": "#\/definitions\/groups_role_options"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "groups_addAddress_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/groups_address",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_addCallbackServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "server_id": {
              "type": "integer",
              "minimum": 0,
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_addLink_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/groups_links_item",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_create_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/groups_group",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_editAddress_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/groups_address",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getAddresses_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total count of addresses",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_address"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getBanned_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total users number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_banned_item"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getById_object_legacy_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_group_full"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getCallbackConfirmationCode_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "Confirmation code",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getCallbackServers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_callback_server"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getCallbackSettings_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/groups_callback_settings",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getCatalogInfo_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "enabled": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether catalog is enabled for current user",
              "required": true
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_category_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getCatalogInfo_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "enabled": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether catalog is enabled for current user",
              "required": true
            },
            "categories": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_category"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getCatalog_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getInvitedUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getInvites_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_min"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getInvites_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getLongPollServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/groups_long_poll_server",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getLongPollSettings_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/groups_long_poll_settings",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getMembers_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total members number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_user_xtr_role"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getMembers_filter_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total members number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_member_role"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getMembers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total members number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "entity": "owner",
                "description": "User ID",
                "minimum": 0
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getRequests_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getRequests_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "entity": "owner",
                "description": "User ID",
                "minimum": 1
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getSettings_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "access": {
              "$ref": "#\/definitions\/groups_group_access",
              "description": "Community access settings"
            },
            "address": {
              "type": "string",
              "description": "Community's page domain"
            },
            "audio": {
              "$ref": "#\/definitions\/groups_group_audio",
              "description": "Audio settings",
              "required": true
            },
            "articles": {
              "type": "integer",
              "description": "Articles settings",
              "required": true
            },
            "recognize_photo": {
              "type": "integer",
              "description": "Photo suggests setting"
            },
            "city_id": {
              "type": "integer",
              "description": "City id of group",
              "required": true
            },
            "city_name": {
              "type": "string",
              "description": "City name of group",
              "required": true
            },
            "contacts": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "links": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "sections_list": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_sections_list_item"
              }
            },
            "main_section": {
              "$ref": "#\/definitions\/groups_group_full_section"
            },
            "secondary_section": {
              "$ref": "#\/definitions\/groups_group_full_section"
            },
            "age_limits": {
              "$ref": "#\/definitions\/groups_group_age_limits"
            },
            "country_id": {
              "type": "integer",
              "description": "Country id of group",
              "required": true
            },
            "country_name": {
              "type": "string",
              "description": "Country name of group",
              "required": true
            },
            "description": {
              "type": "string",
              "description": "Community description",
              "required": true
            },
            "docs": {
              "$ref": "#\/definitions\/groups_group_docs",
              "description": "Docs settings",
              "required": true
            },
            "events": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "obscene_filter": {
              "description": "Information whether the obscene filter is enabled",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            },
            "obscene_stopwords": {
              "description": "Information whether the stop words filter is enabled",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            },
            "obscene_words": {
              "type": "array",
              "description": "The list of stop words",
              "items": {
                "type": "string"
              },
              "required": true
            },
            "event_group_id": {
              "type": "integer"
            },
            "photos": {
              "description": "Photos settings",
              "$ref": "#\/definitions\/groups_group_photos",
              "required": true
            },
            "public_category": {
              "type": "integer",
              "description": "Information about the group category"
            },
            "public_category_list": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_public_category_list"
              }
            },
            "public_date": {
              "type": "string"
            },
            "public_date_label": {
              "type": "string"
            },
            "public_subcategory": {
              "type": "integer",
              "description": "Information about the group subcategory"
            },
            "rss": {
              "type": "string",
              "format": "uri",
              "description": "URL of the RSS feed"
            },
            "start_date": {
              "type": "integer",
              "description": "Start date",
              "minimum": 0
            },
            "finish_date": {
              "description": "Finish date in Unix-time format",
              "type": "integer"
            },
            "subject": {
              "type": "integer",
              "description": "Community subject ID"
            },
            "subject_list": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_subject_item"
              }
            },
            "suggested_privacy": {
              "$ref": "#\/definitions\/groups_group_suggested_privacy"
            },
            "title": {
              "type": "string",
              "description": "Community title",
              "required": true
            },
            "topics": {
              "$ref": "#\/definitions\/groups_group_topics",
              "description": "Topics settings",
              "required": true
            },
            "twitter": {
              "$ref": "#\/definitions\/groups_settings_twitter"
            },
            "video": {
              "$ref": "#\/definitions\/groups_group_video",
              "description": "Video settings",
              "required": true
            },
            "wall": {
              "$ref": "#\/definitions\/groups_group_wall",
              "description": "Wall settings",
              "required": true
            },
            "website": {
              "type": "string",
              "description": "Community website"
            },
            "phone": {
              "type": "string",
              "description": "Community phone"
            },
            "email": {
              "type": "string",
              "description": "Community email"
            },
            "wiki": {
              "$ref": "#\/definitions\/groups_group_wiki",
              "description": "Wiki settings",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getTagList_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_group_tag"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_getTokenPermissions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "mask": {
              "type": "integer",
              "minimum": 0,
              "required": true
            },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_token_permission_setting"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_get_object_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "entity": "groups",
                "description": "Community ID",
                "minimum": 0
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_isMember_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "member": {
              "description": "Information whether user is a member of the group",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            },
            "invitation": {
              "description": "Information whether user has been invited to the group",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_invite": {
              "description": "Information whether user can be invited",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_recall": {
              "description": "Information whether user's invite to the group can be recalled",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "request": {
              "description": "Information whether user has sent request to the group",
              "$ref": "#\/definitions\/base_bool_int"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_isMember_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Information whether user is a member of the group",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_isMember_user_ids_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_member_status_full"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_isMember_user_ids_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_member_status"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "groups_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total communities number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_answer": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "required": true
        },
        "answer": {
          "oneOf": [
            {
              "$ref": "#\/definitions\/leadForms_answer_item"
            },
            {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/leadForms_answer_item"
              }
            }
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_answer_item": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_form": {
      "type": "object",
      "properties": {
        "form_id": {
          "type": "integer",
          "required": true
        },
        "group_id": {
          "type": "integer",
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "photo": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "confirmation": {
          "type": "string"
        },
        "site_link_url": {
          "type": "string",
          "format": "uri"
        },
        "policy_link_url": {
          "type": "string",
          "format": "uri"
        },
        "questions": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/leadForms_question_item"
          }
        },
        "active": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "leads_count": {
          "type": "integer",
          "required": true
        },
        "pixel_code": {
          "type": "string"
        },
        "once_per_user": {
          "type": "integer"
        },
        "notify_admins": {
          "type": "string"
        },
        "notify_emails": {
          "type": "string"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_lead": {
      "type": "object",
      "properties": {
        "lead_id": {
          "type": "integer",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "date": {
          "type": "integer",
          "required": true
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/leadForms_answer"
          },
          "required": true
        },
        "ad_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "leadForms_question_item": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string",
          "enum": [
            "input",
            "textarea",
            "radio",
            "checkbox",
            "select"
          ],
          "required": true
        },
        "label": {
          "type": "string"
        },
        "options": {
          "description": "\u041e\u043f\u0446\u0438\u0438 \u0432\u044b\u0431\u043e\u0440\u0430 \u0434\u043b\u044f \u0442\u0438\u043f\u043e\u0432 radio, checkbox, select",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/leadForms_question_item_option"
          }
        }
      },
      "additionalProperties": false
    },
    "leadForms_question_item_option": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_create_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "form_id": {
              "type": "integer",
              "required": true
            },
            "url": {
              "type": "string",
              "format": "uri",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_delete_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "form_id": {
              "type": "integer",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_getLeads_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "leads": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/leadForms_lead"
              },
              "required": true
            },
            "next_page_token": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/leadForms_form",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_list_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/leadForms_form"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "leadForms_uploadUrl_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "format": "uri",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "likes_type": {
      "type": "string",
      "enum": [
        "post",
        "comment",
        "photo",
        "audio",
        "video",
        "note",
        "market",
        "photo_comment",
        "video_comment",
        "topic_comment",
        "market_comment",
        "sitepage",
        "textpost"
      ]
    },
    "likes_add_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "likes": {
              "type": "integer",
              "description": "Total likes number",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "likes_delete_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "likes": {
              "type": "integer",
              "description": "Total likes number",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "likes_getList_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_min"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "likes_getList_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "entity": "owner",
                "description": "User ID"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "likes_isLiked_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "liked": {
              "description": "Information whether user liked the object",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            },
            "copied": {
              "description": "Information whether user reposted the object",
              "$ref": "#\/definitions\/base_bool_int",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "link_target_object": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Object type"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner ID",
          "entity": "owner",
          "format": "int64"
        },
        "item_id": {
          "type": "integer",
          "description": "Item ID"
        }
      },
      "additionalProperties": false
    },
    "market_currency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Currency ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Currency sign",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Currency title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_market_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Market album ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Market album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Market album title",
          "required": true
        },
        "count": {
          "type": "integer",
          "description": "Items number",
          "minimum": 0,
          "required": true
        },
        "is_main": {
          "type": "boolean",
          "description": "Is album main for owner"
        },
        "is_hidden": {
          "type": "boolean",
          "description": "Is album hidden"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "updated_time": {
          "type": "integer",
          "description": "Date when album has been updated last time in Unixtime",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_market_category": {
      "$ref": "#\/definitions\/market_market_category_old"
    },
    "market_market_category_nested": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "parent": {
          "$ref": "#\/definitions\/market_market_category_nested"
        }
      },
      "additionalProperties": false
    },
    "market_market_category_old": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "section": {
          "$ref": "#\/definitions\/market_section",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_market_category_tree": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Category ID",
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Category name",
          "required": true
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/market_market_category_tree"
          }
        }
      },
      "additionalProperties": false
    },
    "market_market_item": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the market item"
        },
        "availability": {
          "$ref": "#\/definitions\/market_market_item_availability",
          "required": true
        },
        "button_title": {
          "type": "string",
          "description": "Title for button for url"
        },
        "category": {
          "$ref": "#\/definitions\/market_market_category",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the item has been created in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Item description",
          "required": true
        },
        "external_id": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "description": "Item ID",
          "minimum": 0,
          "required": true
        },
        "is_favorite": {
          "type": "boolean"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Item owner's ID",
          "format": "int64",
          "required": true
        },
        "price": {
          "$ref": "#\/definitions\/market_price",
          "required": true
        },
        "thumb_photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "title": {
          "type": "string",
          "description": "Item title",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to item"
        },
        "variants_grouping_id": {
          "type": "integer",
          "minimum": 0
        },
        "is_main_variant": {
          "type": "boolean"
        },
        "sku": {
          "type": "string",
          "maxLength": 50
        }
      },
      "additionalProperties": false
    },
    "market_market_item_availability": {
      "type": "integer",
      "description": "Information whether the item is available",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "available",
        "removed",
        "unavailable"
      ]
    },
    "market_market_item_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/market_market_item"
        },
        {
          "properties": {
            "albums_ids": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo"
              }
            },
            "can_comment": {
              "description": "Information whether current use can comment the item",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_repost": {
              "description": "Information whether current use can repost the item",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "likes": {
              "$ref": "#\/definitions\/base_likes"
            },
            "reposts": {
              "$ref": "#\/definitions\/base_reposts_info"
            },
            "views_count": {
              "type": "integer",
              "description": "Views number"
            },
            "wishlist_item_id": {
              "type": "integer",
              "description": "Object identifier in wishlist of viewer"
            },
            "cancel_info": {
              "description": "Information for cancel and revert order",
              "$ref": "#\/definitions\/base_link"
            },
            "user_agreement_info": {
              "description": "User agreement info",
              "type": "string"
            },
            "ad_id": {
              "description": "Contains ad ID if it has",
              "type": "integer"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "market_order": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "group_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "display_order_id": {
          "type": "string"
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "status": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "items_count": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "track_number": {
          "type": "string"
        },
        "track_link": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "merchant_comment": {
          "type": "string"
        },
        "weight": {
          "type": "integer",
          "minimum": 0
        },
        "total_price": {
          "$ref": "#\/definitions\/market_price",
          "required": true
        },
        "preview_order_items": {
          "type": "array",
          "description": "Several order items for preview",
          "items": {
            "$ref": "#\/definitions\/market_order_item"
          }
        },
        "cancel_info": {
          "description": "Information for cancel and revert order",
          "$ref": "#\/definitions\/base_link"
        }
      },
      "additionalProperties": false
    },
    "market_order_item": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "item_id": {
          "type": "integer",
          "required": true
        },
        "price": {
          "$ref": "#\/definitions\/market_price",
          "required": true
        },
        "quantity": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "item": {
          "$ref": "#\/definitions\/market_market_item",
          "required": true
        },
        "title": {
          "type": "string"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "variants": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "market_price": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount",
          "required": true
        },
        "currency": {
          "$ref": "#\/definitions\/market_currency",
          "required": true
        },
        "discount_rate": {
          "type": "integer"
        },
        "old_amount": {
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Text",
          "required": true
        },
        "old_amount_text": {
          "type": "string",
          "description": "Textual representation of old price"
        }
      },
      "additionalProperties": false
    },
    "market_section": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Section ID",
          "minimum": 0,
          "required": true
        },
        "name": {
          "type": "string",
          "description": "Section name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_services_view_type": {
      "type": "integer",
      "description": "Type of view. 1 - cards, 2 - rows",
      "enum": [
        1,
        2
      ],
      "enumNames": [
        "cards",
        "rows"
      ]
    },
    "market_addAlbum_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "market_album_id": {
              "type": "integer",
              "description": "Album ID"
            },
            "albums_count": {
              "type": "integer",
              "description": "Albums count"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_add_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "market_item_id": {
              "type": "integer",
              "description": "Item ID",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_createComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_deleteComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Returns 1 if request has been processed successfully (0 if the comment is not found)",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getAlbumById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_album"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getAlbums_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_album"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getById_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getCategories_new_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_category_tree"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getCategories_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_category"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getGroupOrders_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_order"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getOrderById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "order": {
              "$ref": "#\/definitions\/market_order"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getOrderItems_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_order_item"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getOrders_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_order"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_getOrders_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_order"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_get_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item_full"
              }
            },
            "variants": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item"
              }
            },
            "variants": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_restoreComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Returns 1 if request has been processed successfully (0 if the comment is not found)",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_search_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "view_type": {
              "$ref": "#\/definitions\/market_services_view_type",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item_full"
              },
              "required": true
            },
            "variants": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "market_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "view_type": {
              "$ref": "#\/definitions\/market_services_view_type",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item"
              },
              "required": true
            },
            "variants": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/market_market_item"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_audio_message": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for audio message"
        },
        "transcript_error": {
          "type": "integer",
          "minimum": 1,
          "maximum": 11
        },
        "duration": {
          "type": "integer",
          "description": "Audio message duration in seconds",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Audio message ID",
          "minimum": 0,
          "required": true
        },
        "link_mp3": {
          "type": "string",
          "format": "uri",
          "description": "MP3 file URL",
          "required": true
        },
        "link_ogg": {
          "type": "string",
          "format": "uri",
          "description": "OGG file URL",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Audio message owner ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "waveform": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Sound visualisation",
            "minimum": 0
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_chat": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Chat creator ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Chat ID",
          "required": true
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50 px in width"
        },
        "push_settings": {
          "$ref": "#\/definitions\/messages_chat_push_settings"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "type": {
          "type": "string",
          "description": "Chat type",
          "required": true
        },
        "users": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "User ID"
          },
          "required": true
        },
        "is_default_photo": {
          "type": "boolean",
          "description": "If provided photo is default"
        },
        "members_count": {
          "type": "integer",
          "description": "Count members in a chat",
          "required": true
        },
        "is_group_channel": {
          "type": "boolean",
          "description": "If chat is group channel"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_full": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Chat creator ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Chat ID",
          "required": true
        },
        "kicked": {
          "description": "Shows that user has been kicked from the chat",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "left": {
          "description": "Shows that user has been left the chat",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100 px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50 px in width"
        },
        "push_settings": {
          "$ref": "#\/definitions\/messages_chat_push_settings"
        },
        "title": {
          "type": "string",
          "description": "Chat title"
        },
        "type": {
          "type": "string",
          "description": "Chat type",
          "required": true
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_user_xtr_invited_by"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_chat_preview": {
      "type": "object",
      "properties": {
        "admin_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "minimum": 0
        },
        "joined": {
          "type": "boolean"
        },
        "local_id": {
          "type": "integer"
        },
        "members": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner"
          }
        },
        "members_count": {
          "type": "integer",
          "minimum": 0
        },
        "title": {
          "type": "string"
        },
        "is_member": {
          "type": "boolean"
        },
        "photo": {
          "$ref": "#\/definitions\/messages_chat_settings_photo"
        },
        "is_don": {
          "type": "boolean"
        },
        "is_group_channel": {
          "type": "boolean"
        },
        "button": {
          "$ref": "#\/definitions\/base_link_button"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_push_settings": {
      "type": "object",
      "properties": {
        "disabled_until": {
          "type": "integer",
          "description": "Time until that notifications are disabled"
        },
        "sound": {
          "description": "Information whether the sound is on",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_restrictions": {
      "type": "object",
      "properties": {
        "admins_promote_users": {
          "type": "boolean",
          "description": "Only admins can promote users to admins"
        },
        "only_admins_edit_info": {
          "type": "boolean",
          "description": "Only admins can change chat info"
        },
        "only_admins_edit_pin": {
          "type": "boolean",
          "description": "Only admins can edit pinned message"
        },
        "only_admins_invite": {
          "type": "boolean",
          "description": "Only admins can invite users to this chat"
        },
        "only_admins_kick": {
          "type": "boolean",
          "description": "Only admins can kick users from this chat"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings": {
      "type": "object",
      "properties": {
        "members_count": {
          "type": "integer"
        },
        "friends_count": {
          "type": "integer"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Chat title",
          "required": true
        },
        "pinned_message": {
          "$ref": "#\/definitions\/messages_pinned_message"
        },
        "state": {
          "$ref": "#\/definitions\/messages_chat_settings_state",
          "required": true
        },
        "photo": {
          "$ref": "#\/definitions\/messages_chat_settings_photo"
        },
        "admin_ids": {
          "type": "array",
          "description": "Ids of chat admins",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "Admin id"
          }
        },
        "active_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "Active member ID"
          },
          "required": true
        },
        "is_group_channel": {
          "type": "boolean"
        },
        "acl": {
          "$ref": "#\/definitions\/messages_chat_settings_acl",
          "required": true
        },
        "permissions": {
          "$ref": "#\/definitions\/messages_chat_settings_permissions"
        },
        "is_disappearing": {
          "type": "boolean"
        },
        "theme": {
          "type": "string"
        },
        "disappearing_chat_link": {
          "type": "string"
        },
        "is_service": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_acl": {
      "type": "object",
      "properties": {
        "can_change_info": {
          "type": "boolean",
          "description": "Can you change photo, description and name",
          "required": true
        },
        "can_change_invite_link": {
          "type": "boolean",
          "description": "Can you change invite link for this chat",
          "required": true
        },
        "can_change_pin": {
          "type": "boolean",
          "description": "Can you pin\/unpin message for this chat",
          "required": true
        },
        "can_invite": {
          "type": "boolean",
          "description": "Can you invite other peers in chat",
          "required": true
        },
        "can_promote_users": {
          "type": "boolean",
          "description": "Can you promote simple users to chat admins",
          "required": true
        },
        "can_see_invite_link": {
          "type": "boolean",
          "description": "Can you see invite link for this chat",
          "required": true
        },
        "can_moderate": {
          "type": "boolean",
          "description": "Can you moderate (delete) other users' messages",
          "required": true
        },
        "can_copy_chat": {
          "type": "boolean",
          "description": "Can you copy chat",
          "required": true
        },
        "can_call": {
          "type": "boolean",
          "description": "Can you init group call in the chat",
          "required": true
        },
        "can_use_mass_mentions": {
          "type": "boolean",
          "description": "Can you use mass mentions",
          "required": true
        },
        "can_change_service_type": {
          "type": "boolean",
          "description": "Can you change chat service type"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_permissions": {
      "type": "object",
      "properties": {
        "invite": {
          "type": "string",
          "description": "Who can invite users to chat",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "change_info": {
          "type": "string",
          "description": "Who can change chat info",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "change_pin": {
          "type": "string",
          "description": "Who can change pinned message",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "use_mass_mentions": {
          "type": "string",
          "description": "Who can use mass mentions",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "see_invite_link": {
          "type": "string",
          "description": "Who can see invite link",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "call": {
          "type": "string",
          "description": "Who can make calls",
          "enum": [
            "owner",
            "owner_and_admins",
            "all"
          ]
        },
        "change_admins": {
          "type": "string",
          "description": "Who can change admins",
          "enum": [
            "owner",
            "owner_and_admins"
          ]
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_photo": {
      "type": "object",
      "properties": {
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50px in width"
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100px in width"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200px in width"
        },
        "is_default_photo": {
          "type": "boolean",
          "description": "If provided photo is default"
        },
        "is_default_call_photo": {
          "type": "boolean",
          "description": "If provided photo is default call photo"
        }
      },
      "additionalProperties": false
    },
    "messages_chat_settings_state": {
      "type": "string",
      "enum": [
        "in",
        "kicked",
        "left"
      ]
    },
    "messages_conversation": {
      "type": "object",
      "properties": {
        "peer": {
          "$ref": "#\/definitions\/messages_conversation_peer",
          "required": true
        },
        "sort_id": {
          "$ref": "#\/definitions\/messages_conversation_sort_id"
        },
        "last_message_id": {
          "type": "integer",
          "minimum": 0,
          "description": "ID of the last message in conversation",
          "required": true
        },
        "last_conversation_message_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Conversation message ID of the last message in conversation"
        },
        "in_read": {
          "type": "integer",
          "minimum": 0,
          "description": "Last message user have read",
          "required": true
        },
        "out_read": {
          "type": "integer",
          "minimum": 0,
          "description": "Last outcoming message have been read by the opponent",
          "required": true
        },
        "unread_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Unread messages number"
        },
        "is_marked_unread": {
          "type": "boolean",
          "description": "Is this conversation uread"
        },
        "out_read_by": {
          "$ref": "#\/definitions\/messages_out_read_by"
        },
        "important": {
          "type": "boolean"
        },
        "unanswered": {
          "type": "boolean"
        },
        "special_service_type": {
          "type": "string",
          "enum": [
            "business_notify"
          ]
        },
        "message_request_data": {
          "$ref": "#\/definitions\/messages_message_request_data"
        },
        "mentions": {
          "type": "array",
          "description": "Ids of messages with mentions",
          "items": {
            "type": "integer",
            "description": "Message id of message with mention"
          }
        },
        "current_keyboard": {
          "$ref": "#\/definitions\/messages_keyboard"
        },
        "push_settings": {
          "$ref": "#\/definitions\/messages_push_settings"
        },
        "can_write": {
          "$ref": "#\/definitions\/messages_conversation_can_write"
        },
        "chat_settings": {
          "$ref": "#\/definitions\/messages_chat_settings"
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_can_write": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean",
          "required": true
        },
        "reason": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_member": {
      "type": "object",
      "properties": {
        "can_kick": {
          "type": "boolean",
          "description": "Is it possible for user to kick this member"
        },
        "invited_by": {
          "type": "integer",
          "format": "int64",
          "entity": "owner"
        },
        "is_admin": {
          "type": "boolean"
        },
        "is_owner": {
          "type": "boolean"
        },
        "is_message_request": {
          "type": "boolean"
        },
        "join_date": {
          "type": "integer",
          "minimum": 0
        },
        "request_date": {
          "type": "integer",
          "minimum": 0,
          "description": "Message request date"
        },
        "member_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_peer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "required": true
        },
        "local_id": {
          "type": "integer"
        },
        "type": {
          "$ref": "#\/definitions\/messages_conversation_peer_type",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_peer_type": {
      "type": "string",
      "enum": [
        "chat",
        "email",
        "user",
        "group"
      ],
      "description": "Peer type"
    },
    "messages_conversation_sort_id": {
      "type": "object",
      "properties": {
        "major_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Major id for sorting conversations",
          "required": true
        },
        "minor_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Minor id for sorting conversations",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_conversation_with_message": {
      "type": "object",
      "properties": {
        "conversation": {
          "$ref": "#\/definitions\/messages_conversation",
          "required": true
        },
        "last_message": {
          "$ref": "#\/definitions\/messages_message"
        }
      },
      "additionalProperties": false
    },
    "messages_foreign_message": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Conversation message ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message was created",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "fwd_messages": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "#\/definitions\/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID"
        },
        "reply_message": {
          "$ref": "#\/definitions\/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "was_listened": {
          "type": "boolean",
          "description": "Was the audio message inside already listened by you"
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        }
      },
      "additionalProperties": false
    },
    "messages_forward": {
      "type": "object",
      "properties": {
        "owner_id": {
          "type": "integer",
          "description": "Messages owner_id",
          "entity": "owner",
          "format": "int64"
        },
        "peer_id": {
          "type": "integer",
          "description": "Messages peer_id"
        },
        "conversation_message_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Message conversation_message_id"
          }
        },
        "message_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Message message_id"
          }
        },
        "is_reply": {
          "type": "boolean",
          "description": "If you need to reply to a message"
        }
      },
      "additionalProperties": false
    },
    "messages_getConversationById": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number",
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_conversation"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getConversationById_extended": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/messages_getConversationById"
        },
        {
          "type": "object",
          "properties": {
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "messages_getConversationMembers": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_conversation_member"
          },
          "required": true
        },
        "count": {
          "type": "integer",
          "description": "Chat members count",
          "minimum": 0,
          "required": true
        },
        "chat_restrictions": {
          "$ref": "#\/definitions\/messages_chat_restrictions"
        },
        "profiles": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/users_user_full"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/groups_group_full"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_graffiti": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for graffiti"
        },
        "id": {
          "type": "integer",
          "description": "Graffiti ID",
          "minimum": 0,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti URL",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_history_attachment": {
      "type": "object",
      "properties": {
        "attachment": {
          "$ref": "#\/definitions\/messages_history_message_attachment",
          "required": true
        },
        "message_id": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "forward_level": {
          "type": "integer",
          "description": "Forward level (optional)"
        },
        "was_listened": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "messages_history_message_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#\/definitions\/audio_audio"
        },
        "audio_message": {
          "$ref": "#\/definitions\/messages_audio_message"
        },
        "doc": {
          "$ref": "#\/definitions\/docs_doc"
        },
        "graffiti": {
          "$ref": "#\/definitions\/messages_graffiti"
        },
        "link": {
          "$ref": "#\/definitions\/base_link"
        },
        "market": {
          "$ref": "#\/definitions\/market_market_item"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "type": {
          "$ref": "#\/definitions\/messages_history_message_attachment_type",
          "required": true
        },
        "video": {
          "$ref": "#\/definitions\/video_video"
        },
        "wall": {
          "$ref": "#\/definitions\/wall_wallpost_full"
        }
      },
      "additionalProperties": false
    },
    "messages_history_message_attachment_type": {
      "type": "string",
      "description": "Attachments type",
      "enum": [
        "photo",
        "video",
        "audio",
        "doc",
        "link",
        "market",
        "wall",
        "share",
        "graffiti",
        "audio_message"
      ]
    },
    "messages_keyboard": {
      "type": "object",
      "properties": {
        "one_time": {
          "type": "boolean",
          "description": "Should this keyboard disappear on first use",
          "required": true
        },
        "buttons": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "$ref": "#\/definitions\/messages_keyboard_button"
            }
          },
          "required": true
        },
        "author_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Community or bot, which set this keyboard"
        },
        "inline": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#\/definitions\/messages_keyboard_button_property_action",
          "required": true
        },
        "color": {
          "type": "string",
          "enum": [
            "default",
            "positive",
            "negative",
            "primary"
          ],
          "description": "Button color"
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_callback": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "enum": [
            "callback"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_location": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "enum": [
            "location"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_open_app": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "app_id": {
          "type": "integer",
          "description": "Fragment value in app link like vk.com\/app{app_id}_-654321#hash",
          "required": true
        },
        "hash": {
          "type": "string",
          "description": "Fragment value in app link like vk.com\/app123456_-654321#{hash}"
        },
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Fragment value in app link like vk.com\/app123456_{owner_id}#hash",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "enum": [
            "open_app"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_open_link": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "link": {
          "type": "string",
          "description": "link for button",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "enum": [
            "open_link"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_open_photo": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "open_photo"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_text": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label for button",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "enum": [
            "text"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_action_vkpay": {
      "type": "object",
      "description": "Description of the action, that should be performed on button click",
      "properties": {
        "hash": {
          "type": "string",
          "description": "Fragment value in app link like vk.com\/app123456_-654321#{hash}",
          "required": true
        },
        "payload": {
          "type": "string",
          "description": "Additional data sent along with message for developer convenience"
        },
        "type": {
          "type": "string",
          "enum": [
            "vkpay"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_keyboard_button_property_action": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_location"
        },
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_open_app"
        },
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_open_link"
        },
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_open_photo"
        },
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_text"
        },
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_callback"
        },
        {
          "$ref": "#\/definitions\/messages_keyboard_button_action_vkpay"
        }
      ]
    },
    "messages_last_activity": {
      "type": "object",
      "properties": {
        "online": {
          "description": "Information whether user is online",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "time": {
          "type": "integer",
          "description": "Time when user was online in Unixtime",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_longpoll_messages": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_message"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_longpoll_params": {
      "type": "object",
      "properties": {
        "server": {
          "type": "string",
          "description": "Server URL",
          "required": true
        },
        "key": {
          "type": "string",
          "description": "Key",
          "required": true
        },
        "ts": {
          "type": "integer",
          "description": "Timestamp",
          "required": true
        },
        "pts": {
          "type": "integer",
          "description": "Persistent timestamp"
        }
      },
      "additionalProperties": false
    },
    "messages_message": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#\/definitions\/messages_message_action"
        },
        "admin_author_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Only for messages from community. Contains user ID of community admin, who sent this message."
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime",
          "required": true
        },
        "deleted": {
          "description": "Is it an deleted message",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "#\/definitions\/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        },
        "important": {
          "type": "boolean",
          "description": "Is it an important message"
        },
        "is_hidden": {
          "type": "boolean"
        },
        "is_cropped": {
          "type": "boolean",
          "description": "this message is cropped for bot"
        },
        "keyboard": {
          "$ref": "#\/definitions\/messages_keyboard"
        },
        "members_count": {
          "type": "integer",
          "description": "Members number"
        },
        "out": {
          "description": "Information whether the message is outcoming",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "payload": {
          "type": "string"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID",
          "required": true
        },
        "random_id": {
          "type": "integer",
          "description": "ID used for sending messages. It returned only for outgoing messages"
        },
        "ref": {
          "type": "string"
        },
        "ref_source": {
          "type": "string"
        },
        "reply_message": {
          "$ref": "#\/definitions\/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text",
          "required": true
        },
        "update_time": {
          "type": "integer",
          "description": "Date when the message has been updated in Unixtime"
        },
        "was_listened": {
          "type": "boolean",
          "description": "Was the audio message inside already listened by you"
        },
        "pinned_at": {
          "type": "integer",
          "description": "Date when the message has been pinned in Unixtime"
        },
        "is_silent": {
          "type": "boolean",
          "description": "Is silent message, push without sound"
        }
      },
      "additionalProperties": false
    },
    "messages_message_action": {
      "type": "object",
      "properties": {
        "conversation_message_id": {
          "type": "integer",
          "description": "Message ID"
        },
        "email": {
          "type": "string",
          "description": "Email address for chat_invite_user or chat_kick_user actions"
        },
        "member_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "User or email peer ID"
        },
        "message": {
          "type": "string",
          "description": "Message body of related message"
        },
        "photo": {
          "$ref": "#\/definitions\/messages_message_action_photo"
        },
        "text": {
          "type": "string",
          "description": "New chat title for chat_create and chat_title_update actions"
        },
        "type": {
          "$ref": "#\/definitions\/messages_message_action_status",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_message_action_photo": {
      "type": "object",
      "properties": {
        "photo_50": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 50px in width",
          "required": true
        },
        "photo_100": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 100px in width",
          "required": true
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200px in width",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_message_action_status": {
      "type": "string",
      "description": "Action status",
      "enum": [
        "chat_photo_update",
        "chat_photo_remove",
        "chat_create",
        "chat_title_update",
        "chat_invite_user",
        "chat_kick_user",
        "chat_pin_message",
        "chat_unpin_message",
        "chat_invite_user_by_link",
        "chat_invite_user_by_message_request",
        "chat_screenshot"
      ]
    },
    "messages_message_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#\/definitions\/audio_audio"
        },
        "audio_message": {
          "$ref": "#\/definitions\/messages_audio_message"
        },
        "call": {
          "$ref": "#\/definitions\/calls_call"
        },
        "doc": {
          "$ref": "#\/definitions\/docs_doc"
        },
        "gift": {
          "$ref": "#\/definitions\/gifts_layout"
        },
        "graffiti": {
          "$ref": "#\/definitions\/messages_graffiti"
        },
        "market": {
          "$ref": "#\/definitions\/market_market_item"
        },
        "market_market_album": {
          "$ref": "#\/definitions\/market_market_album"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "sticker": {
          "$ref": "#\/definitions\/base_sticker"
        },
        "story": {
          "$ref": "#\/definitions\/stories_story"
        },
        "type": {
          "$ref": "#\/definitions\/messages_message_attachment_type",
          "required": true
        },
        "video": {
          "$ref": "#\/definitions\/video_video_full"
        },
        "wall_reply": {
          "$ref": "#\/definitions\/wall_wall_comment"
        },
        "poll": {
          "$ref": "#\/definitions\/polls_poll"
        }
      },
      "additionalProperties": false
    },
    "messages_message_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "doc",
        "link",
        "market",
        "market_album",
        "gift",
        "sticker",
        "wall",
        "wall_reply",
        "article",
        "poll",
        "call",
        "graffiti",
        "audio_message"
      ]
    },
    "messages_message_request_data": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Status of message request"
        },
        "inviter_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message request sender id"
        },
        "request_date": {
          "type": "integer",
          "description": "Message request date"
        }
      },
      "additionalProperties": false
    },
    "messages_messages_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_message"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_out_read_by": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "member_ids": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64",
            "entity": "owner",
            "description": "Member IDs"
          }
        }
      },
      "additionalProperties": false
    },
    "messages_pinned_message": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_message_attachment"
          }
        },
        "conversation_message_id": {
          "type": "integer",
          "description": "Unique auto-incremented number for all messages with this peer"
        },
        "id": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the message has been sent in Unixtime",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "format": "int64",
          "entity": "owner",
          "description": "Message author's ID",
          "required": true
        },
        "fwd_messages": {
          "description": "Forwarded messages",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_foreign_message"
          }
        },
        "geo": {
          "$ref": "#\/definitions\/base_geo"
        },
        "peer_id": {
          "type": "integer",
          "description": "Peer ID",
          "required": true
        },
        "reply_message": {
          "$ref": "#\/definitions\/messages_foreign_message"
        },
        "text": {
          "type": "string",
          "description": "Message text",
          "required": true
        },
        "keyboard": {
          "$ref": "#\/definitions\/messages_keyboard"
        }
      },
      "additionalProperties": false
    },
    "messages_push_settings": {
      "type": "object",
      "properties": {
        "disabled_forever": {
          "type": "boolean",
          "description": "Information whether push notifications are disabled forever",
          "required": true
        },
        "disabled_until": {
          "type": "integer",
          "description": "Time until what notifications are disabled"
        },
        "no_sound": {
          "type": "boolean",
          "description": "Information whether the sound is on",
          "required": true
        },
        "disabled_mentions": {
          "type": "boolean",
          "description": "Information whether the mentions are disabled"
        },
        "disabled_mass_mentions": {
          "type": "boolean",
          "description": "Information whether the mass mentions (like '@all', '@online') are disabled"
        }
      },
      "additionalProperties": false
    },
    "messages_send_user_ids_response_item": {
      "type": "object",
      "properties": {
        "peer_id": {
          "type": "integer",
          "required": true
        },
        "message_id": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "conversation_message_id": {
          "type": "integer",
          "minimum": 0
        },
        "error": {
          "$ref": "#\/definitions\/base_message_error"
        }
      },
      "additionalProperties": false
    },
    "messages_template_action_type_names": {
      "type": "string",
      "description": "Template action type names",
      "enum": [
        "text",
        "start",
        "location",
        "vkpay",
        "open_app",
        "open_photo",
        "open_link",
        "callback",
        "intent_subscribe",
        "intent_unsubscribe"
      ]
    },
    "messages_user_xtr_invited_by": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user_xtr_type"
        },
        {
          "properties": {
            "invited_by": {
              "type": "integer",
              "format": "int64",
              "entity": "owner",
              "description": "ID of the inviter"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "messages_createChat_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Chat ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_deleteChatPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "message_id": {
              "type": "integer",
              "description": "Service message ID"
            },
            "chat": {
              "$ref": "#\/definitions\/messages_chat"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_deleteConversation_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "last_deleted_id": {
              "type": "integer",
              "minimum": 0,
              "description": "Id of the last message, that was deleted",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_delete_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "patternProperties": {
            "^[0-9]+$": {
              "$ref": "#\/definitions\/base_bool_int"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_edit_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getByConversationMessageId_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getByConversationMessageId_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getById_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getChatPreview_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "preview": {
              "$ref": "#\/definitions\/messages_chat_preview"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getChat_chat_ids_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_chat_full"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getChat_chat_ids_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_chat"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getChat_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_chat_full",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getChat_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_chat",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getConversationMembers_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_getConversationMembers",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getConversationsById_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_getConversationById_extended",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getConversationsById_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_getConversationById",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getConversations_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "unread_count": {
              "type": "integer",
              "description": "Unread dialogs number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation_with_message"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getHistoryAttachments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_history_attachment"
              }
            },
            "next_from": {
              "type": "string",
              "description": "Value for pagination"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getHistory_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getHistory_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getImportantMessages_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "messages": {
              "$ref": "#\/definitions\/messages_messages_array",
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getImportantMessages_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "messages": {
              "$ref": "#\/definitions\/messages_messages_array",
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getIntentUsers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 0,
                "entity": "owner",
                "format": "int64"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getInviteLink_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "link": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getLastActivity_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_last_activity",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getLongPollHistory_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "history": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "description": "Longpoll event value"
                }
              }
            },
            "messages": {
              "$ref": "#\/definitions\/messages_longpoll_messages"
            },
            "credentials": {
              "$ref": "#\/definitions\/messages_longpoll_params"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            },
            "chats": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_chat"
              }
            },
            "new_pts": {
              "type": "integer",
              "description": "Persistence timestamp"
            },
            "from_pts": {
              "type": "integer"
            },
            "more": {
              "type": "boolean",
              "description": "Has more"
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_getLongPollServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_longpoll_params",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_isMessagesFromGroupAllowed_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "is_allowed": {
              "$ref": "#\/definitions\/base_bool_int"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_joinChatByInviteLink_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "chat_id": {
              "type": "integer"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_markAsImportant_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Messages IDs"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_pin_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/messages_pinned_message",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_searchConversations_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total results number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_searchConversations_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total results number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_search_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_conversation"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/messages_message"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_send_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Message ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_send_user_ids_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/messages_send_user_ids_response_item"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "messages_setChatPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "message_id": {
              "type": "integer",
              "description": "Service message ID"
            },
            "chat": {
              "$ref": "#\/definitions\/messages_chat"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_comments_filters": {
      "type": "string",
      "enum": [
        "post",
        "photo",
        "video",
        "topic",
        "note"
      ]
    },
    "newsfeed_ignore_item_type": {
      "type": "string",
      "enum": [
        "wall",
        "tag",
        "profilephoto",
        "video",
        "photo",
        "audio"
      ],
      "enumNames": [
        "post on the wall",
        "tag on a photo",
        "profile photo",
        "video",
        "photo",
        "audio"
      ]
    },
    "newsfeed_item_audio": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "audio": {
              "$ref": "#\/definitions\/newsfeed_item_audio_audio"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_audio_audio": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Audios number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/audio_audio"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_base": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#\/definitions\/newsfeed_newsfeed_item_type",
          "required": true
        },
        "source_id": {
          "type": "integer",
          "description": "Item source ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when item has been added in Unixtime",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "feed_id": {
              "type": "string",
              "description": "id of feed in digest"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/newsfeed_item_digest_item"
              }
            },
            "main_post_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "template": {
              "type": "string",
              "enum": [
                "list",
                "grid",
                "single"
              ],
              "description": "type of digest"
            },
            "header": {
              "$ref": "#\/definitions\/newsfeed_item_digest_header"
            },
            "footer": {
              "$ref": "#\/definitions\/newsfeed_item_digest_footer"
            },
            "track_code": {
              "type": "string"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_digest_button": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "style": {
          "type": "string",
          "enum": [
            "primary"
          ]
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_footer": {
      "type": "object",
      "properties": {
        "style": {
          "type": "string",
          "enum": [
            "text",
            "button"
          ],
          "required": true
        },
        "text": {
          "type": "string",
          "description": "text for invite to enable smart feed",
          "required": true
        },
        "button": {
          "$ref": "#\/definitions\/newsfeed_item_digest_button"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_full_item": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string"
        },
        "source_name": {
          "type": "string"
        },
        "attachment_index": {
          "type": "integer"
        },
        "attachment": {
          "$ref": "#\/definitions\/wall_wallpost_attachment"
        },
        "style": {
          "type": "string",
          "enum": [
            "default",
            "inversed",
            "spotlight"
          ]
        },
        "post": {
          "$ref": "#\/definitions\/wall_wallpost",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_header": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the header",
          "required": true
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the header, when title have two strings"
        },
        "style": {
          "type": "string",
          "enum": [
            "singleline",
            "multiline"
          ],
          "required": true
        },
        "button": {
          "$ref": "#\/definitions\/newsfeed_item_digest_button"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_digest_item": {
      "$ref": "#\/definitions\/wall_wallpost"
    },
    "newsfeed_item_friend": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "friends": {
              "$ref": "#\/definitions\/newsfeed_item_friend_friends"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_friend_friends": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of friends has been added"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_user_id"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_holiday_recommendations_block_header": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the header"
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the header"
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          }
        },
        "action": {
          "$ref": "#\/definitions\/base_link_button_action"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/wall_carousel_base"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "photos": {
              "$ref": "#\/definitions\/newsfeed_item_photo_photos"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_photo_photos": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Photos number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/newsfeed_newsfeed_photo"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_photo_tag": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/wall_carousel_base"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "photo_tags": {
              "$ref": "#\/definitions\/newsfeed_item_photo_tag_photo_tags"
            },
            "post_id": {
              "type": "integer",
              "description": "Post ID"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_photo_tag_photo_tags": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/newsfeed_newsfeed_photo"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_promo_button": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "text": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "action": {
              "$ref": "#\/definitions\/newsfeed_item_promo_button_action"
            },
            "images": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/newsfeed_item_promo_button_image"
              }
            },
            "track_code": {
              "type": "string"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_promo_button_action": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_promo_button_image": {
      "type": "object",
      "properties": {
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        },
        "url": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_topic": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "comments": {
              "$ref": "#\/definitions\/base_comments_info"
            },
            "likes": {
              "$ref": "#\/definitions\/base_likes_info"
            },
            "post_id": {
              "type": "integer",
              "description": "Topic post ID",
              "required": true
            },
            "text": {
              "type": "string",
              "description": "Post text",
              "required": true
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_video": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/wall_carousel_base"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "properties": {
            "video": {
              "$ref": "#\/definitions\/newsfeed_item_video_video"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_video_video": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Tags number"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/video_video"
          }
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_wallpost": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/wall_carousel_base"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_base"
        },
        {
          "$ref": "#\/definitions\/wall_wallpost_full"
        },
        {
          "properties": {
            "feedback": {
              "$ref": "#\/definitions\/newsfeed_item_wallpost_feedback"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_item_wallpost_feedback": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#\/definitions\/newsfeed_item_wallpost_feedback_type",
          "required": true
        },
        "question": {
          "type": "string",
          "required": true
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/newsfeed_item_wallpost_feedback_answer"
          }
        },
        "stars_count": {
          "type": "integer",
          "minimum": 2,
          "maximum": 5
        },
        "gratitude": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_wallpost_feedback_answer": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "required": true
        },
        "id": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_item_wallpost_feedback_type": {
      "type": "string",
      "enum": [
        "buttons",
        "stars"
      ]
    },
    "newsfeed_list": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "List ID",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "List title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_list_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/newsfeed_list"
        },
        {
          "properties": {
            "no_reposts": {
              "description": "Information whether reposts hiding is enabled",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "source_ids": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64",
                "description": "Users and communities IDs",
                "entity": "owner"
              }
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_newsfeed_item": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#\/definitions\/newsfeed_item_wallpost"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_photo"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_photo_tag"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_friend"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_audio"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_video"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_topic"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_digest"
        },
        {
          "$ref": "#\/definitions\/newsfeed_item_promo_button"
        }
      ]
    },
    "newsfeed_newsfeed_item_type": {
      "type": "string",
      "description": "Item type",
      "enum": [
        "post",
        "photo",
        "photo_tag",
        "wall_photo",
        "friend",
        "audio",
        "video",
        "topic",
        "digest",
        "stories",
        "note",
        "audio_playlist",
        "clip"
      ]
    },
    "newsfeed_newsfeed_photo": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/photos_photo"
        },
        {
          "properties": {
            "likes": {
              "$ref": "#\/definitions\/base_likes"
            },
            "comments": {
              "$ref": "#\/definitions\/base_object_count"
            },
            "can_repost": {
              "description": "Information whether current user can repost the photo",
              "$ref": "#\/definitions\/base_bool_int"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "newsfeed_generic_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/newsfeed_newsfeed_item"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            },
            "new_returned_news_items_count": {
              "type": "integer",
              "minimum": 0
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getBanned_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getBanned_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "groups": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "Community ID"
              }
            },
            "members": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "User ID"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/newsfeed_newsfeed_item"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            },
            "next_from": {
              "type": "string",
              "description": "Next from value"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getLists_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/newsfeed_list_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getLists_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/newsfeed_list"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getMentions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_to_id"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_getSuggestedSources_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_subscriptions_item"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_ignore_item_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "status": {
              "type": "boolean",
              "default": 1,
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_saveList_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "List ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_search_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              }
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            },
            "suggested_queries": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "next_from": {
              "type": "string"
            },
            "count": {
              "type": "integer",
              "minimum": 0,
              "description": "Filtered number"
            },
            "total_count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "newsfeed_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              }
            },
            "suggested_queries": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "next_from": {
              "type": "string"
            },
            "count": {
              "type": "integer",
              "minimum": 0,
              "description": "Filtered number"
            },
            "total_count": {
              "type": "integer",
              "description": "Total number",
              "minimum": 0
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notes_note": {
      "type": "object",
      "properties": {
        "read_comments": {
          "type": "integer",
          "minimum": 0
        },
        "can_comment": {
          "description": "Information whether current user can comment the note",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Note text"
        },
        "text_wiki": {
          "type": "string",
          "description": "Note text in wiki format"
        },
        "title": {
          "type": "string",
          "description": "Note title",
          "required": true
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with note preview",
          "required": true
        },
        "privacy_view": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privacy_comment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "notes_note_comment": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the comment has beed added in Unixtime",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        },
        "message": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "nid": {
          "type": "integer",
          "description": "Note ID",
          "required": true
        },
        "oid": {
          "type": "integer",
          "description": "Note ID",
          "required": true
        },
        "reply_to": {
          "type": "integer",
          "description": "ID of replied comment "
        },
        "uid": {
          "type": "integer",
          "description": "Comment author's ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notes_add_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Note ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notes_createComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notes_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/notes_note",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notes_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/notes_note_comment"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notes_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/notes_note"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notifications_feedback": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_wallpost_attachment"
          }
        },
        "from_id": {
          "type": "integer",
          "description": "Reply author's ID"
        },
        "geo": {
          "$ref": "#\/definitions\/base_geo"
        },
        "id": {
          "type": "integer",
          "description": "Item ID"
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes_info"
        },
        "text": {
          "type": "string",
          "description": "Reply text"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID"
        }
      },
      "additionalProperties": false
    },
    "notifications_notification": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the event has been occurred"
        },
        "feedback": {
          "$ref": "#\/definitions\/notifications_feedback"
        },
        "parent": {
          "$ref": "#\/definitions\/notifications_notification"
        },
        "reply": {
          "$ref": "#\/definitions\/notifications_reply"
        },
        "type": {
          "type": "string",
          "description": "Notification type"
        }
      },
      "additionalProperties": false
    },
    "notifications_notification_item": {
      "$ref": "#\/definitions\/notifications_notification"
    },
    "notifications_notification_parent": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/wall_wallpost_to_id"
        },
        {
          "$ref": "#\/definitions\/photos_photo"
        },
        {
          "$ref": "#\/definitions\/board_topic"
        },
        {
          "$ref": "#\/definitions\/video_video"
        },
        {
          "$ref": "#\/definitions\/notifications_notifications_comment"
        }
      ],
      "additionalProperties": false
    },
    "notifications_notifications_comment": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1
        },
        "owner_id": {
          "type": "integer",
          "description": "Author ID",
          "entity": "owner",
          "format": "int64"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "post": {
          "$ref": "#\/definitions\/wall_wallpost"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "topic": {
          "$ref": "#\/definitions\/board_topic"
        },
        "video": {
          "$ref": "#\/definitions\/video_video"
        }
      },
      "additionalProperties": false
    },
    "notifications_reply": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when the reply has been created in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Reply ID"
        },
        "text": {
          "type": "integer",
          "description": "Reply text"
        }
      },
      "additionalProperties": false
    },
    "notifications_send_message_error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4
          ],
          "enumNames": [
            "notifications disabled",
            "flood control per hour",
            "flood control per day",
            "app is not installed"
          ],
          "description": "Error code"
        },
        "description": {
          "type": "string",
          "description": "Error description"
        }
      },
      "additionalProperties": false
    },
    "notifications_send_message_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        },
        "status": {
          "type": "boolean",
          "description": "Notification status"
        },
        "error": {
          "$ref": "#\/definitions\/notifications_send_message_error"
        }
      },
      "additionalProperties": false
    },
    "notifications_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/notifications_notification_item"
              }
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              }
            },
            "last_viewed": {
              "type": "integer",
              "description": "Time when user has been checked notifications last time"
            },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo"
              }
            },
            "videos": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video"
              }
            },
            "apps": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/apps_app"
              }
            },
            "next_from": {
              "type": "string"
            },
            "ttl": {
              "type": "integer"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notifications_markAsViewed_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "notifications_sendMessage_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/notifications_send_message_item"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "oauth_error": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "description": "Error type",
          "required": true
        },
        "error_description": {
          "type": "string",
          "description": "Error description",
          "required": true
        },
        "redirect_uri": {
          "type": "string",
          "description": "URI for validation"
        }
      },
      "additionalProperties": false
    },
    "orders_amount": {
      "type": "object",
      "properties": {
        "amounts": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/orders_amount_item"
          }
        },
        "currency": {
          "type": "string",
          "description": "Currency name"
        }
      },
      "additionalProperties": false
    },
    "orders_amount_item": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "description": "Votes amount in user's currency"
        },
        "description": {
          "type": "string",
          "description": "Amount description"
        },
        "votes": {
          "type": "string",
          "description": "Votes number"
        }
      },
      "additionalProperties": false
    },
    "orders_order": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "description": "Amount",
          "required": true
        },
        "app_order_id": {
          "type": "string",
          "description": "App order ID",
          "required": true
        },
        "cancel_transaction_id": {
          "type": "string",
          "description": "Cancel transaction ID"
        },
        "date": {
          "type": "string",
          "description": "Date of creation in Unixtime",
          "required": true
        },
        "id": {
          "type": "string",
          "description": "Order ID",
          "required": true
        },
        "item": {
          "type": "string",
          "description": "Order item",
          "required": true
        },
        "receiver_id": {
          "type": "string",
          "description": "Receiver ID",
          "required": true
        },
        "status": {
          "type": "string",
          "description": "Order status",
          "enum": [
            "created",
            "charged",
            "refunded",
            "chargeable",
            "cancelled",
            "declined"
          ],
          "required": true
        },
        "transaction_id": {
          "type": "string",
          "description": "Transaction ID"
        },
        "user_id": {
          "type": "string",
          "description": "User ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_subscription": {
      "type": "object",
      "properties": {
        "cancel_reason": {
          "type": "string",
          "description": "Cancel reason"
        },
        "create_time": {
          "type": "integer",
          "description": "Date of creation in Unixtime",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Subscription ID",
          "required": true
        },
        "item_id": {
          "type": "string",
          "description": "Subscription order item",
          "required": true
        },
        "next_bill_time": {
          "type": "integer",
          "description": "Date of next bill in Unixtime"
        },
        "expire_time": {
          "type": "integer",
          "description": "Subscription expiration time in Unixtime"
        },
        "pending_cancel": {
          "type": "boolean",
          "description": "Pending cancel state"
        },
        "period": {
          "type": "integer",
          "description": "Subscription period",
          "required": true
        },
        "period_start_time": {
          "type": "integer",
          "description": "Date of last period start in Unixtime",
          "required": true
        },
        "price": {
          "type": "integer",
          "description": "Subscription price",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Subscription name"
        },
        "app_id": {
          "type": "integer",
          "description": "Subscription's application id"
        },
        "application_name": {
          "type": "string",
          "description": "Subscription's application name"
        },
        "photo_url": {
          "type": "string",
          "description": "Item photo image url"
        },
        "status": {
          "type": "string",
          "description": "Subscription status",
          "required": true
        },
        "test_mode": {
          "type": "boolean",
          "description": "Is test subscription"
        },
        "trial_expire_time": {
          "type": "integer",
          "description": "Date of trial expire in Unixtime"
        },
        "update_time": {
          "type": "integer",
          "description": "Date of last change in Unixtime",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_cancelSubscription_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_changeState_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "New state",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_getAmount_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/orders_amount"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/orders_order"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_getUserSubscriptionById_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/orders_subscription",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_getUserSubscriptions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/orders_subscription"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/orders_order"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "orders_updateSubscription_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "owner_state": {
      "type": "object",
      "properties": {
        "state": {
          "type": "integer",
          "enum": [
            1,
            2,
            3,
            4,
            5
          ],
          "enumNames": [
            "banned",
            "adult",
            "hidden",
            "deleted",
            "blacklisted"
          ]
        },
        "description": {
          "type": "string",
          "description": "wiki text to describe user state"
        }
      },
      "additionalProperties": false
    },
    "pages_privacy_settings": {
      "type": "integer",
      "enum": [
        0,
        1,
        2
      ],
      "enumNames": [
        "community managers only",
        "community members only",
        "everyone"
      ]
    },
    "pages_wikipage": {
      "type": "object",
      "properties": {
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "creator_name": {
          "type": "string",
          "description": "Page creator name"
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Page title",
          "required": true
        },
        "views": {
          "type": "integer",
          "description": "Views number",
          "required": true
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "#\/definitions\/pages_privacy_settings",
          "required": true
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "#\/definitions\/pages_privacy_settings",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_wikipage_full": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "description": "Date when the page has been created in Unixtime",
          "required": true
        },
        "creator_id": {
          "type": "integer",
          "description": "Page creator ID"
        },
        "current_user_can_edit": {
          "description": "Information whether current user can edit the page",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "current_user_can_edit_access": {
          "description": "Information whether current user can edit the page access settings",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "edited": {
          "type": "integer",
          "description": "Date when the page has been edited in Unixtime",
          "required": true
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "minimum": 1,
          "entity": "groups",
          "format": "int64",
          "required": true
        },
        "html": {
          "type": "string",
          "description": "Page content, HTML"
        },
        "id": {
          "type": "integer",
          "description": "Page ID",
          "minimum": 1,
          "required": true
        },
        "source": {
          "type": "string",
          "description": "Page content, wiki"
        },
        "title": {
          "type": "string",
          "description": "Page title",
          "required": true
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page preview",
          "required": true
        },
        "views": {
          "type": "integer",
          "description": "Views number",
          "required": true
        },
        "who_can_edit": {
          "description": "Edit settings of the page",
          "$ref": "#\/definitions\/pages_privacy_settings",
          "required": true
        },
        "who_can_view": {
          "description": "View settings of the page",
          "$ref": "#\/definitions\/pages_privacy_settings",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL"
        },
        "parent": {
          "type": "string",
          "description": "Parent"
        },
        "parent2": {
          "type": "string",
          "description": "Parent2"
        },
        "owner_id": {
          "type": "integer",
          "description": "Owner ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "pages_wikipage_history": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Version ID",
          "minimum": 0,
          "required": true
        },
        "length": {
          "type": "integer",
          "minimum": 0,
          "description": "Page size in bytes",
          "required": true
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when the page has been edited in Unixtime",
          "required": true
        },
        "editor_id": {
          "type": "integer",
          "description": "Last editor ID",
          "required": true
        },
        "editor_name": {
          "type": "string",
          "description": "Last editor name",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_getHistory_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/pages_wikipage_history"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_getTitles_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/pages_wikipage"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_getVersion_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/pages_wikipage_full",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/pages_wikipage_full",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_parseWiki_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "HTML source",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_saveAccess_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Page ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "pages_save_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Page ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_image": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Height of the photo in px."
        },
        "type": {
          "$ref": "#\/definitions\/photos_image_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Photo URL."
        },
        "width": {
          "type": "integer",
          "description": "Width of the photo in px."
        }
      },
      "additionalProperties": false
    },
    "photos_image_type": {
      "type": "string",
      "description": "Photo's type.",
      "enum": [
        "s",
        "m",
        "x",
        "l",
        "o",
        "p",
        "q",
        "r",
        "y",
        "z",
        "w"
      ]
    },
    "photos_photo": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0,
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_image"
          }
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_256": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "can_comment": {
          "description": "Information whether current user can comment the photo",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "place": {
          "type": "string"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_sizes"
          }
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        },
        "has_tags": {
          "type": "boolean",
          "description": "Whether photo has attached tag links",
          "required": true
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes"
        },
        "comments": {
          "$ref": "#\/definitions\/base_object_count"
        },
        "reposts": {
          "$ref": "#\/definitions\/base_reposts_info"
        },
        "tags": {
          "$ref": "#\/definitions\/base_object_count"
        }
      },
      "additionalProperties": false
    },
    "photos_photo_album": {
      "type": "object",
      "properties": {
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "id": {
          "type": "integer",
          "description": "Photo album ID",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0,
          "required": true
        },
        "thumb": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "title": {
          "type": "string",
          "description": "Photo album title",
          "required": true
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_album_full": {
      "type": "object",
      "properties": {
        "can_upload": {
          "description": "Information whether current user can upload photo to the album",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "comments_disabled": {
          "description": "Information whether album comments are disabled",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "created": {
          "type": "integer",
          "description": "Date when the album has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "description": {
          "type": "string",
          "description": "Photo album description"
        },
        "can_delete": {
          "type": "boolean",
          "description": "album can delete"
        },
        "id": {
          "type": "integer",
          "description": "Photo album ID",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "size": {
          "type": "integer",
          "description": "Photos number",
          "minimum": 0,
          "required": true
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_sizes"
          }
        },
        "thumb_id": {
          "type": "integer",
          "description": "Thumb photo ID",
          "minimum": 0
        },
        "thumb_is_last": {
          "description": "Information whether the album thumb is last photo",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "thumb_src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the thumb image"
        },
        "title": {
          "type": "string",
          "description": "Photo album title",
          "required": true
        },
        "updated": {
          "type": "integer",
          "description": "Date when the album has been updated last time in Unixtime",
          "minimum": 0,
          "required": true
        },
        "upload_by_admins_only": {
          "description": "Information whether only community administrators can upload photos",
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "photos_photo_falseable": {
      "type": "object",
      "oneOf": [
        {
          "type": "boolean"
        },
        {
          "type": "string"
        }
      ]
    },
    "photos_photo_full_xtr_real_offset": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "can_comment": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "comments": {
          "$ref": "#\/definitions\/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0,
          "required": true
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        },
        "reposts": {
          "$ref": "#\/definitions\/base_object_count"
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_sizes"
          }
        },
        "tags": {
          "$ref": "#\/definitions\/base_object_count"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "photos_photo_sizes": {
      "type": "object",
      "properties": {
        "height": {
          "type": "integer",
          "description": "Height in px",
          "minimum": 0,
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image",
          "required": true
        },
        "src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the image"
        },
        "type": {
          "$ref": "#\/definitions\/photos_photo_sizes_type",
          "required": true
        },
        "width": {
          "type": "integer",
          "description": "Width in px",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_sizes_type": {
      "type": "string",
      "description": "Size type",
      "enum": [
        "s",
        "m",
        "x",
        "o",
        "p",
        "q",
        "r",
        "k",
        "l",
        "y",
        "z",
        "c",
        "w",
        "a",
        "b",
        "e",
        "i",
        "d",
        "j",
        "temp",
        "h",
        "g",
        "n",
        "f",
        "max"
      ]
    },
    "photos_photo_tag": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Tag ID",
          "required": true
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator",
          "required": true
        },
        "tagged_name": {
          "type": "string",
          "description": "Tag description",
          "required": true
        },
        "description": {
          "description": "Tagged description.",
          "type": "string"
        },
        "user_id": {
          "type": "integer",
          "description": "Tagged user ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "viewed": {
          "description": "Information whether the tag is reviewed",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "x": {
          "type": "number",
          "description": "Coordinate X of the left upper corner",
          "required": true
        },
        "x2": {
          "type": "number",
          "description": "Coordinate X of the right lower corner",
          "required": true
        },
        "y": {
          "type": "number",
          "description": "Coordinate Y of the left upper corner",
          "required": true
        },
        "y2": {
          "type": "number",
          "description": "Coordinate Y of the right lower corner",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_upload": {
      "type": "object",
      "properties": {
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "URL to upload photo",
          "required": true
        },
        "fallback_upload_url": {
          "type": "string",
          "format": "uri",
          "description": "Fallback URL if upload_url returned error"
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "group_id": {
          "type": "integer",
          "description": "Group ID",
          "entity": "groups",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "photos_photo_xtr_real_offset": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "hidden": {
          "description": "Returns if the photo is hidden above the wall",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0,
          "required": true
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the photo"
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_sizes"
          }
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "photos_photo_xtr_tag_info": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the photo"
        },
        "album_id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when uploaded",
          "minimum": 0,
          "required": true
        },
        "height": {
          "type": "integer",
          "description": "Original photo height",
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 0,
          "required": true
        },
        "lat": {
          "type": "number",
          "description": "Latitude"
        },
        "long": {
          "type": "number",
          "description": "Longitude"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "photo_1280": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 1280 px width"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 130 px width"
        },
        "photo_2560": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 2560 px width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 604 px width"
        },
        "photo_75": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 75 px width"
        },
        "photo_807": {
          "type": "string",
          "format": "uri",
          "description": "URL of image with 807 px width"
        },
        "placer_id": {
          "type": "integer",
          "description": "ID of the tag creator"
        },
        "post_id": {
          "type": "integer",
          "description": "Post ID",
          "minimum": 1
        },
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_sizes"
          }
        },
        "tag_created": {
          "type": "integer",
          "description": "Date when tag has been added in Unixtime",
          "minimum": 0
        },
        "tag_id": {
          "type": "integer",
          "description": "Tag ID"
        },
        "text": {
          "type": "string",
          "description": "Photo caption"
        },
        "user_id": {
          "type": "integer",
          "description": "ID of the user who have uploaded the photo",
          "minimum": 1,
          "entity": "owner",
          "format": "int64"
        },
        "width": {
          "type": "integer",
          "description": "Original photo width",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "photos_tags_suggestion_item": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "caption": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_tags_suggestion_item_button"
          }
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_tag"
          }
        },
        "track_code": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "photos_tags_suggestion_item_button": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "action": {
          "type": "string",
          "enum": [
            "confirm",
            "decline",
            "show_tags"
          ]
        },
        "style": {
          "type": "string",
          "enum": [
            "primary",
            "secondary"
          ]
        }
      },
      "additionalProperties": false
    },
    "photos_copy_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Photo ID",
          "minimum": 1,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_createAlbum_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/photos_photo_album_full",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_createComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Created comment ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_deleteComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Returns 1 if request has been processed successfully, 0 if the comment is not found",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getAlbumsCount_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Albums number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getAlbums_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo_album_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getAllComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getAll_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo_full_xtr_real_offset"
              }
            },
            "more": {
              "description": "Information whether next page is presented",
              "$ref": "#\/definitions\/base_bool_int"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getAll_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo_xtr_real_offset"
              }
            },
            "more": {
              "description": "Information whether next page is presented",
              "$ref": "#\/definitions\/base_bool_int"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getComments_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "real_offset": {
              "type": "integer",
              "description": "Real offset of the comments",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "real_offset": {
              "type": "integer",
              "description": "Real offset of the comments",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getMarketUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/base_upload_server",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getMessagesUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/photos_photo_upload",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getNewTags_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo_xtr_tag_info"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getTags_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_tag"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/photos_photo_upload",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getUserPhotos_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_getWallUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/photos_photo_upload",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_market_album_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "gid": {
              "type": "integer",
              "description": "Community ID"
            },
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            },
            "server": {
              "type": "integer",
              "description": "Upload server number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_market_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "crop_data": {
              "type": "string",
              "description": "Crop data"
            },
            "crop_hash": {
              "type": "string",
              "description": "Crop hash"
            },
            "group_id": {
              "type": "integer",
              "description": "Community ID",
              "entity": "groups",
              "format": "int64"
            },
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            },
            "server": {
              "type": "integer",
              "description": "Upload server number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_message_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            },
            "server": {
              "type": "integer",
              "description": "Upload server number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_owner_cover_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_owner_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            },
            "server": {
              "type": "integer",
              "description": "Upload server number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_photo_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "aid": {
              "type": "integer",
              "description": "Album ID"
            },
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            },
            "photos_list": {
              "type": "string",
              "description": "Uploaded photos data"
            },
            "server": {
              "type": "integer",
              "description": "Upload server number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_putTag_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Created tag ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_restoreComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Returns 1 if request has been processed successfully, 0 if the comment is not found",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_saveMarketAlbumPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_saveMarketPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_saveMessagesPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_saveOwnerCoverPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "images": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/base_image"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_saveOwnerPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "photo_hash": {
              "type": "string",
              "description": "Photo hash",
              "required": true
            },
            "photo_src": {
              "type": "string",
              "description": "Uploaded image url",
              "required": true
            },
            "photo_src_big": {
              "type": "string",
              "description": "Uploaded image url"
            },
            "photo_src_small": {
              "type": "string",
              "description": "Uploaded image url"
            },
            "saved": {
              "type": "integer",
              "description": "Returns 1 if profile photo is saved"
            },
            "post_id": {
              "type": "integer",
              "description": "Created post ID"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_saveWallPhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_save_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/photos_photo"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "photos_wall_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "hash": {
              "type": "string",
              "description": "Uploading hash"
            },
            "photo": {
              "type": "string",
              "description": "Uploaded photo data"
            },
            "server": {
              "type": "integer",
              "description": "Upload server number"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "podcast_cover": {
      "type": "object",
      "properties": {
        "sizes": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/photos_photo_sizes"
          }
        }
      },
      "additionalProperties": false
    },
    "podcast_external_data": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Url of the podcast page"
        },
        "owner_url": {
          "type": "string",
          "description": "Url of the podcasts owner community"
        },
        "title": {
          "type": "string",
          "description": "Podcast title"
        },
        "owner_name": {
          "type": "string",
          "description": "Name of the podcasts owner community"
        },
        "cover": {
          "$ref": "#\/definitions\/podcast_cover",
          "description": "Podcast cover"
        }
      },
      "additionalProperties": false
    },
    "podcasts_searchPodcast_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "podcasts": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/podcast_external_data"
              },
              "required": true
            },
            "results_total": {
              "type": "integer",
              "description": "Total amount of found results",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_answer": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Answer ID",
          "minimum": 0,
          "required": true
        },
        "rate": {
          "type": "number",
          "description": "Answer rate in percents",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Answer text",
          "required": true
        },
        "votes": {
          "type": "integer",
          "description": "Votes number",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_background": {
      "type": "object",
      "properties": {
        "angle": {
          "description": "Gradient angle with 0 on positive X axis",
          "type": "integer"
        },
        "color": {
          "type": "string",
          "description": "Hex color code without #"
        },
        "height": {
          "description": "Original height of pattern tile",
          "type": "integer",
          "minimum": 0
        },
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "images": {
          "description": "Pattern tiles",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          }
        },
        "points": {
          "description": "Gradient points",
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_gradient_point"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "gradient",
            "tile"
          ]
        },
        "width": {
          "description": "Original with of pattern tile",
          "type": "integer",
          "minimum": 0
        }
      },
      "additionalProperties": false
    },
    "polls_friend": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "owner",
          "minimum": 0,
          "format": "int64",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_poll": {
      "type": "object",
      "properties": {
        "anonymous": {
          "$ref": "#\/definitions\/polls_poll_anonymous"
        },
        "friends": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/polls_friend"
          }
        },
        "multiple": {
          "description": "Information whether the poll with multiple choices",
          "type": "boolean",
          "required": true
        },
        "answer_id": {
          "type": "integer",
          "description": "Current user's answer ID",
          "minimum": 0
        },
        "end_date": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "answer_ids": {
          "type": "array",
          "description": "Current user's answer IDs",
          "items": {
            "type": "integer",
            "minimum": 0
          }
        },
        "closed": {
          "type": "boolean",
          "required": true
        },
        "is_board": {
          "type": "boolean",
          "required": true
        },
        "can_edit": {
          "type": "boolean",
          "required": true
        },
        "can_vote": {
          "type": "boolean",
          "required": true
        },
        "can_report": {
          "type": "boolean",
          "required": true
        },
        "can_share": {
          "type": "boolean",
          "required": true
        },
        "embed_hash": {
          "type": "string"
        },
        "photo": {
          "$ref": "#\/definitions\/polls_background"
        },
        "answers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/polls_answer"
          },
          "required": true
        },
        "created": {
          "type": "integer",
          "description": "Date when poll has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Poll ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Poll owner's ID",
          "format": "int64",
          "required": true
        },
        "author_id": {
          "type": "integer",
          "description": "Poll author's ID"
        },
        "question": {
          "type": "string",
          "description": "Poll question",
          "required": true
        },
        "background": {
          "$ref": "#\/definitions\/polls_background"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number",
          "minimum": 0,
          "required": true
        },
        "disable_unvote": {
          "type": "boolean",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_poll_anonymous": {
      "type": "boolean",
      "description": "Information whether the field is anonymous"
    },
    "polls_voters": {
      "type": "object",
      "properties": {
        "answer_id": {
          "type": "integer",
          "description": "Answer ID"
        },
        "users": {
          "$ref": "#\/definitions\/polls_voters_users"
        }
      },
      "additionalProperties": false
    },
    "polls_voters_users": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Votes number"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "entity": "profiles",
            "format": "int64",
            "description": "User ID"
          }
        }
      },
      "additionalProperties": false
    },
    "polls_addVote_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_create_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/polls_poll",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_deleteVote_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Result",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_getBackgrounds_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/polls_background"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/polls_poll",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_getVoters_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/polls_voters"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "polls_savePhoto_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/polls_background",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_prettyCard": {
      "type": "object",
      "properties": {
        "button": {
          "description": "Button key",
          "oneOf": [
            {
              "type": "object",
              "$ref": "#\/definitions\/base_link_button"
            },
            {
              "type": "string"
            }
          ]
        },
        "button_text": {
          "type": "string",
          "description": "Button text in current language"
        },
        "card_id": {
          "type": "string",
          "description": "Card ID (long int returned as string)",
          "required": true
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          }
        },
        "link_url": {
          "type": "string",
          "description": "Link URL",
          "required": true
        },
        "photo": {
          "type": "string",
          "description": "Photo ID (format \"<owner_id>_<media_id>\")",
          "required": true
        },
        "price": {
          "type": "string",
          "description": "Price if set (decimal number returned as string)"
        },
        "price_old": {
          "type": "string",
          "description": "Old price if set (decimal number returned as string)"
        },
        "title": {
          "type": "string",
          "description": "Title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_prettyCardOrError": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#\/definitions\/prettyCards_prettyCard"
        },
        {
          "$ref": "#\/definitions\/base_error"
        }
      ]
    },
    "prettyCards_create_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "owner_id": {
              "type": "integer",
              "description": "Owner ID of created pretty card",
              "entity": "owner",
              "format": "int64",
              "required": true
            },
            "card_id": {
              "type": "string",
              "description": "Card ID of created pretty card",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_delete_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "owner_id": {
              "type": "integer",
              "description": "Owner ID of deleted pretty card",
              "entity": "owner",
              "format": "int64",
              "required": true
            },
            "card_id": {
              "type": "string",
              "description": "Card ID of deleted pretty card",
              "required": true
            },
            "error": {
              "type": "string",
              "description": "Error reason if error happened"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_edit_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "owner_id": {
              "type": "integer",
              "description": "Owner ID of edited pretty card",
              "entity": "owner",
              "format": "int64",
              "required": true
            },
            "card_id": {
              "type": "string",
              "description": "Card ID of edited pretty card",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/prettyCards_prettyCardOrError"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_getUploadURL_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string",
          "description": "Upload URL",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "prettyCards_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/prettyCards_prettyCard"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "search_hint": {
      "type": "object",
      "properties": {
        "app": {
          "$ref": "#\/definitions\/apps_app"
        },
        "description": {
          "type": "string",
          "description": "Object description",
          "required": true
        },
        "global": {
          "description": "Information whether the object has been found globally",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "group": {
          "$ref": "#\/definitions\/groups_group"
        },
        "profile": {
          "$ref": "#\/definitions\/users_user_min"
        },
        "section": {
          "$ref": "#\/definitions\/search_hint_section"
        },
        "type": {
          "$ref": "#\/definitions\/search_hint_type",
          "required": true
        },
        "link": {
          "$ref": "#\/definitions\/base_link"
        }
      },
      "additionalProperties": false
    },
    "search_hint_section": {
      "type": "string",
      "description": "Section title",
      "enum": [
        "groups",
        "events",
        "publics",
        "correspondents",
        "people",
        "friends",
        "mutual_friends",
        "promo"
      ]
    },
    "search_hint_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "group",
        "profile",
        "vk_app",
        "app",
        "html5_game",
        "link"
      ]
    },
    "search_getHints_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/search_hint"
              },
              "required": true
            },
            "suggested_queries": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_giveEventSticker_item": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "status": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "secure_level": {
      "type": "object",
      "properties": {
        "level": {
          "type": "integer",
          "description": "Level"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "secure_setCounter_item": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "result": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_sms_notification": {
      "type": "object",
      "properties": {
        "app_id": {
          "type": "string",
          "description": "Application ID"
        },
        "date": {
          "type": "string",
          "description": "Date when message has been sent in Unixtime"
        },
        "id": {
          "type": "string",
          "description": "Notification ID"
        },
        "message": {
          "type": "string",
          "description": "Messsage text"
        },
        "user_id": {
          "type": "string",
          "description": "User ID"
        }
      },
      "additionalProperties": false
    },
    "secure_token_checked": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Date when access_token has been generated in Unixtime"
        },
        "expire": {
          "type": "integer",
          "description": "Date when access_token will expire in Unixtime"
        },
        "success": {
          "description": "Returns if successfully processed",
          "type": "integer",
          "default": 1
        },
        "user_id": {
          "type": "integer",
          "description": "User ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "secure_transaction": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "description": "Transaction date in Unixtime"
        },
        "id": {
          "type": "integer",
          "description": "Transaction ID"
        },
        "uid_from": {
          "type": "integer",
          "description": "From ID"
        },
        "uid_to": {
          "type": "integer",
          "description": "To ID"
        },
        "votes": {
          "type": "integer",
          "description": "Votes number"
        }
      },
      "additionalProperties": false
    },
    "secure_checkToken_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/secure_token_checked",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_getAppBalance_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "App balance",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_getSMSHistory_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/secure_sms_notification"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_getTransactionsHistory_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/secure_transaction"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_getUserLevel_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/secure_level"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_giveEventSticker_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/secure_giveEventSticker_item"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_sendNotification_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "entity": "owner",
            "format": "int64"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "secure_setCounter_array_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/secure_setCounter_item"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stats_activity": {
      "type": "object",
      "description": "Activity stats",
      "properties": {
        "comments": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "copies": {
          "type": "integer",
          "minimum": 0,
          "description": "Reposts number"
        },
        "hidden": {
          "type": "integer",
          "minimum": 0,
          "description": "Hidden from news count"
        },
        "likes": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        },
        "subscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "New subscribers count"
        },
        "unsubscribed": {
          "type": "integer",
          "minimum": 0,
          "description": "Unsubscribed count"
        }
      },
      "additionalProperties": false
    },
    "stats_city": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Visitors number",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "City name"
        },
        "value": {
          "type": "integer",
          "description": "City ID"
        }
      },
      "additionalProperties": false
    },
    "stats_country": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Country code"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "name": {
          "type": "string",
          "description": "Country name"
        },
        "value": {
          "type": "integer",
          "description": "Country ID"
        }
      },
      "additionalProperties": false
    },
    "stats_period": {
      "type": "object",
      "properties": {
        "activity": {
          "$ref": "#\/definitions\/stats_activity"
        },
        "period_from": {
          "type": "integer",
          "description": "Unix timestamp"
        },
        "period_to": {
          "type": "integer",
          "description": "Unix timestamp"
        },
        "reach": {
          "$ref": "#\/definitions\/stats_reach"
        },
        "visitors": {
          "$ref": "#\/definitions\/stats_views"
        }
      },
      "additionalProperties": false
    },
    "stats_reach": {
      "type": "object",
      "description": "Reach stats",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_country"
          }
        },
        "mobile_reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count from mobile devices"
        },
        "reach": {
          "type": "integer",
          "minimum": 0,
          "description": "Reach count"
        },
        "reach_subscribers": {
          "type": "integer",
          "minimum": 0,
          "description": "Subscribers reach count"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "stats_sex_age": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        },
        "value": {
          "type": "string",
          "description": "Sex\/age value",
          "required": true
        },
        "reach": {
          "type": "integer"
        },
        "reach_subscribers": {
          "type": "integer"
        },
        "count_subscribers": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "stats_views": {
      "type": "object",
      "description": "Views stats",
      "properties": {
        "age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        },
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_country"
          }
        },
        "mobile_views": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of views from mobile devices"
        },
        "sex": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number"
        },
        "visitors": {
          "type": "integer",
          "minimum": 0,
          "description": "Visitors number"
        }
      },
      "additionalProperties": false
    },
    "stats_wallpost_stat": {
      "type": "object",
      "properties": {
        "post_id": {
          "type": "integer"
        },
        "hide": {
          "type": "integer",
          "description": "Hidings number"
        },
        "join_group": {
          "type": "integer",
          "description": "People have joined the group"
        },
        "links": {
          "type": "integer",
          "description": "Link clickthrough"
        },
        "reach_subscribers": {
          "type": "integer",
          "description": "Subscribers reach"
        },
        "reach_subscribers_count": {
          "type": "integer"
        },
        "reach_total": {
          "type": "integer",
          "description": "Total reach"
        },
        "reach_total_count": {
          "type": "integer"
        },
        "reach_viral": {
          "type": "integer"
        },
        "reach_ads": {
          "type": "integer"
        },
        "report": {
          "type": "integer",
          "description": "Reports number"
        },
        "to_group": {
          "type": "integer",
          "description": "Clickthrough to community"
        },
        "unsubscribe": {
          "type": "integer",
          "description": "Unsubscribed members"
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_sex_age"
          }
        }
      },
      "additionalProperties": false
    },
    "stats_getPostReach_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_wallpost_stat"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stats_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stats_period"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "status_status": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Status text",
          "required": true
        },
        "audio": {
          "$ref": "#\/definitions\/audio_audio"
        }
      },
      "additionalProperties": false
    },
    "status_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/status_status",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stickers_image_set": {
      "type": "object",
      "properties": {
        "base_url": {
          "type": "string",
          "format": "uri",
          "description": "Base URL for images in set",
          "required": true
        },
        "version": {
          "type": "integer",
          "description": "Version number to be appended to the image URL"
        }
      },
      "additionalProperties": false
    },
    "storage_value": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "required": true
        },
        "value": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "storage_getKeys_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Key name"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "storage_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/storage_value"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "store_product": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Id of the product",
          "required": true
        },
        "type": {
          "type": "string",
          "description": "Product type",
          "enum": [
            "stickers"
          ],
          "required": true
        },
        "is_new": {
          "type": "boolean",
          "description": "Information whether sticker product wasn't used after being purchased"
        },
        "purchased": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether the product is purchased (1 - yes, 0 - no)"
        },
        "active": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether the product is active (1 - yes, 0 - no)"
        },
        "promoted": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether the product is promoted (1 - yes, 0 - no)"
        },
        "purchase_date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date (Unix time) when the product was purchased"
        },
        "title": {
          "type": "string",
          "description": "Title of the product"
        },
        "stickers": {
          "$ref": "#\/definitions\/base_stickers_list"
        },
        "style_sticker_ids": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "Array of style sticker ids (for sticker pack styles)"
        },
        "icon": {
          "$ref": "#\/definitions\/store_product_icon",
          "description": "Array of icon images or icon set object of the product (for stickers product type)"
        },
        "previews": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_image"
          },
          "description": "Array of preview images of the product (for stickers product type)"
        },
        "has_animation": {
          "type": "boolean",
          "description": "Information whether the product is an animated sticker pack (for stickers product type)"
        },
        "subtitle": {
          "type": "string",
          "description": "Subtitle of the product"
        },
        "payment_region": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "store_product_icon": {
      "deprecated_from_version": "5.134",
      "type": "array",
      "items": {
        "$ref": "#\/definitions\/base_image"
      }
    },
    "store_stickers_keyword": {
      "type": "object",
      "properties": {
        "words": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "required": true
        },
        "user_stickers": {
          "$ref": "#\/definitions\/store_stickers_keyword_stickers"
        },
        "promoted_stickers": {
          "$ref": "#\/definitions\/store_stickers_keyword_stickers"
        },
        "stickers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/store_stickers_keyword_sticker"
          }
        }
      },
      "additionalProperties": false
    },
    "store_stickers_keyword_sticker": {
      "type": "object",
      "properties": {
        "pack_id": {
          "type": "integer",
          "description": "Pack id",
          "required": true
        },
        "sticker_id": {
          "type": "integer",
          "description": "Sticker id",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "store_stickers_keyword_stickers": {
      "$ref": "#\/definitions\/base_stickers_list"
    },
    "store_getFavoriteStickers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/base_sticker"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "store_getProducts_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/store_product"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "store_getStickersKeywords_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 0,
              "required": true
            },
            "dictionary": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/store_stickers_keyword"
              },
              "required": true
            },
            "chunks_count": {
              "type": "integer",
              "minimum": 1,
              "description": "Total count of chunks to load"
            },
            "chunks_hash": {
              "type": "string",
              "minimum": 1,
              "description": "Chunks version hash"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_clickable_area": {
      "type": "object",
      "properties": {
        "x": {
          "type": "integer",
          "required": true
        },
        "y": {
          "type": "integer",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_clickable_sticker": {
      "type": "object",
      "properties": {
        "clickable_area": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stories_clickable_area"
          },
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Clickable sticker ID",
          "required": true
        },
        "hashtag": {
          "type": "string"
        },
        "link_object": {
          "$ref": "#\/definitions\/base_link"
        },
        "mention": {
          "type": "string"
        },
        "tooltip_text": {
          "type": "string"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "story_id": {
          "type": "integer"
        },
        "question": {
          "type": "string"
        },
        "question_button": {
          "type": "string"
        },
        "place_id": {
          "type": "integer"
        },
        "market_item": {
          "$ref": "#\/definitions\/market_market_item"
        },
        "audio": {
          "$ref": "#\/definitions\/audio_audio"
        },
        "audio_start_time": {
          "type": "integer"
        },
        "style": {
          "type": "string",
          "enum": [
            "transparent",
            "blue_gradient",
            "red_gradient",
            "underline",
            "blue",
            "green",
            "white",
            "question_reply",
            "light",
            "impressive"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "hashtag",
            "mention",
            "link",
            "question",
            "place",
            "market_item",
            "music",
            "story_reply",
            "owner",
            "post",
            "poll",
            "sticker",
            "app",
            "situational_theme"
          ],
          "required": true
        },
        "subtype": {
          "type": "string",
          "enum": [
            "market_item",
            "aliexpress_product"
          ]
        },
        "post_owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "post_id": {
          "type": "integer"
        },
        "poll": {
          "$ref": "#\/definitions\/polls_poll"
        },
        "color": {
          "type": "string",
          "description": "Color, hex format"
        },
        "sticker_id": {
          "type": "integer",
          "description": "Sticker ID"
        },
        "sticker_pack_id": {
          "type": "integer",
          "description": "Sticker pack ID"
        },
        "app": {
          "$ref": "#\/definitions\/apps_app_min"
        },
        "app_context": {
          "type": "string",
          "description": "Additional context for app sticker"
        },
        "has_new_interactions": {
          "type": "boolean",
          "description": "Whether current user has unread interaction with this app"
        },
        "is_broadcast_notify_allowed": {
          "type": "boolean",
          "description": "Whether current user allowed broadcast notify from this app"
        },
        "situational_theme_id": {
          "type": "integer"
        },
        "situational_app_url": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "stories_clickable_stickers": {
      "type": "object",
      "properties": {
        "clickable_stickers": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stories_clickable_sticker"
          },
          "required": true
        },
        "original_height": {
          "type": "integer",
          "minimum": 0,
          "required": true
        },
        "original_width": {
          "type": "integer",
          "minimum": 0,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_feed_item": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "promo_stories",
            "stories",
            "live_active",
            "live_finished",
            "community_grouped_stories",
            "app_grouped_stories",
            "birthday",
            "discover",
            "advices"
          ],
          "description": "Type of Feed Item",
          "required": true
        },
        "id": {
          "type": "string"
        },
        "stories": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stories_story"
          },
          "description": "Author stories"
        },
        "grouped": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/stories_feed_item"
          },
          "description": "Grouped stories of various authors (for types community_grouped_stories\/app_grouped_stories type)"
        },
        "app": {
          "$ref": "#\/definitions\/apps_app_min",
          "description": "App, which stories has been grouped (for type app_grouped_stories)"
        },
        "promo_data": {
          "$ref": "#\/definitions\/stories_promo_block",
          "description": "Additional data for promo stories (for type promo_stories)"
        },
        "birthday_user_id": {
          "type": "integer"
        },
        "track_code": {
          "type": "string"
        },
        "has_unseen": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "stories_promo_block": {
      "type": "object",
      "description": "Additional data for promo stories",
      "properties": {
        "name": {
          "type": "string",
          "description": "Promo story title",
          "required": true
        },
        "photo_50": {
          "type": "string",
          "description": "RL of square photo of the story with 50 pixels in width",
          "required": true
        },
        "photo_100": {
          "type": "string",
          "description": "RL of square photo of the story with 100 pixels in width",
          "required": true
        },
        "not_animated": {
          "type": "boolean",
          "description": "Hide animation for promo story",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_replies": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Replies number.",
          "minimum": 0,
          "required": true
        },
        "new": {
          "type": "integer",
          "description": "New replies number."
        }
      },
      "additionalProperties": false
    },
    "stories_stat_line": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "required": true
        },
        "counter": {
          "type": "integer",
          "minimum": 0
        },
        "is_unavailable": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "stories_story": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "can_comment": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can comment the story (0 - no, 1 - yes)."
        },
        "can_reply": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can reply to the story (0 - no, 1 - yes)."
        },
        "can_see": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can see the story (0 - no, 1 - yes)."
        },
        "can_like": {
          "type": "boolean",
          "description": "Information whether current user can like the story."
        },
        "can_share": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can share the story (0 - no, 1 - yes)."
        },
        "can_hide": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can hide the story (0 - no, 1 - yes)."
        },
        "date": {
          "type": "integer",
          "minimum": 0,
          "description": "Date when story has been added in Unixtime."
        },
        "expires_at": {
          "type": "integer",
          "minimum": 0,
          "description": "Story expiration time. Unixtime."
        },
        "id": {
          "type": "integer",
          "description": "Story ID.",
          "required": true
        },
        "is_deleted": {
          "type": "boolean",
          "description": "Information whether the story is deleted (false - no, true - yes)."
        },
        "is_expired": {
          "type": "boolean",
          "description": "Information whether the story is expired (false - no, true - yes)."
        },
        "link": {
          "$ref": "#\/definitions\/stories_story_link"
        },
        "owner_id": {
          "type": "integer",
          "description": "Story owner's ID.",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "parent_story": {
          "$ref": "#\/definitions\/stories_story"
        },
        "parent_story_access_key": {
          "type": "string",
          "description": "Access key for private object."
        },
        "parent_story_id": {
          "type": "integer",
          "description": "Parent story ID."
        },
        "parent_story_owner_id": {
          "type": "integer",
          "description": "Parent story owner's ID."
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "replies": {
          "description": "Replies counters to current story.",
          "$ref": "#\/definitions\/stories_replies"
        },
        "seen": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user has seen the story or not (0 - no, 1 - yes)."
        },
        "type": {
          "$ref": "#\/definitions\/stories_story_type"
        },
        "clickable_stickers": {
          "$ref": "#\/definitions\/stories_clickable_stickers"
        },
        "video": {
          "$ref": "#\/definitions\/video_video_full"
        },
        "views": {
          "type": "integer",
          "minimum": 0,
          "description": "Views number."
        },
        "can_ask": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether story has question sticker and current user can send question to the author"
        },
        "can_ask_anonymous": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether story has question sticker and current user can send anonymous question to the author"
        },
        "narratives_count": {
          "type": "integer"
        },
        "first_narrative_title": {
          "type": "string"
        },
        "birthday_wish_user_id": {
          "type": "integer"
        },
        "can_use_in_narrative": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "stories_story_link": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Link text",
          "required": true
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Link URL",
          "required": true
        },
        "link_url_target": {
          "type": "string",
          "description": "How to open url"
        }
      },
      "additionalProperties": false
    },
    "stories_story_stats": {
      "type": "object",
      "properties": {
        "answer": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "bans": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "open_link": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "replies": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "shares": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "subscribers": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "views": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        },
        "likes": {
          "$ref": "#\/definitions\/stories_story_stats_stat",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_story_stats_stat": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Stat value",
          "minimum": 0
        },
        "state": {
          "$ref": "#\/definitions\/stories_story_stats_state",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_story_stats_state": {
      "type": "string",
      "description": "Statistic state",
      "enum": [
        "on",
        "off",
        "hidden"
      ]
    },
    "stories_story_type": {
      "type": "string",
      "description": "Story type.",
      "enum": [
        "photo",
        "video",
        "live_active",
        "live_finished",
        "birthday_invite"
      ]
    },
    "stories_upload_link_text": {
      "type": "string",
      "enum": [
        "to_store",
        "vote",
        "more",
        "book",
        "order",
        "enroll",
        "fill",
        "signup",
        "buy",
        "ticket",
        "write",
        "open",
        "learn_more",
        "view",
        "go_to",
        "contact",
        "watch",
        "play",
        "install",
        "read",
        "calendar"
      ]
    },
    "stories_viewers_item": {
      "type": "object",
      "properties": {
        "is_liked": {
          "type": "boolean",
          "description": "user has like for this object",
          "required": true
        },
        "user_id": {
          "type": "integer",
          "description": "user id",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "user": {
          "$ref": "#\/definitions\/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "stories_getBanned_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Stories count",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "Owner ID"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getBanned_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Stories count",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "entity": "owner",
                "format": "int64",
                "description": "Owner ID"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getById_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Stories count",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/stories_story"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getPhotoUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "upload_url": {
              "type": "string",
              "description": "Upload URL",
              "required": true
            },
            "user_ids": {
              "type": "array",
              "description": "Users ID who can to see story.",
              "items": {
                "type": "integer",
                "minimum": 0
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getStats_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/stories_story_stats",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getVideoUploadServer_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "upload_url": {
              "type": "string",
              "description": "Upload URL",
              "required": true
            },
            "user_ids": {
              "type": "array",
              "description": "Users ID who can to see story.",
              "items": {
                "type": "integer",
                "minimum": 0
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getViewers_extended_V5115_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Viewers count",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/stories_viewers_item"
              },
              "required": true
            },
            "hidden_reason": {
              "type": "string"
            },
            "next_from": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_getViewers_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Viewers count",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_get_V5113_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/stories_feed_item"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              }
            },
            "need_upload_screen": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Stories count",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "array",
                "items": {
                  "$ref": "#\/definitions\/stories_story"
                }
              },
              "required": true
            },
            "promo_data": {
              "$ref": "#\/definitions\/stories_promo_block"
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              }
            },
            "need_upload_screen": {
              "type": "boolean"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_save_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/stories_story"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "stories_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "upload_result": {
              "type": "string",
              "description": "A string hash that is used in the stories.save method"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "streaming_getServerUrl_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "endpoint": {
              "type": "string",
              "description": "Server host"
            },
            "key": {
              "type": "string",
              "description": "Access key"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_career": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "city_name": {
          "type": "string",
          "description": "City name"
        },
        "company": {
          "type": "string",
          "description": "Company name"
        },
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "group_id": {
          "type": "integer",
          "description": "Community ID",
          "entity": "groups",
          "format": "int64"
        },
        "id": {
          "type": "integer",
          "description": "Career ID"
        },
        "position": {
          "type": "string",
          "description": "Position"
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "additionalProperties": false
    },
    "users_exports": {
      "type": "object",
      "properties": {
        "facebook": {
          "type": "integer"
        },
        "livejournal": {
          "type": "integer"
        },
        "twitter": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "users_fields": {
      "type": "string",
      "enum": [
        "first_name_nom",
        "first_name_gen",
        "first_name_dat",
        "first_name_acc",
        "first_name_ins",
        "first_name_abl",
        "last_name_nom",
        "last_name_gen",
        "last_name_dat",
        "last_name_acc",
        "last_name_ins",
        "last_name_abl",
        "photo_id",
        "verified",
        "sex",
        "bdate",
        "bdate_visibility",
        "city",
        "country",
        "home_town",
        "has_photo",
        "photo",
        "photo_rec",
        "photo_50",
        "photo_100",
        "photo_200_orig",
        "photo_200",
        "photo_400",
        "photo_400_orig",
        "photo_big",
        "photo_medium",
        "photo_medium_rec",
        "photo_max",
        "photo_max_orig",
        "photo_max_size",
        "third_party_buttons",
        "online",
        "lists",
        "domain",
        "has_mobile",
        "contacts",
        "language",
        "site",
        "education",
        "universities",
        "schools",
        "status",
        "last_seen",
        "followers_count",
        "counters",
        "common_count",
        "online_info",
        "occupation",
        "nickname",
        "relatives",
        "relation",
        "personal",
        "connections",
        "exports",
        "wall_comments",
        "wall_default",
        "activities",
        "activity",
        "interests",
        "music",
        "movies",
        "tv",
        "books",
        "is_no_index",
        "games",
        "about",
        "quotes",
        "can_post",
        "can_see_all_posts",
        "can_see_audio",
        "can_see_gifts",
        "work",
        "places",
        "can_write_private_message",
        "can_send_friend_request",
        "can_upload_doc",
        "is_favorite",
        "is_hidden_from_feed",
        "timezone",
        "screen_name",
        "maiden_name",
        "crop_photo",
        "is_friend",
        "friend_status",
        "career",
        "military",
        "blacklisted",
        "blacklisted_by_me",
        "can_subscribe_posts",
        "descriptions",
        "trending",
        "mutual",
        "friendship_weeks",
        "can_invite_to_chats",
        "stories_archive_count",
        "has_unseen_stories",
        "video_live",
        "video_live_level",
        "video_live_count",
        "clips_count",
        "service_description",
        "can_see_wishes",
        "is_subscribed_podcasts",
        "can_subscribe_podcasts"
      ]
    },
    "users_last_seen": {
      "type": "object",
      "properties": {
        "platform": {
          "type": "integer",
          "description": "Type of the platform that used for the last authorization"
        },
        "time": {
          "type": "integer",
          "description": "Last visit date (in Unix time)"
        }
      },
      "additionalProperties": false
    },
    "users_military": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID",
          "required": true
        },
        "from": {
          "type": "integer",
          "description": "From year"
        },
        "id": {
          "type": "integer",
          "description": "Military ID"
        },
        "unit": {
          "type": "string",
          "description": "Unit name",
          "required": true
        },
        "unit_id": {
          "type": "integer",
          "description": "Unit ID",
          "required": true
        },
        "until": {
          "type": "integer",
          "description": "Till year"
        }
      },
      "additionalProperties": false
    },
    "users_occupation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "ID of school, university, company group",
          "minimum": 0
        },
        "name": {
          "type": "string",
          "description": "Name of occupation"
        },
        "type": {
          "type": "string",
          "description": "Type of occupation"
        }
      },
      "additionalProperties": false
    },
    "users_online_info": {
      "type": "object",
      "properties": {
        "visible": {
          "type": "boolean",
          "description": "Whether you can see real online status of user or not",
          "required": true
        },
        "last_seen": {
          "type": "integer",
          "description": "Last time we saw user being active",
          "minimum": 0
        },
        "is_online": {
          "type": "boolean",
          "description": "Whether user is currently online or not"
        },
        "app_id": {
          "type": "integer",
          "description": "Application id from which user is currently online or was last seen online",
          "minimum": 0
        },
        "is_mobile": {
          "type": "boolean",
          "description": "Is user online from desktop app or mobile app"
        },
        "status": {
          "type": "string",
          "description": "In case user online is not visible, it indicates approximate timeframe of user online",
          "enum": [
            "recently",
            "last_week",
            "last_month",
            "long_ago",
            "not_show"
          ]
        }
      },
      "additionalProperties": false
    },
    "users_personal": {
      "type": "object",
      "properties": {
        "alcohol": {
          "type": "integer",
          "description": "User's views on alcohol"
        },
        "inspired_by": {
          "type": "string",
          "description": "User's inspired by"
        },
        "langs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "User's languages"
          }
        },
        "life_main": {
          "type": "integer",
          "description": "User's personal priority in life"
        },
        "people_main": {
          "type": "integer",
          "description": "User's personal priority in people"
        },
        "political": {
          "type": "integer",
          "description": "User's political views"
        },
        "religion": {
          "type": "string",
          "description": "User's religion"
        },
        "religion_id": {
          "type": "integer",
          "description": "User's religion id"
        },
        "smoking": {
          "type": "integer",
          "description": "User's views on smoking"
        }
      },
      "additionalProperties": false
    },
    "users_relative": {
      "type": "object",
      "properties": {
        "birth_date": {
          "type": "string",
          "description": "Date of child birthday (format dd.mm.yyyy)"
        },
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Relative ID"
        },
        "name": {
          "type": "string",
          "description": "Name of relative"
        },
        "type": {
          "type": "string",
          "description": "Relative type",
          "enum": [
            "parent",
            "child",
            "grandparent",
            "grandchild",
            "sibling"
          ],
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_school": {
      "type": "object",
      "properties": {
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "class": {
          "type": "string",
          "description": "School class letter"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "id": {
          "type": "string",
          "description": "School ID"
        },
        "name": {
          "type": "string",
          "description": "School name"
        },
        "type": {
          "type": "integer",
          "description": "School type ID"
        },
        "type_str": {
          "type": "string",
          "description": "School type name"
        },
        "year_from": {
          "type": "integer",
          "description": "Year the user started to study"
        },
        "year_graduated": {
          "type": "integer",
          "description": "Graduation year"
        },
        "year_to": {
          "type": "integer",
          "description": "Year the user finished to study"
        },
        "speciality": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "users_subscriptions_item": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#\/definitions\/users_user_xtr_type"
        },
        {
          "$ref": "#\/definitions\/groups_group_full"
        }
      ]
    },
    "users_university": {
      "type": "object",
      "properties": {
        "chair": {
          "type": "integer",
          "description": "Chair ID"
        },
        "chair_name": {
          "type": "string",
          "description": "Chair name"
        },
        "city": {
          "type": "integer",
          "description": "City ID"
        },
        "country": {
          "type": "integer",
          "description": "Country ID"
        },
        "education_form": {
          "type": "string",
          "description": "Education form"
        },
        "education_status": {
          "type": "string",
          "description": "Education status"
        },
        "faculty": {
          "type": "integer",
          "description": "Faculty ID"
        },
        "faculty_name": {
          "type": "string",
          "description": "Faculty name"
        },
        "graduation": {
          "type": "integer",
          "description": "Graduation year"
        },
        "id": {
          "type": "integer",
          "description": "University ID"
        },
        "name": {
          "type": "string",
          "description": "University name"
        },
        "university_group_id": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "users_user": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user_min"
        },
        {
          "properties": {
            "sex": {
              "$ref": "#\/definitions\/base_sex",
              "description": "User sex"
            },
            "screen_name": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "photo_50": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 50 pixels in width"
            },
            "photo_100": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 100 pixels in width"
            },
            "online_info": {
              "$ref": "#\/definitions\/users_online_info"
            },
            "online": {
              "description": "Information whether the user is online",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "online_mobile": {
              "description": "Information whether the user is online in mobile site or application",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "online_app": {
              "type": "integer",
              "description": "Application ID"
            },
            "verified": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether the user is verified"
            },
            "trending": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether the user has a \"fire\" pictogram."
            },
            "friend_status": {
              "$ref": "#\/definitions\/friends_friend_status_status"
            },
            "mutual": {
              "$ref": "#\/definitions\/friends_requests_mutual"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "users_user_connections": {
      "type": "object",
      "properties": {
        "skype": {
          "type": "string",
          "description": "User's Skype nickname",
          "required": true
        },
        "facebook": {
          "type": "string",
          "description": "User's Facebook account",
          "required": true
        },
        "facebook_name": {
          "type": "string",
          "description": "User's Facebook name"
        },
        "twitter": {
          "type": "string",
          "description": "User's Twitter account",
          "required": true
        },
        "livejournal": {
          "type": "string",
          "description": "User's Livejournal account"
        },
        "instagram": {
          "type": "string",
          "description": "User's Instagram account",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_user_counters": {
      "type": "object",
      "properties": {
        "albums": {
          "type": "integer",
          "description": "Albums number"
        },
        "badges": {
          "type": "integer",
          "description": "Badges number"
        },
        "audios": {
          "type": "integer",
          "description": "Audios number"
        },
        "followers": {
          "type": "integer",
          "description": "Followers number"
        },
        "friends": {
          "type": "integer",
          "description": "Friends number"
        },
        "gifts": {
          "type": "integer",
          "description": "Gifts number"
        },
        "groups": {
          "type": "integer",
          "description": "Communities number"
        },
        "notes": {
          "type": "integer",
          "description": "Notes number"
        },
        "online_friends": {
          "type": "integer",
          "description": "Online friends number"
        },
        "pages": {
          "type": "integer",
          "description": "Public pages number"
        },
        "photos": {
          "type": "integer",
          "description": "Photos number"
        },
        "subscriptions": {
          "type": "integer",
          "description": "Subscriptions number"
        },
        "user_photos": {
          "type": "integer",
          "description": "Number of photos with user"
        },
        "user_videos": {
          "type": "integer",
          "description": "Number of videos with user"
        },
        "videos": {
          "type": "integer",
          "description": "Videos number"
        },
        "new_photo_tags": {
          "type": "integer"
        },
        "new_recognition_tags": {
          "type": "integer"
        },
        "mutual_friends": {
          "type": "integer"
        },
        "posts": {
          "type": "integer"
        },
        "articles": {
          "type": "integer"
        },
        "wishes": {
          "type": "integer"
        },
        "podcasts": {
          "type": "integer"
        },
        "clips": {
          "type": "integer"
        },
        "clips_followers": {
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "users_user_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user"
        },
        {
          "properties": {
            "first_name_nom": {
              "type": "string",
              "description": "User's first name in nominative case"
            },
            "first_name_gen": {
              "type": "string",
              "description": "User's first name in genitive case"
            },
            "first_name_dat": {
              "type": "string",
              "description": "User's first name in dative case"
            },
            "first_name_acc": {
              "type": "string",
              "description": "User's first name in accusative case"
            },
            "first_name_ins": {
              "type": "string",
              "description": "User's first name in instrumental case"
            },
            "first_name_abl": {
              "type": "string",
              "description": "User's first name in prepositional case"
            },
            "last_name_nom": {
              "type": "string",
              "description": "User's last name in nominative case"
            },
            "last_name_gen": {
              "type": "string",
              "description": "User's last name in genitive case"
            },
            "last_name_dat": {
              "type": "string",
              "description": "User's last name in dative case"
            },
            "last_name_acc": {
              "type": "string",
              "description": "User's last name in accusative case"
            },
            "last_name_ins": {
              "type": "string",
              "description": "User's last name in instrumental case"
            },
            "last_name_abl": {
              "type": "string",
              "description": "User's last name in prepositional case"
            },
            "nickname": {
              "type": "string",
              "description": "User nickname"
            },
            "maiden_name": {
              "type": "string",
              "description": "User maiden name"
            },
            "contact_name": {
              "type": "string",
              "description": "User contact name"
            },
            "domain": {
              "type": "string",
              "description": "Domain name of the user's page"
            },
            "bdate": {
              "type": "string",
              "description": "User's date of birth"
            },
            "city": {
              "$ref": "#\/definitions\/base_city"
            },
            "country": {
              "$ref": "#\/definitions\/base_country"
            },
            "timezone": {
              "type": "number",
              "description": "User's timezone"
            },
            "owner_state": {
              "$ref": "#\/definitions\/owner_state"
            },
            "photo_200": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with 200 pixels in width"
            },
            "photo_max": {
              "type": "string",
              "format": "uri",
              "description": "URL of square photo of the user with maximum width"
            },
            "photo_200_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo with 200 pixels in width"
            },
            "photo_400_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo with 400 pixels in width"
            },
            "photo_max_orig": {
              "type": "string",
              "format": "uri",
              "description": "URL of user's photo of maximum size"
            },
            "photo_id": {
              "type": "string",
              "description": "ID of the user's main photo"
            },
            "has_photo": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether the user has main photo"
            },
            "has_mobile": {
              "description": "Information whether the user specified his phone number",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_friend": {
              "description": "Information whether the user is a friend of current user",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "wall_comments": {
              "description": "Information whether current user can comment wall posts",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_post": {
              "description": "Information whether current user can post on the user's wall",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_see_all_posts": {
              "description": "Information whether current user can see other users' audio on the wall",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_see_audio": {
              "description": "Information whether current user can see the user's audio",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "type": {
              "$ref": "#\/definitions\/users_user_type"
            },
            "email": {
              "type": "string"
            },
            "skype": {
              "type": "string"
            },
            "facebook": {
              "type": "string"
            },
            "facebook_name": {
              "type": "string"
            },
            "twitter": {
              "type": "string"
            },
            "livejournal": {
              "type": "string"
            },
            "instagram": {
              "type": "string"
            },
            "test": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "video_live": {
              "$ref": "#\/definitions\/video_live_info"
            },
            "is_video_live_notifications_blocked": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_service": {
              "type": "boolean"
            },
            "service_description": {
              "type": "string"
            },
            "photo_rec": {
              "$ref": "#\/definitions\/photos_photo_falseable"
            },
            "photo_medium": {
              "$ref": "#\/definitions\/photos_photo_falseable"
            },
            "photo_medium_rec": {
              "$ref": "#\/definitions\/photos_photo_falseable"
            },
            "photo": {
              "type": "string"
            },
            "photo_big": {
              "type": "string"
            },
            "photo_400": {
              "type": "string"
            },
            "photo_max_size": {
              "$ref": "#\/definitions\/photos_photo"
            },
            "language": {
              "type": "string"
            },
            "stories_archive_count": {
              "type": "integer"
            },
            "has_unseen_stories": {
              "type": "boolean"
            },
            "wall_default": {
              "type": "string",
              "enum": [
                "owner",
                "all"
              ]
            },
            "can_call": {
              "description": "Information whether current user can call",
              "type": "boolean"
            },
            "can_call_from_group": {
              "description": "Information whether group can call user",
              "type": "boolean"
            },
            "can_see_wishes": {
              "description": "Information whether current user can see the user's wishes",
              "type": "boolean"
            },
            "can_see_gifts": {
              "description": "Information whether current user can see the user's gifts",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "interests": {
              "type": "string"
            },
            "books": {
              "type": "string"
            },
            "tv": {
              "type": "string"
            },
            "quotes": {
              "type": "string"
            },
            "about": {
              "type": "string"
            },
            "games": {
              "type": "string"
            },
            "movies": {
              "type": "string"
            },
            "activities": {
              "type": "string"
            },
            "music": {
              "type": "string"
            },
            "can_write_private_message": {
              "description": "Information whether current user can write private message",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_send_friend_request": {
              "description": "Information whether current user can send a friend request",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "can_be_invited_group": {
              "type": "boolean",
              "description": "Information whether current user can be invited to the community"
            },
            "mobile_phone": {
              "type": "string",
              "description": "User's mobile phone number"
            },
            "home_phone": {
              "type": "string",
              "description": "User's additional phone number"
            },
            "site": {
              "type": "string",
              "description": "User's website"
            },
            "status_audio": {
              "$ref": "#\/definitions\/audio_audio"
            },
            "status": {
              "type": "string",
              "description": "User's status"
            },
            "activity": {
              "type": "string",
              "description": "User's status"
            },
            "last_seen": {
              "$ref": "#\/definitions\/users_last_seen"
            },
            "exports": {
              "$ref": "#\/definitions\/users_exports"
            },
            "crop_photo": {
              "$ref": "#\/definitions\/base_crop_photo"
            },
            "followers_count": {
              "type": "integer",
              "description": "Number of user's followers",
              "minimum": 0
            },
            "video_live_level": {
              "type": "integer",
              "description": "User level in live streams achievements",
              "minimum": 0
            },
            "video_live_count": {
              "type": "integer",
              "description": "Number of user's live streams",
              "minimum": 0
            },
            "clips_count": {
              "type": "integer",
              "description": "Number of user's clips",
              "minimum": 0
            },
            "blacklisted": {
              "description": "Information whether current user is in the requested user's blacklist.",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "blacklisted_by_me": {
              "description": "Information whether the requested user is in current user's blacklist",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_favorite": {
              "description": "Information whether the requested user is in faves of current user",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "is_hidden_from_feed": {
              "description": "Information whether the requested user is hidden from current user's newsfeed",
              "$ref": "#\/definitions\/base_bool_int"
            },
            "common_count": {
              "type": "integer",
              "description": "Number of common friends with current user",
              "minimum": 0
            },
            "occupation": {
              "$ref": "#\/definitions\/users_occupation"
            },
            "career": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_career"
              }
            },
            "military": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_military"
              }
            },
            "university": {
              "type": "integer",
              "description": "University ID"
            },
            "university_name": {
              "type": "string",
              "description": "University name"
            },
            "university_group_id": {
              "type": "integer"
            },
            "faculty": {
              "type": "integer",
              "description": "Faculty ID"
            },
            "faculty_name": {
              "type": "string",
              "description": "Faculty name"
            },
            "graduation": {
              "type": "integer",
              "description": "Graduation year"
            },
            "education_form": {
              "type": "string",
              "description": "Education form"
            },
            "education_status": {
              "type": "string",
              "description": "User's education status"
            },
            "home_town": {
              "type": "string",
              "description": "User hometown"
            },
            "relation": {
              "$ref": "#\/definitions\/users_user_relation",
              "description": "User relationship status"
            },
            "relation_partner": {
              "$ref": "#\/definitions\/users_user_min"
            },
            "personal": {
              "$ref": "#\/definitions\/users_personal"
            },
            "universities": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_university"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_school"
              }
            },
            "relatives": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_relative"
              }
            },
            "is_subscribed_podcasts": {
              "description": "Information whether current user is subscribed to podcasts",
              "type": "boolean"
            },
            "can_subscribe_podcasts": {
              "description": "Owner in whitelist or not",
              "type": "boolean"
            },
            "can_subscribe_posts": {
              "description": "Can subscribe to wall",
              "type": "boolean"
            },
            "counters": {
              "$ref": "#\/definitions\/users_user_counters"
            },
            "access_key": {
              "type": "string"
            },
            "can_upload_doc": {
              "$ref": "#\/definitions\/base_bool_int"
            },
            "hash": {
              "type": "string"
            },
            "is_no_index": {
              "type": "boolean",
              "description": "Access to user profile is restricted for search engines"
            },
            "contact_id": {
              "type": "integer",
              "description": "Contact person ID"
            },
            "is_message_request": {
              "type": "boolean"
            },
            "descriptions": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "lists": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "IDs of friend lists with user"
              }
            }
          },
          "additionalProperties": false
        }
      ],
      "additionalProperties": false
    },
    "users_user_min": {
      "properties": {
        "deactivated": {
          "type": "string",
          "description": "Returns if a profile is deleted or blocked"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "hidden": {
          "type": "integer",
          "description": "Returns if a profile is hidden."
        },
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "User ID",
          "required": true
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "can_access_closed": {
          "type": "boolean"
        },
        "is_closed": {
          "type": "boolean"
        }
      }
    },
    "users_user_relation": {
      "type": "integer",
      "enum": [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8
      ],
      "enumNames": [
        "not specified",
        "single",
        "in a relationship",
        "engaged",
        "married",
        "complicated",
        "actively searching",
        "in love",
        "in a civil union"
      ]
    },
    "users_user_settings_xtr": {
      "type": "object",
      "properties": {
        "connections": {
          "$ref": "#\/definitions\/users_user_connections"
        },
        "bdate": {
          "type": "string",
          "description": "User's date of birth"
        },
        "bdate_visibility": {
          "type": "integer",
          "minimum": 0,
          "description": "Information whether user's birthdate are hidden"
        },
        "city": {
          "$ref": "#\/definitions\/base_city"
        },
        "country": {
          "$ref": "#\/definitions\/base_country"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "home_town": {
          "type": "string",
          "description": "User's hometown",
          "required": true
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "maiden_name": {
          "type": "string",
          "description": "User maiden name"
        },
        "name_request": {
          "$ref": "#\/definitions\/account_name_request"
        },
        "personal": {
          "$ref": "#\/definitions\/users_personal"
        },
        "phone": {
          "type": "string",
          "description": "User phone number with some hidden digits"
        },
        "relation": {
          "$ref": "#\/definitions\/users_user_relation",
          "description": "User relationship status"
        },
        "relation_partner": {
          "$ref": "#\/definitions\/users_user_min"
        },
        "relation_pending": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether relation status is pending"
        },
        "relation_requests": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/users_user_min"
          }
        },
        "screen_name": {
          "type": "string",
          "description": "Domain name of the user's page"
        },
        "sex": {
          "$ref": "#\/definitions\/base_sex",
          "description": "User sex"
        },
        "status": {
          "type": "string",
          "description": "User status",
          "required": true
        },
        "status_audio": {
          "$ref": "#\/definitions\/audio_audio"
        },
        "interests": {
          "$ref": "#\/definitions\/account_user_settings_interests"
        },
        "languages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "users_user_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "profile"
      ]
    },
    "users_user_xtr_type": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/users_user"
        },
        {
          "properties": {
            "type": {
              "$ref": "#\/definitions\/users_user_type"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "users_users_array": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "Users number",
          "minimum": 0,
          "required": true
        },
        "items": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "User ID",
            "entity": "profiles",
            "format": "int64"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_getFollowers_fields_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of available results",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_getFollowers_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total friends number",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "type": "integer",
                "description": "User ID",
                "minimum": 1,
                "entity": "owner",
                "format": "int64"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_getSubscriptions_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of available results",
              "minimum": 0,
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_subscriptions_item"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_getSubscriptions_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "users": {
              "$ref": "#\/definitions\/users_users_array",
              "required": true
            },
            "groups": {
              "$ref": "#\/definitions\/groups_groups_array",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/users_user_full"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "users_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of available results",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_domain_resolved": {
      "type": "object",
      "properties": {
        "object_id": {
          "type": "integer",
          "description": "Object ID"
        },
        "group_id": {
          "type": "integer",
          "description": "Group ID",
          "entity": "groups",
          "format": "int64"
        },
        "type": {
          "$ref": "#\/definitions\/utils_domain_resolved_type"
        }
      },
      "additionalProperties": false
    },
    "utils_domain_resolved_type": {
      "type": "string",
      "description": "Object type",
      "enum": [
        "user",
        "group",
        "application",
        "page",
        "vk_app",
        "community_application"
      ]
    },
    "utils_last_shortened_link": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc\/)"
        },
        "short_url": {
          "type": "string",
          "format": "uri",
          "description": "Short link URL"
        },
        "timestamp": {
          "type": "integer",
          "description": "Creation time in Unixtime"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Full URL"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      },
      "additionalProperties": false
    },
    "utils_link_checked": {
      "type": "object",
      "properties": {
        "link": {
          "type": "string",
          "format": "uri",
          "description": "Link URL"
        },
        "status": {
          "$ref": "#\/definitions\/utils_link_checked_status"
        }
      },
      "additionalProperties": false
    },
    "utils_link_checked_status": {
      "type": "string",
      "description": "Link status",
      "enum": [
        "not_banned",
        "banned",
        "processing"
      ]
    },
    "utils_link_stats": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc\/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/utils_stats"
          }
        }
      },
      "additionalProperties": false
    },
    "utils_link_stats_extended": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc\/)"
        },
        "stats": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/utils_stats_extended"
          }
        }
      },
      "additionalProperties": false
    },
    "utils_short_link": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for private stats"
        },
        "key": {
          "type": "string",
          "description": "Link key (characters after vk.cc\/)"
        },
        "short_url": {
          "type": "string",
          "format": "uri",
          "description": "Short link URL"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Full URL"
        }
      },
      "additionalProperties": false
    },
    "utils_stats": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_city": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "integer",
          "description": "City ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_country": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "integer",
          "description": "Country ID"
        },
        "views": {
          "type": "integer",
          "description": "Views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_extended": {
      "type": "object",
      "properties": {
        "cities": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/utils_stats_city"
          }
        },
        "countries": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/utils_stats_country"
          }
        },
        "sex_age": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/utils_stats_sex_age"
          }
        },
        "timestamp": {
          "type": "integer",
          "description": "Start time"
        },
        "views": {
          "type": "integer",
          "description": "Total views number"
        }
      },
      "additionalProperties": false
    },
    "utils_stats_sex_age": {
      "type": "object",
      "properties": {
        "age_range": {
          "type": "string",
          "description": "Age denotation"
        },
        "female": {
          "type": "integer",
          "description": " Views by female users"
        },
        "male": {
          "type": "integer",
          "description": " Views by male users"
        }
      },
      "additionalProperties": false
    },
    "utils_checkLink_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/utils_link_checked",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_getLastShortenedLinks_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number of available results",
              "minimum": 0
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/utils_last_shortened_link"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_getLinkStats_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/utils_link_stats_extended",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_getLinkStats_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/utils_link_stats",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_getServerTime_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Time as Unixtime",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_getShortLink_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/utils_short_link",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "utils_resolveScreenName_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/utils_domain_resolved",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_live_info": {
      "type": "object",
      "properties": {
        "enabled": {
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        },
        "is_notifications_blocked": {
          "$ref": "#\/definitions\/base_bool_int"
        }
      },
      "additionalProperties": false
    },
    "video_live_settings": {
      "description": "Video live settings",
      "type": "object",
      "properties": {
        "can_rewind": {
          "description": "If user car rewind live or not",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "is_endless": {
          "description": "If live is endless or not",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "max_duration": {
          "description": "Max possible time for rewind",
          "type": "integer"
        }
      },
      "additionalProperties": false
    },
    "video_save_result": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "owner_id": {
          "type": "integer",
          "description": "Video owner ID",
          "entity": "owner",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "upload_url": {
          "type": "string",
          "format": "uri",
          "description": "URL for the video uploading"
        },
        "video_id": {
          "type": "integer",
          "description": "Video ID"
        }
      },
      "additionalProperties": false
    },
    "video_video": {
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Video access key"
        },
        "adding_date": {
          "type": "integer",
          "description": "Date when the video has been added in Unixtime",
          "minimum": 0
        },
        "can_comment": {
          "description": "Information whether current user can comment the video",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_edit": {
          "description": "Information whether current user can edit the video",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_like": {
          "description": "Information whether current user can like the video",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_repost": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can repost the video"
        },
        "can_subscribe": {
          "description": "Information whether current user can subscribe to author of the video",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_add_to_faves": {
          "description": "Information whether current user can add the video to favourites",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_add": {
          "description": "Information whether current user can add the video",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "can_attach_link": {
          "description": "Information whether current user can attach action button to the video",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "is_private": {
          "description": "1 if video is private",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "comments": {
          "type": "integer",
          "description": "Number of comments",
          "minimum": 0
        },
        "date": {
          "type": "integer",
          "description": "Date when video has been uploaded in Unixtime",
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Video description"
        },
        "duration": {
          "type": "integer",
          "description": "Video duration in seconds",
          "minimum": 0
        },
        "image": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/video_video_image"
          }
        },
        "first_frame": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/video_video_image"
          }
        },
        "width": {
          "type": "integer",
          "minimum": 0,
          "description": "Video width"
        },
        "height": {
          "type": "integer",
          "minimum": 0,
          "description": "Video height"
        },
        "id": {
          "type": "integer",
          "minimum": 0,
          "description": "Video ID"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "description": "Video owner ID",
          "format": "int64"
        },
        "user_id": {
          "type": "integer",
          "minimum": 0,
          "description": "Id of the user who uploaded the video if it was uploaded to a group by member",
          "entity": "owner",
          "format": "int64"
        },
        "title": {
          "type": "string",
          "description": "Video title"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Whether video is added to bookmarks"
        },
        "player": {
          "type": "string",
          "format": "uri",
          "description": "Video embed URL"
        },
        "processing": {
          "description": "Returns if the video is processing",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "converting": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "1 if  video is being converted"
        },
        "added": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "1 if video is added to user's albums"
        },
        "is_subscribed": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "1 if user is subscribed to author of the video"
        },
        "track_code": {
          "type": "string"
        },
        "repeat": {
          "description": "Information whether the video is repeated",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "type": {
          "type": "string",
          "enum": [
            "video",
            "music_video",
            "movie"
          ]
        },
        "views": {
          "type": "integer",
          "description": "Number of views",
          "minimum": 0
        },
        "local_views": {
          "type": "integer",
          "description": "If video is external, number of views on vk",
          "minimum": 0
        },
        "content_restricted": {
          "type": "integer",
          "minimum": 0,
          "description": "Restriction code"
        },
        "content_restricted_message": {
          "type": "string",
          "description": "Restriction text"
        },
        "balance": {
          "type": "integer",
          "description": "Live donations balance",
          "minimum": 0
        },
        "live_status": {
          "type": "string",
          "description": "Live stream status",
          "enum": [
            "waiting",
            "started",
            "finished",
            "failed",
            "upcoming"
          ]
        },
        "live": {
          "description": "1 if the video is a live stream",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "upcoming": {
          "description": "1 if the video is an upcoming stream",
          "$ref": "#\/definitions\/base_property_exists"
        },
        "live_start_time": {
          "description": "Date in Unixtime when the live stream is scheduled to start by the author",
          "type": "integer",
          "minimum": 0
        },
        "live_notify": {
          "description": "Whether current user is subscribed to the upcoming live stream notification (if not subscribed to the author)",
          "$ref": "#\/definitions\/base_bool_int"
        },
        "spectators": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of spectators of the stream"
        },
        "platform": {
          "type": "string",
          "description": "External platform"
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes"
        },
        "reposts": {
          "$ref": "#\/definitions\/base_reposts_info"
        }
      }
    },
    "video_video_album": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Album ID",
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Album owner's ID",
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Album title",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_video_album_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/video_video_album"
        },
        {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 0,
              "description": "Total number of videos in album",
              "required": true
            },
            "image": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_image"
              },
              "description": "Album cover image in different sizes"
            },
            "image_blur": {
              "$ref": "#\/definitions\/base_property_exists",
              "description": "Need blur album thumb or not"
            },
            "is_system": {
              "$ref": "#\/definitions\/base_property_exists",
              "description": "Information whether album is system"
            },
            "updated_time": {
              "type": "integer",
              "description": "Date when the album has been updated last time in Unixtime",
              "minimum": 0,
              "required": true
            }
          },
          "additionalProperties": false
        }
      ],
      "additionalProperties": false
    },
    "video_video_files": {
      "type": "object",
      "properties": {
        "external": {
          "type": "string",
          "format": "uri",
          "description": "URL of the external player"
        },
        "mp4_144": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 144p quality"
        },
        "mp4_240": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 240p quality"
        },
        "mp4_360": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 360p quality"
        },
        "mp4_480": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 480p quality"
        },
        "mp4_720": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 720p quality"
        },
        "mp4_1080": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 1080p quality"
        },
        "mp4_1440": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 2K quality"
        },
        "mp4_2160": {
          "type": "string",
          "format": "uri",
          "description": "URL of the mpeg4 file with 4K quality"
        },
        "flv_320": {
          "type": "string",
          "format": "uri",
          "description": "URL of the flv file with 320p quality"
        }
      },
      "minProperties": 1,
      "additionalProperties": false
    },
    "video_video_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/video_video"
        },
        {
          "properties": {
            "files": {
              "$ref": "#\/definitions\/video_video_files"
            },
            "trailer": {
              "$ref": "#\/definitions\/video_video_files"
            },
            "live_settings": {
              "description": "Settings for live stream",
              "$ref": "#\/definitions\/video_live_settings"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "video_video_image": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/base_image"
        },
        {
          "properties": {
            "with_padding": {
              "$ref": "#\/definitions\/base_property_exists"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "video_addAlbum_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "album_id": {
              "type": "integer",
              "description": "Created album ID",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_changeVideoAlbums_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_createComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "integer",
          "description": "Created comment ID",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getAlbumById_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/video_video_album_full",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getAlbumsByVideo_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_album_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getAlbumsByVideo_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "type": "integer",
            "description": "Album ID"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getAlbums_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_album_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getAlbums_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_album"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getComments_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              },
              "required": true
            },
            "current_level_count": {
              "type": "integer",
              "description": "Count of replies of current level"
            },
            "can_post": {
              "type": "boolean",
              "description": "Information whether current user can comment the post"
            },
            "show_reply_button": {
              "type": "boolean"
            },
            "groups_can_post": {
              "type": "boolean",
              "description": "Information whether groups can comment the post"
            },
            "real_offset": {
              "type": "integer"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            },
            "current_level_count": {
              "type": "integer",
              "description": "Count of replies of current level"
            },
            "can_post": {
              "type": "boolean",
              "description": "Information whether current user can comment the post"
            },
            "show_reply_button": {
              "type": "boolean"
            },
            "groups_can_post": {
              "type": "boolean",
              "description": "Information whether groups can comment the post"
            },
            "real_offset": {
              "type": "integer"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              }
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_restoreComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "description": "Returns 1 if request has been processed successfully, 0 if the comment is not found",
          "$ref": "#\/definitions\/base_bool_int",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_save_response": {
      "type": "object",
      "properties": {
        "response": {
          "$ref": "#\/definitions\/video_save_result",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_search_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/video_video_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "video_upload_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "size": {
              "type": "integer",
              "description": "Video size"
            },
            "video_id": {
              "type": "integer",
              "description": "Video ID"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_app_post": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Application ID"
        },
        "name": {
          "type": "string",
          "description": "Application name"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 604 px in width"
        }
      },
      "additionalProperties": false
    },
    "wall_attached_note": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "integer",
          "description": "Comments number",
          "minimum": 0,
          "required": true
        },
        "date": {
          "type": "integer",
          "description": "Date when the note has been created in Unixtime",
          "minimum": 0,
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Note ID",
          "minimum": 1,
          "required": true
        },
        "owner_id": {
          "type": "integer",
          "description": "Note owner's ID",
          "minimum": 1,
          "entity": "owner",
          "format": "int64",
          "required": true
        },
        "read_comments": {
          "type": "integer",
          "description": "Read comments number",
          "minimum": 0,
          "required": true
        },
        "title": {
          "type": "string",
          "description": "Note title",
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Note text"
        },
        "privacy_view": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "privacy_comment": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "can_comment": {
          "type": "integer"
        },
        "text_wiki": {
          "type": "string",
          "description": "Note wiki text"
        },
        "view_url": {
          "type": "string",
          "format": "uri",
          "description": "URL of the page with note preview",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_carousel_base": {
      "type": "object",
      "properties": {
        "carousel_offset": {
          "type": "integer",
          "minimum": 0,
          "description": "Index of current carousel element"
        }
      },
      "additionalProperties": false
    },
    "wall_comment_attachment": {
      "type": "object",
      "properties": {
        "audio": {
          "$ref": "#\/definitions\/audio_audio"
        },
        "doc": {
          "$ref": "#\/definitions\/docs_doc"
        },
        "link": {
          "$ref": "#\/definitions\/base_link"
        },
        "market": {
          "$ref": "#\/definitions\/market_market_item"
        },
        "market_market_album": {
          "$ref": "#\/definitions\/market_market_album"
        },
        "note": {
          "$ref": "#\/definitions\/wall_attached_note"
        },
        "page": {
          "$ref": "#\/definitions\/pages_wikipage_full"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "sticker": {
          "$ref": "#\/definitions\/base_sticker"
        },
        "type": {
          "$ref": "#\/definitions\/wall_comment_attachment_type",
          "required": true
        },
        "video": {
          "$ref": "#\/definitions\/video_video"
        }
      },
      "additionalProperties": false
    },
    "wall_comment_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "audio",
        "video",
        "doc",
        "link",
        "note",
        "page",
        "market_market_album",
        "market",
        "sticker"
      ]
    },
    "wall_geo": {
      "type": "object",
      "properties": {
        "coordinates": {
          "type": "string",
          "description": "Coordinates as string. <latitude> <longtitude>"
        },
        "place": {
          "$ref": "#\/definitions\/base_place"
        },
        "showmap": {
          "type": "integer",
          "description": "Information whether a map is showed"
        },
        "type": {
          "type": "string",
          "description": "Place type",
          "enum": [
            "place",
            "point"
          ]
        }
      },
      "additionalProperties": false
    },
    "wall_get_filter": {
      "description": "Filter to apply: 'owner' \u2014 posts by the wall owner, 'others' \u2014 posts by someone else, 'all' \u2014 posts by the wall owner and others (default), 'postponed' \u2014 timed posts (only available for calls with an 'access_token'), 'suggests' \u2014 suggested posts on a community wall",
      "type": "string",
      "enum": [
        "owner",
        "others",
        "all",
        "postponed",
        "suggests",
        "archived",
        "donut"
      ]
    },
    "wall_graffiti": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Graffiti ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Graffiti owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "photo_200": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 200 px in width"
        },
        "photo_586": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 586 px in width"
        },
        "height": {
          "type": "integer",
          "description": "Graffiti height",
          "minimum": 0
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Graffiti URL"
        },
        "width": {
          "type": "integer",
          "description": "Graffiti width",
          "minimum": 0
        },
        "access_key": {
          "type": "string",
          "description": "Access key for graffiti"
        }
      },
      "additionalProperties": false
    },
    "wall_post_copyright": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "link": {
          "type": "string",
          "required": true
        },
        "name": {
          "type": "string",
          "required": true
        },
        "type": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_post_source": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string",
          "description": "Additional data"
        },
        "platform": {
          "type": "string",
          "description": "Platform name"
        },
        "type": {
          "$ref": "#\/definitions\/wall_post_source_type"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "URL to an external site used to publish the post"
        },
        "link": {
          "$ref": "#\/definitions\/base_link"
        }
      },
      "additionalProperties": false
    },
    "wall_post_source_type": {
      "type": "string",
      "description": "Type of post source",
      "enum": [
        "vk",
        "widget",
        "api",
        "rss",
        "sms",
        "mvk"
      ]
    },
    "wall_post_type": {
      "type": "string",
      "description": "Post type",
      "enum": [
        "post",
        "copy",
        "reply",
        "postpone",
        "suggest",
        "post_ads",
        "photo",
        "video"
      ]
    },
    "wall_posted_photo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Photo ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Photo owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "photo_130": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 130 px in width"
        },
        "photo_604": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image with 604 px in width"
        }
      },
      "additionalProperties": false
    },
    "wall_views": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Count"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "minimum": 1,
          "required": true
        },
        "from_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Author ID",
          "required": true
        },
        "can_edit": {
          "$ref": "#\/definitions\/base_bool_int"
        },
        "post_id": {
          "type": "integer"
        },
        "owner_id": {
          "type": "integer",
          "entity": "owner",
          "format": "int64"
        },
        "parents_stack": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "photo_id": {
          "type": "integer"
        },
        "video_id": {
          "type": "integer"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "minimum": 0,
          "required": true
        },
        "text": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_comment_attachment"
          }
        },
        "donut": {
          "$ref": "#\/definitions\/wall_wall_comment_donut"
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes_info"
        },
        "real_offset": {
          "type": "integer",
          "description": "Real position of the comment"
        },
        "reply_to_user": {
          "type": "integer",
          "entity": "owner",
          "format": "int64",
          "description": "Replied user ID"
        },
        "reply_to_comment": {
          "type": "integer",
          "description": "Replied comment ID"
        },
        "thread": {
          "$ref": "#\/definitions\/comment_thread"
        },
        "deleted": {
          "type": "boolean"
        },
        "pid": {
          "type": "integer",
          "minimum": 0,
          "description": "Photo ID"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment_donut": {
      "type": "object",
      "properties": {
        "is_don": {
          "description": "Means commentator is donator",
          "type": "boolean"
        },
        "placeholder": {
          "$ref": "#\/definitions\/wall_wall_comment_donut_placeholder"
        }
      },
      "additionalProperties": false
    },
    "wall_wall_comment_donut_placeholder": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key to private object"
        },
        "is_deleted": {
          "type": "boolean"
        },
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_wallpost_attachment"
          }
        },
        "copyright": {
          "$ref": "#\/definitions\/wall_post_copyright",
          "description": "Information about the source of the post"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "edited": {
          "type": "integer",
          "minimum": 0,
          "description": "Date of editing in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID",
          "entity": "owner",
          "format": "int64"
        },
        "geo": {
          "$ref": "#\/definitions\/wall_geo"
        },
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "is_archived": {
          "type": "boolean",
          "description": "Is post archived, only for post owners"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Information whether the post in favorites list"
        },
        "likes": {
          "description": "Count of likes",
          "$ref": "#\/definitions\/base_likes_info"
        },
        "owner_id": {
          "type": "integer",
          "description": "Wall owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "post_id": {
          "type": "integer",
          "description": "If post type 'reply', contains original post ID"
        },
        "parents_stack": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "description": "If post type 'reply', contains original parent IDs stack"
        },
        "post_source": {
          "$ref": "#\/definitions\/wall_post_source"
        },
        "post_type": {
          "$ref": "#\/definitions\/wall_post_type"
        },
        "reposts": {
          "$ref": "#\/definitions\/base_reposts_info"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID",
          "entity": "owner",
          "format": "int64"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "views": {
          "description": "Count of views",
          "$ref": "#\/definitions\/wall_views"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_attachment": {
      "type": "object",
      "properties": {
        "access_key": {
          "type": "string",
          "description": "Access key for the audio"
        },
        "album": {
          "$ref": "#\/definitions\/photos_photo_album"
        },
        "app": {
          "$ref": "#\/definitions\/wall_app_post"
        },
        "audio": {
          "$ref": "#\/definitions\/audio_audio"
        },
        "doc": {
          "$ref": "#\/definitions\/docs_doc"
        },
        "event": {
          "$ref": "#\/definitions\/events_event_attach"
        },
        "group": {
          "$ref": "#\/definitions\/groups_group_attach"
        },
        "graffiti": {
          "$ref": "#\/definitions\/wall_graffiti"
        },
        "link": {
          "$ref": "#\/definitions\/base_link"
        },
        "market": {
          "$ref": "#\/definitions\/market_market_item"
        },
        "market_album": {
          "$ref": "#\/definitions\/market_market_album"
        },
        "note": {
          "$ref": "#\/definitions\/notes_note"
        },
        "page": {
          "$ref": "#\/definitions\/pages_wikipage_full"
        },
        "photo": {
          "$ref": "#\/definitions\/photos_photo"
        },
        "poll": {
          "$ref": "#\/definitions\/polls_poll"
        },
        "posted_photo": {
          "$ref": "#\/definitions\/wall_posted_photo"
        },
        "type": {
          "$ref": "#\/definitions\/wall_wallpost_attachment_type",
          "required": true
        },
        "video": {
          "$ref": "#\/definitions\/video_video_full"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_attachment_type": {
      "type": "string",
      "description": "Attachment type",
      "enum": [
        "photo",
        "photos_list",
        "posted_photo",
        "audio",
        "audio_playlist",
        "video",
        "doc",
        "link",
        "graffiti",
        "note",
        "app",
        "poll",
        "page",
        "album",
        "market_album",
        "market",
        "event",
        "donut_link",
        "article",
        "textlive",
        "textpost",
        "textpost_publish",
        "situational_theme",
        "group",
        "sticker",
        "podcast"
      ]
    },
    "wall_wallpost_comments_donut": {
      "type": "object",
      "properties": {
        "placeholder": {
          "$ref": "#\/definitions\/wall_wallpost_comments_donut_placeholder"
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_comments_donut_placeholder": {
      "description": "Info about paid comments feature",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_donut": {
      "description": "Info about paid wall post",
      "type": "object",
      "properties": {
        "is_donut": {
          "description": "Post only for dons",
          "type": "boolean",
          "required": true
        },
        "paid_duration": {
          "description": "Value of this field need to pass in wall.post\/edit in donut_paid_duration",
          "type": "integer"
        },
        "placeholder": {
          "description": "If placeholder was respond, text and all attachments will be hidden",
          "$ref": "#\/definitions\/wall_wallpost_donut_placeholder"
        },
        "can_publish_free_copy": {
          "description": "Says whether group admin can post free copy of this donut post",
          "type": "boolean"
        },
        "edit_mode": {
          "description": "Says what user can edit in post about donut properties",
          "type": "string",
          "enum": [
            "all",
            "duration"
          ]
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_donut_placeholder": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_wallpost_full": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#\/definitions\/wall_carousel_base"
        },
        {
          "$ref": "#\/definitions\/wall_wallpost"
        },
        {
          "properties": {
            "copy_history": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              }
            },
            "can_edit": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether current user can edit the post"
            },
            "created_by": {
              "type": "integer",
              "description": "Post creator ID (if post still can be edited)",
              "entity": "owner",
              "format": "int64"
            },
            "can_delete": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether current user can delete the post"
            },
            "can_pin": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether current user can pin the post"
            },
            "donut": {
              "$ref": "#\/definitions\/wall_wallpost_donut"
            },
            "is_pinned": {
              "type": "integer",
              "description": "Information whether the post is pinned"
            },
            "comments": {
              "$ref": "#\/definitions\/base_comments_info"
            },
            "marked_as_ads": {
              "$ref": "#\/definitions\/base_bool_int",
              "description": "Information whether the post is marked as ads"
            },
            "topic_id": {
              "type": "integer",
              "minimum": 0,
              "description": "Topic ID. Allowed values can be obtained from newsfeed.getPostTopics method",
              "enum": [
                0,
                1,
                7,
                12,
                16,
                19,
                21,
                23,
                25,
                26,
                32,
                43
              ],
              "enumNames": [
                "empty_topic",
                "art",
                "it",
                "games",
                "music",
                "photo",
                "science_and_tech",
                "sport",
                "travel",
                "tv_and_cinema",
                "humor",
                "fashion"
              ]
            },
            "short_text_rate": {
              "type": "number",
              "description": "Preview length control parameter",
              "minimum": 0,
              "maximum": 1
            },
            "hash": {
              "type": "string",
              "description": "Hash for sharing"
            }
          }
        }
      ],
      "additionalProperties": false
    },
    "wall_wallpost_to_id": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_wallpost_attachment"
          }
        },
        "comments": {
          "$ref": "#\/definitions\/base_comments_info"
        },
        "copy_owner_id": {
          "type": "integer",
          "description": "ID of the source post owner",
          "entity": "owner",
          "format": "int64"
        },
        "copy_post_id": {
          "type": "integer",
          "description": "ID of the source post"
        },
        "date": {
          "type": "integer",
          "description": "Date of publishing in Unixtime"
        },
        "from_id": {
          "type": "integer",
          "description": "Post author ID",
          "entity": "owner",
          "format": "int64"
        },
        "geo": {
          "$ref": "#\/definitions\/wall_geo"
        },
        "id": {
          "type": "integer",
          "description": "Post ID"
        },
        "is_favorite": {
          "type": "boolean",
          "description": "Information whether the post in favorites list"
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes_info"
        },
        "post_id": {
          "type": "integer",
          "description": "wall post ID (if comment)"
        },
        "post_source": {
          "$ref": "#\/definitions\/wall_post_source"
        },
        "post_type": {
          "$ref": "#\/definitions\/wall_post_type"
        },
        "reposts": {
          "$ref": "#\/definitions\/base_reposts_info"
        },
        "signer_id": {
          "type": "integer",
          "description": "Post signer ID",
          "entity": "owner",
          "format": "int64"
        },
        "text": {
          "type": "string",
          "description": "Post text"
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner's ID",
          "entity": "owner",
          "format": "int64"
        }
      },
      "additionalProperties": false
    },
    "wall_createComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "comment_id": {
              "type": "integer",
              "description": "Created comment ID",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_edit_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "post_id": {
              "type": "integer",
              "description": "Edited post ID",
              "minimum": 0,
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getById_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getById_legacy_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_wallpost_full"
          },
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getById_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              }
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getComment_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getComment_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getComments_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              },
              "required": true
            },
            "current_level_count": {
              "type": "integer",
              "description": "Count of replies of current level"
            },
            "can_post": {
              "type": "boolean",
              "description": "Information whether current user can comment the post"
            },
            "show_reply_button": {
              "type": "boolean"
            },
            "groups_can_post": {
              "type": "boolean",
              "description": "Information whether groups can comment the post"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wall_comment"
              },
              "required": true
            },
            "current_level_count": {
              "type": "integer",
              "description": "Count of replies of current level"
            },
            "can_post": {
              "type": "boolean",
              "description": "Information whether current user can comment the post"
            },
            "show_reply_button": {
              "type": "boolean"
            },
            "groups_can_post": {
              "type": "boolean",
              "description": "Information whether groups can comment the post"
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_getReposts_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_get_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_get_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_postAdsStealth_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "post_id": {
              "type": "integer",
              "description": "Created post ID",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_post_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "post_id": {
              "type": "integer",
              "description": "Created post ID",
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_repost_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "success": {
              "type": "integer",
              "default": 1,
              "required": true
            },
            "post_id": {
              "type": "integer",
              "description": "Created post ID",
              "required": true
            },
            "reposts_count": {
              "type": "integer",
              "description": "Reposts number",
              "minimum": 1,
              "required": true
            },
            "wall_repost_count": {
              "type": "integer",
              "description": "Reposts to wall number",
              "minimum": 0
            },
            "mail_repost_count": {
              "type": "integer",
              "description": "Reposts to mail number",
              "minimum": 0
            },
            "likes_count": {
              "type": "integer",
              "description": "Reposts number",
              "minimum": 0,
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_search_extended_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              },
              "required": true
            },
            "profiles": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/users_user_full"
              },
              "required": true
            },
            "groups": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/groups_group_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "wall_search_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/wall_wallpost_full"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "widgets_comment_media": {
      "type": "object",
      "properties": {
        "item_id": {
          "type": "integer",
          "description": "Media item ID"
        },
        "owner_id": {
          "type": "integer",
          "description": "Media owner's ID",
          "entity": "owner",
          "format": "int64"
        },
        "thumb_src": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image (type=photo only)"
        },
        "type": {
          "$ref": "#\/definitions\/widgets_comment_media_type"
        }
      },
      "additionalProperties": false
    },
    "widgets_comment_media_type": {
      "type": "string",
      "description": "Media type",
      "enum": [
        "audio",
        "photo",
        "video"
      ]
    },
    "widgets_comment_replies": {
      "type": "object",
      "properties": {
        "can_post": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can comment the post"
        },
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Comments number"
        },
        "replies": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/widgets_comment_replies_item"
          }
        }
      },
      "additionalProperties": false
    },
    "widgets_comment_replies_item": {
      "type": "object",
      "properties": {
        "cid": {
          "type": "integer",
          "description": "Comment ID"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime"
        },
        "likes": {
          "$ref": "#\/definitions\/widgets_widget_likes"
        },
        "text": {
          "type": "string",
          "description": "Comment text"
        },
        "uid": {
          "type": "integer",
          "description": "User ID"
        },
        "user": {
          "$ref": "#\/definitions\/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "widgets_widget_comment": {
      "type": "object",
      "properties": {
        "attachments": {
          "type": "array",
          "items": {
            "$ref": "#\/definitions\/wall_comment_attachment"
          }
        },
        "can_delete": {
          "$ref": "#\/definitions\/base_bool_int",
          "description": "Information whether current user can delete the comment"
        },
        "comments": {
          "$ref": "#\/definitions\/widgets_comment_replies"
        },
        "date": {
          "type": "integer",
          "description": "Date when the comment has been added in Unixtime",
          "required": true
        },
        "from_id": {
          "type": "integer",
          "description": "Comment author ID",
          "required": true
        },
        "id": {
          "type": "integer",
          "description": "Comment ID",
          "required": true
        },
        "likes": {
          "$ref": "#\/definitions\/base_likes_info"
        },
        "media": {
          "$ref": "#\/definitions\/widgets_comment_media"
        },
        "post_source": {
          "$ref": "#\/definitions\/wall_post_source"
        },
        "post_type": {
          "type": "integer",
          "description": "Post type",
          "required": true
        },
        "reposts": {
          "$ref": "#\/definitions\/base_reposts_info"
        },
        "text": {
          "type": "string",
          "description": "Comment text",
          "required": true
        },
        "to_id": {
          "type": "integer",
          "description": "Wall owner",
          "required": true
        },
        "user": {
          "$ref": "#\/definitions\/users_user_full"
        }
      },
      "additionalProperties": false
    },
    "widgets_widget_likes": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0,
          "description": "Likes number"
        }
      },
      "additionalProperties": false
    },
    "widgets_widget_page": {
      "type": "object",
      "properties": {
        "comments": {
          "$ref": "#\/definitions\/base_object_count"
        },
        "date": {
          "type": "integer",
          "description": "Date when widgets on the page has been initialized firstly in Unixtime"
        },
        "description": {
          "type": "string",
          "description": "Page description"
        },
        "id": {
          "type": "integer",
          "description": "Page ID"
        },
        "likes": {
          "$ref": "#\/definitions\/base_object_count"
        },
        "page_id": {
          "type": "string",
          "description": "page_id parameter value"
        },
        "photo": {
          "type": "string",
          "format": "uri",
          "description": "URL of the preview image"
        },
        "title": {
          "type": "string",
          "description": "Page title"
        },
        "url": {
          "type": "string",
          "format": "uri",
          "description": "Page absolute URL"
        }
      },
      "additionalProperties": false
    },
    "widgets_getComments_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "posts": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/widgets_widget_comment"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    },
    "widgets_getPages_response": {
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "properties": {
            "count": {
              "type": "integer",
              "description": "Total number",
              "required": true
            },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#\/definitions\/widgets_widget_page"
              },
              "required": true
            }
          },
          "additionalProperties": false,
          "required": true
        }
      },
      "additionalProperties": false
    }
  },
  "errors": {
    "api_error_unknown": {
      "code": 1,
      "description": "Unknown error occurred",
      "global": true
    },
    "api_error_disabled": {
      "code": 2,
      "description": "Application is disabled. Enable your application or use test mode",
      "global": true
    },
    "api_error_method": {
      "code": 3,
      "description": "Unknown method passed",
      "global": true
    },
    "api_error_signature": {
      "code": 4,
      "description": "Incorrect signature",
      "global": true
    },
    "api_error_auth": {
      "code": 5,
      "description": "User authorization failed",
      "global": true
    },
    "api_error_too_many": {
      "code": 6,
      "description": "Too many requests per second",
      "global": true
    },
    "api_error_permission": {
      "code": 7,
      "description": "Permission to perform this action is denied",
      "global": true
    },
    "api_error_request": {
      "code": 8,
      "description": "Invalid request",
      "global": true,
      "subcodes": [
        {
          "$ref": "#\/definitions\/subcodes\/user_reached_linked_accounts_limit"
        },
        {
          "$ref": "#\/definitions\/subcodes\/service_uuid_link_with_another_user"
        }
      ]
    },
    "api_error_flood": {
      "code": 9,
      "description": "Flood control",
      "global": true
    },
    "api_error_server": {
      "code": 10,
      "description": "Internal server error",
      "global": true
    },
    "api_error_enabled_in_test": {
      "code": 11,
      "description": "In test mode application should be disabled or user should be authorized",
      "global": true
    },
    "api_error_compile": {
      "code": 12,
      "description": "Unable to compile code"
    },
    "api_error_runtime": {
      "code": 13,
      "description": "Runtime error occurred during code invocation"
    },
    "api_error_captcha": {
      "code": 14,
      "description": "Captcha needed",
      "global": true
    },
    "api_error_access": {
      "code": 15,
      "description": "Access denied",
      "global": true
    },
    "api_error_auth_https": {
      "code": 16,
      "description": "HTTP authorization failed",
      "global": true
    },
    "api_error_auth_validation": {
      "code": 17,
      "description": "Validation required",
      "global": true
    },
    "api_error_user_deleted": {
      "code": 18,
      "description": "User was deleted or banned",
      "global": true
    },
    "api_error_blocked": {
      "code": 19,
      "description": "Content blocked"
    },
    "api_error_method_permission": {
      "code": 20,
      "description": "Permission to perform this action is denied for non-standalone applications",
      "global": true
    },
    "api_error_method_ads": {
      "code": 21,
      "description": "Permission to perform this action is allowed only for standalone and OpenAPI applications",
      "global": true
    },
    "api_error_upload": {
      "code": 22,
      "description": "Upload error"
    },
    "api_error_method_disabled": {
      "code": 23,
      "description": "This method was disabled",
      "global": true
    },
    "api_error_need_confirmation": {
      "code": 24,
      "description": "Confirmation required",
      "global": true
    },
    "api_error_need_token_confirmation": {
      "code": 25,
      "description": "Token confirmation required",
      "global": true
    },
    "api_error_group_auth": {
      "code": 27,
      "description": "Group authorization failed",
      "global": true
    },
    "api_error_app_auth": {
      "code": 28,
      "description": "Application authorization failed",
      "global": true
    },
    "api_error_rate_limit": {
      "code": 29,
      "description": "Rate limit reached",
      "global": true
    },
    "api_error_private_profile": {
      "code": 30,
      "description": "This profile is private",
      "global": true
    },
    "api_error_not_implemented_yet": {
      "code": 33,
      "description": "Not implemented yet",
      "global": true
    },
    "api_error_client_version_deprecated": {
      "code": 34,
      "description": "Client version deprecated",
      "global": true
    },
    "api_error_client_update_needed": {
      "code": 35,
      "description": "Client update needed"
    },
    "api_error_timeout": {
      "code": 36,
      "description": "Method execution was interrupted due to timeout"
    },
    "api_error_user_banned": {
      "code": 37,
      "description": "User was banned",
      "global": true
    },
    "api_error_unknown_application": {
      "code": 38,
      "description": "Unknown application",
      "global": true
    },
    "api_error_unknown_user": {
      "code": 39,
      "description": "Unknown user",
      "global": true
    },
    "api_error_unknown_group": {
      "code": 40,
      "description": "Unknown group",
      "global": true
    },
    "api_error_additional_signup_required": {
      "code": 41,
      "description": "Additional signup required",
      "global": true
    },
    "api_error_ip_is_not_allowed": {
      "code": 42,
      "description": "IP is not allowed",
      "global": true
    },
    "api_error_param": {
      "code": 100,
      "description": "One of the parameters specified was missing or invalid",
      "global": true
    },
    "api_error_param_api_id": {
      "code": 101,
      "description": "Invalid application API ID",
      "global": true
    },
    "api_error_limits": {
      "code": 103,
      "description": "Out of limits",
      "subcodes": [
        {
          "$ref": "#\/definitions\/subcodes\/too_many_communities"
        }
      ]
    },
    "api_error_not_found": {
      "code": 104,
      "description": "Not found"
    },
    "api_error_save_file": {
      "code": 105,
      "description": "Couldn't save file"
    },
    "api_error_action_failed": {
      "code": 106,
      "description": "Unable to process action"
    },
    "api_error_param_user_id": {
      "code": 113,
      "description": "Invalid user id",
      "global": true
    },
    "api_error_param_album_id": {
      "code": 114,
      "description": "Invalid album id"
    },
    "api_error_param_server": {
      "code": 118,
      "description": "Invalid server"
    },
    "api_error_param_title": {
      "code": 119,
      "description": "Invalid title"
    },
    "api_error_param_hash": {
      "code": 121,
      "description": "Invalid hash"
    },
    "api_error_param_photos": {
      "code": 122,
      "description": "Invalid photos"
    },
    "api_error_param_group_id": {
      "code": 125,
      "description": "Invalid group id"
    },
    "api_error_param_photo": {
      "code": 129,
      "description": "Invalid photo"
    },
    "api_error_param_page_id": {
      "code": 140,
      "description": "Page not found"
    },
    "api_error_access_page": {
      "code": 141,
      "description": "Access to page denied"
    },
    "api_error_mobile_not_activated": {
      "code": 146,
      "description": "The mobile number of the user is unknown"
    },
    "api_error_insufficient_funds": {
      "code": 147,
      "description": "Application has insufficient funds"
    },
    "api_error_param_timestamp": {
      "code": 150,
      "description": "Invalid timestamp",
      "global": true
    },
    "api_error_friends_list_id": {
      "code": 171,
      "description": "Invalid list id"
    },
    "api_error_friends_list_limit": {
      "code": 173,
      "description": "Reached the maximum number of lists"
    },
    "api_error_friends_add_yourself": {
      "code": 174,
      "description": "Cannot add user himself as friend"
    },
    "api_error_friends_add_in_enemy": {
      "code": 175,
      "description": "Cannot add this user to friends as they have put you on their blacklist"
    },
    "api_error_friends_add_enemy": {
      "code": 176,
      "description": "Cannot add this user to friends as you put him on blacklist"
    },
    "api_error_friends_add_not_found": {
      "code": 177,
      "description": "Cannot add this user to friends as user not found"
    },
    "api_error_param_note_id": {
      "code": 180,
      "description": "Note not found"
    },
    "api_error_access_note": {
      "code": 181,
      "description": "Access to note denied"
    },
    "api_error_access_note_comment": {
      "code": 182,
      "description": "You can't comment this note"
    },
    "api_error_access_comment": {
      "code": 183,
      "description": "Access to comment denied"
    },
    "api_error_access_album": {
      "code": 200,
      "description": "Access denied",
      "global": true
    },
    "api_error_access_audio": {
      "code": 201,
      "description": "Access denied",
      "global": true
    },
    "api_error_access_group": {
      "code": 203,
      "description": "Access to group denied",
      "global": true
    },
    "api_error_access_video": {
      "code": 204,
      "description": "Access denied"
    },
    "api_error_access_market": {
      "code": 205,
      "description": "Access denied"
    },
    "api_error_wall_access_post": {
      "code": 210,
      "description": "Access to wall's post denied"
    },
    "api_error_wall_access_comment": {
      "code": 211,
      "description": "Access to wall's comment denied"
    },
    "api_error_wall_access_replies": {
      "code": 212,
      "description": "Access to post comments denied"
    },
    "api_error_wall_access_add_reply": {
      "code": 213,
      "description": "Access to status replies denied"
    },
    "api_error_wall_add_post": {
      "code": 214,
      "description": "Access to adding post denied"
    },
    "api_error_wall_ads_published": {
      "code": 219,
      "description": "Advertisement post was recently added"
    },
    "api_error_wall_too_many_recipients": {
      "code": 220,
      "description": "Too many recipients"
    },
    "api_error_status_no_audio": {
      "code": 221,
      "description": "User disabled track name broadcast"
    },
    "api_error_wall_links_forbidden": {
      "code": 222,
      "description": "Hyperlinks are forbidden"
    },
    "api_error_wall_reply_owner_flood": {
      "code": 223,
      "description": "Too many replies"
    },
    "api_error_wall_ads_post_limit_reached": {
      "code": 224,
      "description": "Too many ads posts"
    },
    "api_error_wall_donut": {
      "code": 225,
      "description": "Donut is disabled"
    },
    "api_error_likes_reaction_can_not_be_applied": {
      "code": 232,
      "description": "Reaction can not be applied to the object"
    },
    "api_error_polls_access": {
      "code": 250,
      "description": "Access to poll denied"
    },
    "api_error_polls_poll_id": {
      "code": 251,
      "description": "Invalid poll id"
    },
    "api_error_polls_answer_id": {
      "code": 252,
      "description": "Invalid answer id"
    },
    "api_error_polls_access_without_vote": {
      "code": 253,
      "description": "Access denied, please vote first"
    },
    "api_error_access_groups": {
      "code": 260,
      "description": "Access to the groups list is denied due to the user's privacy settings"
    },
    "api_error_album_full": {
      "code": 300,
      "description": "This album is full",
      "global": true
    },
    "api_error_albums_limit": {
      "code": 302,
      "description": "Albums number limit is reached"
    },
    "api_error_votes_permission": {
      "code": 500,
      "description": "Permission denied. You must enable votes processing in application settings",
      "global": true
    },
    "api_error_ads_permission": {
      "code": 600,
      "description": "Permission denied. You have no access to operations specified with given object(s)",
      "global": true
    },
    "api_error_weighted_flood": {
      "code": 601,
      "description": "Permission denied. You have requested too many actions this day. Try later."
    },
    "api_error_ads_partial_success": {
      "code": 602,
      "description": "Some part of the request has not been completed"
    },
    "api_error_ads_specific": {
      "code": 603,
      "description": "Some ads error occurs",
      "global": true
    },
    "api_error_ads_object_deleted": {
      "code": 629,
      "description": "Object deleted"
    },
    "api_error_group_change_creator": {
      "code": 700,
      "description": "Cannot edit creator role"
    },
    "api_error_group_not_in_club": {
      "code": 701,
      "description": "User should be in club"
    },
    "api_error_group_too_many_officers": {
      "code": 702,
      "description": "Too many officers in club"
    },
    "api_error_group_need_2fa": {
      "code": 703,
      "description": "You need to enable 2FA for this action"
    },
    "api_error_group_host_need_2fa": {
      "code": 704,
      "description": "User needs to enable 2FA for this action"
    },
    "api_error_group_too_many_addresses": {
      "code": 706,
      "description": "Too many addresses in club"
    },
    "api_error_group_app_is_not_installed_in_community": {
      "code": 711,
      "description": "Application is not installed in community"
    },
    "api_error_group_invite_links_not_valid": {
      "code": 714,
      "description": "Invite link is invalid - expired, deleted or not exists"
    },
    "api_error_video_already_added": {
      "code": 800,
      "description": "This video is already added"
    },
    "api_error_video_comments_closed": {
      "code": 801,
      "description": "Comments for this video are closed"
    },
    "api_error_messages_user_blocked": {
      "code": 900,
      "description": "Can't send messages for users from blacklist"
    },
    "api_error_messages_deny_send": {
      "code": 901,
      "description": "Can't send messages for users without permission"
    },
    "api_error_messages_privacy": {
      "code": 902,
      "description": "Can't send messages to this user due to their privacy settings"
    },
    "api_error_messages_too_old_pts": {
      "code": 907,
      "description": "Value of ts or pts is too old"
    },
    "api_error_messages_too_new_pts": {
      "code": 908,
      "description": "Value of ts or pts is too new"
    },
    "api_error_messages_edit_expired": {
      "code": 909,
      "description": "Can't edit this message, because it's too old"
    },
    "api_error_messages_too_big": {
      "code": 910,
      "description": "Can't sent this message, because it's too big"
    },
    "api_error_messages_keyboard_invalid": {
      "code": 911,
      "description": "Keyboard format is invalid"
    },
    "api_error_messages_chat_bot_feature": {
      "code": 912,
      "description": "This is a chat bot feature, change this status in settings"
    },
    "api_error_messages_too_long_forwards": {
      "code": 913,
      "description": "Too many forwarded messages"
    },
    "api_error_messages_too_long_message": {
      "code": 914,
      "description": "Message is too long"
    },
    "api_error_messages_chat_user_no_access": {
      "code": 917,
      "description": "You don't have access to this chat"
    },
    "api_error_messages_cant_see_invite_link": {
      "code": 919,
      "description": "You can't see invite link for this chat"
    },
    "api_error_messages_edit_kind_disallowed": {
      "code": 920,
      "description": "Can't edit this kind of message"
    },
    "api_error_messages_cant_fwd": {
      "code": 921,
      "description": "Can't forward these messages"
    },
    "api_error_messages_cant_delete_for_all": {
      "code": 924,
      "description": "Can't delete this message for everybody"
    },
    "api_error_messages_chat_not_admin": {
      "code": 925,
      "description": "You are not admin of this chat"
    },
    "api_error_messages_chat_not_exist": {
      "code": 927,
      "description": "Chat does not exist"
    },
    "api_error_messages_cant_change_invite_link": {
      "code": 931,
      "description": "You can't change invite link for this chat"
    },
    "api_error_messages_group_peer_access": {
      "code": 932,
      "description": "Your community can't interact with this peer"
    },
    "api_error_messages_chat_user_not_in_chat": {
      "code": 935,
      "description": "User not found in chat"
    },
    "api_error_messages_contact_not_found": {
      "code": 936,
      "description": "Contact not found"
    },
    "api_error_messages_message_request_already_sent": {
      "code": 939,
      "description": "Message request already sent"
    },
    "api_error_messages_too_many_posts": {
      "code": 940,
      "description": "Too many posts in messages"
    },
    "api_error_messages_cant_pin_one_time_story": {
      "code": 942,
      "description": "Cannot pin one-time story"
    },
    "api_error_messages_intent_cant_use": {
      "code": 943,
      "description": "Cannot use this intent"
    },
    "api_error_messages_intent_limit_overflow": {
      "code": 944,
      "description": "Limits overflow for this intent"
    },
    "api_error_messages_chat_disabled": {
      "code": 945,
      "description": "Chat was disabled"
    },
    "api_error_messages_chat_unsupported": {
      "code": 946,
      "description": "Chat not supported"
    },
    "api_error_messages_member_access_to_group_denied": {
      "code": 947,
      "description": "Can't add user to chat, because user has no access to group"
    },
    "api_error_messages_cant_edit_pinned_yet": {
      "code": 949,
      "description": "Can't edit pinned message yet"
    },
    "api_error_messages_peer_blocked_reason_by_time": {
      "code": 950,
      "description": "Can't send message, reply timed out"
    },
    "api_error_messages_user_not_don": {
      "code": 962,
      "description": "You can't access donut chat without subscription"
    },
    "api_error_messages_message_cannot_be_forwarded": {
      "code": 969,
      "description": "Message cannot be forwarded"
    },
    "api_error_messages_cant_pin_expiring_message": {
      "code": 970,
      "description": "Cannot pin an expiring message"
    },
    "api_error_auth_flood_error": {
      "code": 1105,
      "description": "Too many auth attempts, try again later"
    },
    "api_error_auth_anonymous_token_has_expired": {
      "code": 1114,
      "description": "Anonymous token has expired",
      "global": true
    },
    "api_error_auth_anonymous_token_is_invalid": {
      "code": 1116,
      "description": "Anonymous token is invalid",
      "global": true
    },
    "api_error_param_doc_id": {
      "code": 1150,
      "description": "Invalid document id"
    },
    "api_error_param_doc_delete_access": {
      "code": 1151,
      "description": "Access to document deleting is denied"
    },
    "api_error_param_doc_title": {
      "code": 1152,
      "description": "Invalid document title"
    },
    "api_error_param_doc_access": {
      "code": 1153,
      "description": "Access to document is denied"
    },
    "api_error_photo_changed": {
      "code": 1160,
      "description": "Original photo was changed"
    },
    "api_error_too_many_lists": {
      "code": 1170,
      "description": "Too many feed lists"
    },
    "api_error_apps_already_unlocked": {
      "code": 1251,
      "description": "This achievement is already unlocked"
    },
    "api_error_apps_subscription_not_found": {
      "code": 1256,
      "description": "Subscription not found"
    },
    "api_error_apps_subscription_invalid_status": {
      "code": 1257,
      "description": "Subscription is in invalid status"
    },
    "api_error_invalid_address": {
      "code": 1260,
      "description": "Invalid screen name"
    },
    "api_error_communities_catalog_disabled": {
      "code": 1310,
      "description": "Catalog is not available for this user"
    },
    "api_error_communities_categories_disabled": {
      "code": 1311,
      "description": "Catalog categories are not available for this user"
    },
    "api_error_market_restore_too_late": {
      "code": 1400,
      "description": "Too late for restore"
    },
    "api_error_market_comments_closed": {
      "code": 1401,
      "description": "Comments for this market are closed"
    },
    "api_error_market_album_not_found": {
      "code": 1402,
      "description": "Album not found"
    },
    "api_error_market_item_not_found": {
      "code": 1403,
      "description": "Item not found"
    },
    "api_error_market_item_already_added": {
      "code": 1404,
      "description": "Item already added to album"
    },
    "api_error_market_too_many_items": {
      "code": 1405,
      "description": "Too many items"
    },
    "api_error_market_too_many_items_in_album": {
      "code": 1406,
      "description": "Too many items in album"
    },
    "api_error_market_too_many_albums": {
      "code": 1407,
      "description": "Too many albums"
    },
    "api_error_market_item_has_bad_links": {
      "code": 1408,
      "description": "Item has bad links in description"
    },
    "api_error_market_extended_not_enabled": {
      "code": 1409,
      "description": "Extended market not enabled"
    },
    "api_error_market_grouping_items_with_different_properties": {
      "code": 1412,
      "description": "Grouping items with different properties"
    },
    "api_error_market_grouping_already_has_such_variant": {
      "code": 1413,
      "description": "Grouping already has such variant"
    },
    "api_error_market_variant_not_found": {
      "code": 1416,
      "description": "Variant not found"
    },
    "api_error_market_property_not_found": {
      "code": 1417,
      "description": "Property not found"
    },
    "api_error_market_grouping_must_contain_more_than_one_item": {
      "code": 1425,
      "description": "Grouping must have two or more items"
    },
    "api_error_market_grouping_items_must_have_distinct_properties": {
      "code": 1426,
      "description": "Item must have distinct properties"
    },
    "api_error_market_orders_no_cart_items": {
      "code": 1427,
      "description": "Cart is empty"
    },
    "api_error_market_invalid_dimensions": {
      "code": 1429,
      "description": "Specify width, length, height and weight all together"
    },
    "api_error_market_cant_change_vkpay_status": {
      "code": 1430,
      "description": "VK Pay status can not be changed"
    },
    "api_error_market_shop_already_enabled": {
      "code": 1431,
      "description": "Market was already enabled in this group"
    },
    "api_error_market_shop_already_disabled": {
      "code": 1432,
      "description": "Market was already disabled in this group"
    },
    "api_error_market_photos_crop_invalid_format": {
      "code": 1433,
      "description": "Invalid image crop format"
    },
    "api_error_market_photos_crop_overflow": {
      "code": 1434,
      "description": "Crop bottom right corner is outside of the image"
    },
    "api_error_market_photos_crop_size_too_low": {
      "code": 1435,
      "description": "Crop size is less than the minimum"
    },
    "api_error_market_not_enabled": {
      "code": 1438,
      "description": "Market not enabled"
    },
    "api_error_market_album_main_hidden": {
      "code": 1446,
      "description": "Main album can not be hidden"
    },
    "api_error_story_expired": {
      "code": 1600,
      "description": "Story has already expired"
    },
    "api_error_story_incorrect_reply_privacy": {
      "code": 1602,
      "description": "Incorrect reply privacy"
    },
    "api_error_pretty_cards_card_not_found": {
      "code": 1900,
      "description": "Card not found"
    },
    "api_error_pretty_cards_too_many_cards": {
      "code": 1901,
      "description": "Too many cards"
    },
    "api_error_pretty_cards_card_is_connected_to_post": {
      "code": 1902,
      "description": "Card is connected to post"
    },
    "api_error_callback_api_servers_limit": {
      "code": 2000,
      "description": "Servers number limit is reached"
    },
    "api_error_stickers_not_purchased": {
      "code": 2100,
      "description": "Stickers are not purchased"
    },
    "api_error_stickers_too_many_favorites": {
      "code": 2101,
      "description": "Too many favorite stickers"
    },
    "api_error_stickers_not_favorite": {
      "code": 2102,
      "description": "Stickers are not favorite"
    },
    "api_error_wall_check_link_cant_determine_source": {
      "code": 3102,
      "description": "Specified link is incorrect (can't find source)"
    },
    "api_error_recaptcha": {
      "code": 3300,
      "description": "Recaptcha needed",
      "global": true
    },
    "api_error_phone_validation_need": {
      "code": 3301,
      "description": "Phone validation needed",
      "global": true
    },
    "api_error_password_validation_need": {
      "code": 3302,
      "description": "Password validation needed",
      "global": true
    },
    "api_error_otp_validation_need": {
      "code": 3303,
      "description": "Otp app validation needed",
      "global": true
    },
    "api_error_email_confirmation_need": {
      "code": 3304,
      "description": "Email confirmation needed",
      "global": true
    },
    "api_error_assert_votes": {
      "code": 3305,
      "description": "Assert votes",
      "global": true
    },
    "api_error_token_extension_required": {
      "code": 3609,
      "description": "Token extension required",
      "global": true
    },
    "api_error_user_deactivated": {
      "code": 3610,
      "description": "User is deactivated",
      "global": true
    },
    "api_error_user_service_deactivated": {
      "code": 3611,
      "description": "Service is deactivated for user",
      "global": true
    },
    "api_error_fave_aliexpress_tag": {
      "code": 3800,
      "description": "Can't set AliExpress tag to this type of object"
    }
  }
}